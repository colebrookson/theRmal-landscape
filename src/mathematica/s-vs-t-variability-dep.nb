(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    610522,      12686]
NotebookOptionsPosition[    602667,      12569]
NotebookOutlinePosition[    603082,      12586]
CellTagsIndexPosition[    603039,      12583]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Components of variability", "Title",
 CellChangeTimes->{{3.9585077269563093`*^9, 
  3.958507733076024*^9}},ExpressionUUID->"a8119b86-1e32-4f11-90d2-\
980d7e3fd386"],

Cell["\<\
We want to articulate how changing components of temperature vs supply (since \
we are drawing both from a distribution) change R0 / phi\
\>", "Text",
 CellChangeTimes->{{3.9585077418695374`*^9, 
  3.958507771403966*^9}},ExpressionUUID->"8f24a61f-381a-4788-9cc5-\
63471b54db08"],

Cell[CellGroupData[{

Cell["Parameters & Helpers", "Subtitle",
 CellChangeTimes->{{3.958510775063311*^9, 
  3.9585107815971518`*^9}},ExpressionUUID->"151c4968-4bf8-4657-a3f5-\
fc38a7260e37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"00", "  ", "Directory", " ", "helpers"}], 
   "                                                   ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "munfl"}], "]"}], " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"main", " ", "figure", " ", "directory", " ", 
     RowBox[{"(", 
      RowBox[{"relative", " ", "to", " ", "this", " ", "notebook"}], ")"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"figDir", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<..\>\"", ",", 
        " ", "\"\<..\>\"", ",", " ", "\"\<figs\>\"", ",", " ", "\"\<si\>\"", ",",
         " ", "\n", "                       ", "\"\<s-vs-t-variability\>\""}],
        "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", " ", 
       RowBox[{"DirectoryQ", "[", "figDir", "]"}]}], ",", " ", "\n", "  ", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"figDir", ",", " ", 
        RowBox[{"CreateIntermediateDirectories", " ", "->", " ", "True"}]}], 
       "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "data", " ", "directory", " ", "for", " ", "binary", " ", "objects"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataDir", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<..\>\"", ",", 
        " ", "\"\<..\>\"", ",", " ", "\"\<outputs\>\"", ",", " ", "\n", 
        "                        ", "\"\<intermediate-obs\>\"", ",", 
        " ", "\"\<s-vs-t-variability\>\""}], "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", " ", 
       RowBox[{"DirectoryQ", "[", "dataDir", "]"}]}], ",", " ", "\n", "  ", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"dataDir", ",", " ", 
        RowBox[{"CreateIntermediateDirectories", " ", "->", " ", "True"}]}], 
       "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"01", "  ", "Environmental", " ", "response", " ", "functions"}], 
    "                                    ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "ImaxFunc", ",", " ", "RespirationFunc", ",", " ", "SuitabilityFunc"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
      RowBox[{"adjust", " ", 
       RowBox[{"TI", " ", "/", " ", "gamma"}], " ", "for", " ", "species"}], "-", 
      RowBox[{"specific", " ", "thermal", " ", "curve"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImaxFunc", "[", 
      RowBox[{"T_", ",", " ", "TI_", ",", " ", "gamma_"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"T", " ", "-", " ", "TI"}], ")"}], "^", "2"}], ")"}]}], "/",
        "gamma"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"TODO", ":", " ", 
      RowBox[{"refine", " ", "metabolic", " ", "parameters", " ", "ma"}]}], ",",
      " ", "mb", ",", " ", "mc"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RespirationFunc", "[", 
      RowBox[{"T_", ",", " ", 
       RowBox[{"{", 
        RowBox[{"ma_", ",", " ", "mb_", ",", " ", "mc_"}], "}"}]}], "]"}], 
     " ", ":=", " ", 
     RowBox[{
      RowBox[{"ma", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"mb", "*", "T"}], "]"}]}], " ", "+", " ", "mc"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SuitabilityFunc", "[", 
      RowBox[{"T_", ",", " ", "S_", ",", " ", "params_Association"}], "]"}], 
     " ", ":=", "\n", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"imax", ",", " ", "m"}], "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"imax", " ", "=", " ", 
         RowBox[{"ImaxFunc", "[", 
          RowBox[{"T", ",", " ", 
           RowBox[{"params", "[", "\"\<TI\>\"", "]"}], ",", " ", 
           RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"m", "    ", "=", " ", 
         RowBox[{"RespirationFunc", "[", 
          RowBox[{"T", ",", " ", 
           RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"imax", "*", "S"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"S", " ", "+", " ", 
              RowBox[{"params", "[", "\"\<Shalf\>\"", "]"}]}], ")"}]}], " ", "-",
            " ", "m"}]}], "]"}]}]}], "\n", " ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"02", "  ", "Landscape", " ", "generator"}], 
    "                                                 ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "MakeLandscape", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeLandscape", "[", 
      RowBox[{
      "nPatches_", ",", " ", "meanT_", ",", " ", "varT_", ",", " ", "meanS_", 
       ",", " ", "varS_", ",", " ", "suitParams_"}], "]"}], " ", ":=", "\n", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "temps", ",", " ", "supp", ",", " ", "wRaw", ",", " ", "wNorm"}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"temps", " ", "=", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"meanT", ",", " ", "varT"}], "]"}], ",", " ", 
           "nPatches"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"supp", "  ", "=", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"meanS", ",", " ", "varS"}], "]"}], ",", " ", 
           "nPatches"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"wRaw", "  ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SuitabilityFunc", "[", 
             RowBox[{"#1", ",", " ", "#2", ",", " ", "suitParams"}], "]"}], 
            " ", "&"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"temps", ",", " ", "supp"}], "}"}]}], "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"wNorm", " ", "=", " ", 
         RowBox[{"wRaw", "/", 
          RowBox[{"Total", "[", "wRaw", "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"ensure", " ", 
           RowBox[{"\[Sum]", " ", "w_i"}]}], " ", "=", " ", "1"}], " ", 
         "*)"}], "\n", "   ", 
        RowBox[{"AssociationThread", "[", "\n", "     ", 
         RowBox[{
          RowBox[{"Range", "[", "nPatches", "]"}], ",", "\n", "     ", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<T\>\"", " ", "->", " ", "#1"}], ",", " ", 
               RowBox[{"\"\<S\>\"", " ", "->", " ", "#2"}], ",", " ", 
               RowBox[{"\"\<w\>\"", " ", "->", " ", "#3"}]}], "|>"}], " ", 
             "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"temps", ",", " ", "supp", ",", " ", "wNorm"}], "}"}]}], 
           "]"}]}], "\n", "   ", "]"}]}]}], "\n", " ", "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"03", "  ", "Patch"}], "-", 
     RowBox[{"level", " ", "\[CurlyPhi]", " ", "and", " ", "landscape"}], "-", 
     RowBox[{"level", " ", "R0"}]}], "                                ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"PatchPhi", ",", " ", "PhiLandscape"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PhiI", "[", 
      RowBox[{"Stotal_", ",", " ", "patch_", ",", " ", "epsF_"}], "]"}], " ", 
     ":=", "\n", "  ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"w", " ", "=", " ", 
          RowBox[{"patch", "[", "\"\<w\>\"", "]"}]}], ",", " ", 
         RowBox[{"eps", " ", "=", " ", 
          RowBox[{"epsF", "[", 
           RowBox[{"patch", "[", "\"\<T\>\"", "]"}], "]"}]}]}], "}"}], ",", 
       "\n", "    ", 
       RowBox[{"eps", " ", "*", " ", "w", " ", "*", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", "w"}], ")"}], "^", "Stotal"}]}], 
         ")"}]}]}], "\n", "  ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"R0", " ", "=", " ", 
     RowBox[{
     "\[CapitalSigma]", " ", "\[CapitalPhi]_i", " ", "over", " ", "all", " ", 
      "patches"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R0fromLandscape", "[", 
      RowBox[{
      "landscape_Association", ",", " ", "Stotal_", ",", " ", "epsF_"}], 
      "]"}], " ", ":=", "\n", "  ", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PhiI", "[", 
         RowBox[{"Stotal", ",", " ", "#", ",", " ", "epsF"}], "]"}], " ", 
        "&"}], " ", "/@", " ", 
       RowBox[{"Values", "[", "landscape", "]"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"04", "  ", "\[CurlyEpsilon]", 
     RowBox[{"(", "T", ")"}], " ", "constructor", " ", 
     RowBox[{"(", 
      RowBox[{"scalar", " ", "or", " ", "function"}], ")"}]}], 
    "                               ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "MakeEpsilonFunc", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeEpsilonFunc", "[", "epsSpec_", "]"}], " ", ":=", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NumericQ", "[", "epsSpec", "]"}], ",", "\n", "     ", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "T", "}"}], ",", " ", "epsSpec"}], "]"}], ",", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{"constant", " ", "transmission", " ", "prob"}], " ", "*)"}], 
       "\n", "     ", "epsSpec"}], "                   ", 
      RowBox[{"(*", " ", 
       RowBox[{"already", " ", "a", " ", "function"}], " ", "*)"}], "\n", 
      "  ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "choose", " ", "one", " ", "of", " ", "the", " ", "following", " ", 
      "definitions"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"epsFunc", " ", "=", " ", 
     RowBox[{"MakeEpsilonFunc", "[", "1", "]"}]}], ";"}], 
   "                                        ", 
   RowBox[{"(*", " ", 
    RowBox[{"constant", " ", "1"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"epsFunc", " ", "=", " ", 
      RowBox[{"MakeEpsilonFunc", "[", "0.3", "]"}]}], ";"}], 
    "                                   ", 
    RowBox[{"(*", " ", 
     RowBox[{"constant", " ", "0.3"}], " ", "*)"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"epsFunc", " ", "=", " ", 
      RowBox[{"MakeEpsilonFunc", "[", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "T", "}"}], ",", " ", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", " ", "+", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "0.25"}], " ", 
              RowBox[{"(", 
               RowBox[{"T", " ", "-", " ", "22"}], ")"}]}], "]"}]}], 
           ")"}]}]}], "]"}], "]"}]}], ";"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"05", "  ", "Global", " ", "simulation", " ", "parameters"}], 
    "                                        ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"heterogeneity", " ", "grid"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmaTList", "  ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"0.0001", ",", " ", "5", ",", " ", "0.5"}], "]"}]}], ";"}], 
   "     ", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"widen", " ", "or", " ", "narrow", " ", "grid"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"sigmaSList", "  ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"0.0001", ",", " ", "3", ",", " ", "0.5"}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"suitability", "-", 
     RowBox[{"function", " ", "constants"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"suitParams", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<TI\>\"", "     ", "->", " ", "25"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Optimal", " ", "temperature"}], " ", "*)"}], "\n", "  ", 
       RowBox[{"\"\<gamma\>\"", "  ", "->", " ", "150"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Temperature", " ", "response", " ", "breadth"}], " ", "*)"}],
        "\n", "  ", 
       RowBox[{"\"\<Shalf\>\"", "  ", "->", " ", "0.5"}], ",", "\n", "  ", 
       RowBox[{"\"\<mParams\>\"", "->", " ", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", " ", "0.1", ",", " ", "0.05"}], "}"}]}]}], "\n",
       "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"fixed", " ", "means", " ", "for", " ", "temperature"}], " ", 
      "&"}], " ", "supply"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanT", " ", "=", " ", "22"}], ";"}], "        ", 
   RowBox[{"(*", " ", "\[Degree]C", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"varT", "  ", "=", " ", "1"}], ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"TODO", ":", " ", 
      RowBox[{"confirm", " ", "this", " ", "is", " ", "SD"}]}], ",", " ", 
     RowBox[{"not", " ", "variance"}]}], "        ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanS", " ", "=", " ", "0.8"}], ";"}], "        ", 
   RowBox[{"(*", " ", 
    RowBox[{"resource", " ", "units"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"varS", "  ", "=", " ", "0.2"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", 
    RowBox[{"All", " ", "needed", " ", 
     RowBox[{"parameters", ":", "\n", 
      RowBox[{
       RowBox[{"-", " ", "nReps"}], "\n", "-", " ", "nPatches", "\n", "-", 
       " ", "sTotal", "\n", "-", " ", "varR", "\n", "-", " ", "meanR", "\n", "-",
        " ", "varT", "\n", "-", " ", "meanT", "\n", "-", " ", "optT", "\n", "-",
        " ", "rHalf", "\n", "-", " ", "mParams", "\n", "-", " ", 
       "respBreadth", "\n", "-", " ", "epsF", "\n", "-"}]}]}], " ", "\n", 
    "\n", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.958510799982607*^9, 3.958510866011855*^9}, {
   3.9585109283505507`*^9, 3.958510946981083*^9}, {3.958512160669455*^9, 
   3.9585121919302797`*^9}, {3.9585125654364643`*^9, 3.95851257566392*^9}, {
   3.958513338528481*^9, 3.958513369629518*^9}, 3.958513559360702*^9, {
   3.9585141935039997`*^9, 3.958514202708664*^9}, 3.9585142383795977`*^9, {
   3.958514275164075*^9, 3.958514290934218*^9}, 3.9585143295774517`*^9, {
   3.958514453520926*^9, 3.958514464629504*^9}, {3.958514515354886*^9, 
   3.958514515706321*^9}, 3.958514642428607*^9, {3.958514677396441*^9, 
   3.958514682509398*^9}, {3.958514724071446*^9, 3.9585147244808273`*^9}, {
   3.958514808347877*^9, 3.958514811741686*^9}, {3.958514868948895*^9, 
   3.958514873056185*^9}, {3.958514913716728*^9, 3.9585149565002537`*^9}, {
   3.9585149896181517`*^9, 3.958515004850318*^9}, {3.958515483747059*^9, 
   3.958515484619032*^9}, {3.958515535495434*^9, 3.958515569074524*^9}, {
   3.958516196596941*^9, 3.958516209180162*^9}, 3.958516265144867*^9, {
   3.958516422965742*^9, 3.958516471031938*^9}, {3.958518417600801*^9, 
   3.9585184278841963`*^9}, {3.95851916517916*^9, 3.958519166510583*^9}, {
   3.958519929659829*^9, 3.95851993555056*^9}, {3.9593293221635447`*^9, 
   3.9593293358830347`*^9}, {3.95932945155376*^9, 3.959329510243647*^9}, {
   3.959329611914097*^9, 
   3.959329760959107*^9}},ExpressionUUID->"bf493423-53b4-42a8-ab97-\
294ee749b49a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
How does increasing heterogeneity in T and R change the basic reproduction \
number R0\:200b?\
\>", "Subtitle",
 CellChangeTimes->{
  3.958511698133609*^9, {3.958511746779091*^9, 
   3.95851180862554*^9}},ExpressionUUID->"0bd0f849-9601-4592-a5d1-\
37fc5cf21112"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "06", "  ", "Full", " ", "run", " ", "for", " ", "a", " ", "list", " ", 
    "of", " ", "\[CurlyEpsilon]", 
    RowBox[{"(", "T", ")"}], " ", "definitions"}], 
   "                             ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"nReplicates", " ", "=", " ", "10"}], ";"}], "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "how", " ", "many", " ", "landscapes", " ", "per", " ", "grid", " ", 
     "point"}], "            ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"nPatches", "    ", "=", " ", "2000"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"patches", " ", "in", " ", "each", " ", "landscape"}], 
    "                     ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Stotal", "      ", "=", " ", "1500"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "total", " ", "susceptibles", " ", "on", " ", "the", " ", "whole", " ", 
     "landscape"}], "     ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "message"}]}]}]}]}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"hygiene", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}], "--"}]}], "-"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{"Off", "[", 
      RowBox[{"General", "::", "munfl"}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"General", "::", "munfl"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "list"}]}]}]}]}], " ", "of", " ", 
      "\[CurlyEpsilon]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"specs", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}], "--"}]}], "-"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"epsConfigs", " ", "=", " ", 
     RowBox[{"{", "\n", "  ", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<label\>\"", " ", "->", " ", "\"\<eps1.0\>\""}], ",", 
         "      ", 
         RowBox[{"\"\<func\>\"", " ", "->", " ", 
          RowBox[{"MakeEpsilonFunc", "[", "1", "]"}]}]}], 
        "                             ", "|>"}], ",", "\n", "  ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<label\>\"", " ", "->", " ", "\"\<eps0.3\>\""}], ",", 
         "      ", 
         RowBox[{"\"\<func\>\"", " ", "->", " ", 
          RowBox[{"MakeEpsilonFunc", "[", "0.3", "]"}]}]}], 
        "                           ", "|>"}], ",", "\n", "  ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<label\>\"", " ", "->", " ", "\"\<epsLogistic\>\""}], ",",
          " ", 
         RowBox[{"\"\<func\>\"", " ", "->", " ", 
          RowBox[{
          "MakeEpsilonFunc", "[", "\n", 
           "                                      ", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "T", "}"}], ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", " ", "+", " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "0.25"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"T", " ", "-", " ", "22"}], ")"}]}], "]"}]}], 
               ")"}]}]}], "]"}], "]"}]}]}], "     ", "|>"}], ",", "\n", "  ", 
       
       RowBox[{"<|", " ", 
        RowBox[{
         RowBox[{"\"\<label\>\"", " ", "->", " ", "\"\<epsGaussian\>\""}], ",",
          " ", 
         RowBox[{"\"\<func\>\"", " ", "->", " ", 
          RowBox[{
          "MakeEpsilonFunc", "[", "\n", 
           "                                      ", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "T", "}"}], ",", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"T", " ", "-", " ", "25"}], ")"}], "^", "2"}], 
                 ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{"5", "^", "2"}]}], ")"}]}], "]"}]}], "]"}], 
           "]"}]}]}], "   ", "|>"}]}], "\n", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "pick", " ", "slice", " ", "points", " ", "for", " ", "diagnostics"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sliceSigmaT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "0.5", ",", " ", "1", ",", " ", "1.5", ",", " ", "2", ",",
        " ", "3"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sliceSigmaS", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "0.5", ",", " ", "1", ",", " ", "1.5", ",", " ", "2", ",",
        " ", "3"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"baselineSigmaT", " ", "=", " ", "1"}], ";", "   ", 
    RowBox[{"baselineSigmaS", " ", "=", " ", "1"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", 
         RowBox[{"helper", ":", " ", 
          RowBox[{
           RowBox[{
           "run", " ", "grid", " ", "for", " ", "ONE", " ", "\[CurlyEpsilon]",
             " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"definition", " ", "--"}], "--"}], "--"}], "--"}],
                   "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}], 
           "-"}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "runGridForEps", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"runGridForEps", "[", 
      RowBox[{"epsLabel_String", ",", " ", "epsF_"}], "]"}], " ", ":=", "\n", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "computeR0", ",", " ", "resultGrid", ",", " ", "phiMeans", ",", " ", 
         "phiSDs", ",", " ", "surfaceData", ",", " ", "surfacePlot", ",", 
         "\n", "         ", "phiSliceT", ",", " ", "phiSliceS", ",", " ", 
         "plotT", ",", " ", "plotS", ",", " ", "sliceGrid"}], "}"}], ",", 
       "\n", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", " ", "numerics"}]}], " ", "for", " ", "one", " ", 
          "\[Sigma]_T"}], ",", " ", 
         RowBox[{"\[Sigma]_S", " ", "pair"}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{
        RowBox[{"ClearAll", "[", "computeR0", "]"}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"computeR0", "[", 
          RowBox[{"sigT_", ",", " ", "sigS_"}], "]"}], " ", ":=", "\n", 
         "    ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "rVals", "}"}], ",", "\n", "      ", 
           RowBox[{
            RowBox[{"rVals", " ", "=", " ", 
             RowBox[{"Table", "[", "\n", "        ", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"land", " ", "=", " ", 
                   RowBox[{"MakeLandscape", "[", 
                    RowBox[{
                    "nPatches", ",", " ", "meanT", ",", " ", "sigT", ",", 
                    "\n", "                                   ", "meanS", ",",
                     " ", "sigS", ",", " ", "suitParams"}], "]"}]}], "}"}], ",",
                  "\n", "          ", 
                 RowBox[{"PhiFromLandscape", "[", 
                  RowBox[{"land", ",", " ", "Stotal", ",", " ", "epsF"}], 
                  "]"}]}], "\n", "        ", "]"}], ",", "\n", "        ", 
               RowBox[{"{", "nReplicates", "}"}]}], "\n", "      ", "]"}]}], ";",
             "\n", "      ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Mean", "[", "rVals", "]"}], ",", " ", 
              RowBox[{"StandardDeviation", "[", "rVals", "]"}]}], "}"}]}]}], 
          "\n", "    ", "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<###  \[CurlyEpsilon] = \>\"", ",", " ", "epsLabel", ",",
           " ", "\"\<  \[Dash] running grid\[Ellipsis]\>\""}], "]"}], ";", 
        "\n", "\n", "  ", 
        RowBox[{"resultGrid", " ", "=", " ", 
         RowBox[{"ParallelTable", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"computeR0", "[", 
            RowBox[{"sigT", ",", " ", "sigS"}], "]"}], ",", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{"sigT", ",", " ", "sigmaTList"}], "}"}], ",", "\n", 
           "     ", 
           RowBox[{"{", 
            RowBox[{"sigS", ",", " ", "sigmaSList"}], "}"}]}], "\n", "  ", 
          "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"phiMeans", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"First", ",", " ", "resultGrid", ",", " ", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"phiSDs", "   ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"Last", ",", "  ", "resultGrid", ",", " ", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", " ", "3"}]}], "-", 
          RowBox[{"D", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"surface", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                   "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
            "--"}]}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"surfaceData", " ", "=", " ", 
         RowBox[{"Flatten", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"sigmaTList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
               RowBox[{"sigmaSList", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
               RowBox[{"phiMeans", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "}"}], ",", 
             "\n", "           ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Length", "[", "sigmaTList", "]"}]}], "}"}], ",", " ", 
             
             RowBox[{"{", 
              RowBox[{"j", ",", " ", 
               RowBox[{"Length", "[", "sigmaSList", "]"}]}], "}"}]}], "]"}], ",",
            "\n", "     ", "1"}], "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"surfacePlot", " ", "=", " ", 
         RowBox[{"ListPlot3D", "[", "\n", "     ", 
          RowBox[{"surfaceData", ",", "\n", "     ", 
           RowBox[{"Mesh", "          ", "->", " ", "None"}], ",", "\n", 
           "     ", 
           RowBox[{"AxesLabel", "     ", "->", " ", 
            RowBox[{"{", 
             
             RowBox[{"\"\<\[Sigma]_T\>\"", ",", " ", "\"\<\[Sigma]_S\>\"", ",",
               " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "     ", 
           RowBox[{
           "ColorFunction", " ", "->", " ", "\"\<TemperatureMap\>\""}], ",", 
           "\n", "     ", 
           RowBox[{"PlotRange", "     ", "->", " ", "All"}]}], "\n", "  ", 
          "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"Print", "[", "surfacePlot", "]"}], "\n", "  ", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"figDir", ",", "\n", "          ", 
              
              RowBox[{"\"\<phi-surface-\>\"", " ", "<>", " ", "epsLabel", " ",
                "<>", " ", "\"\<.png\>\""}]}], "}"}], "]"}], ",", " ", 
           "surfacePlot", ",", " ", "\"\<PNG\>\""}], "]"}]}], ";", "\n", "\n",
         "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", " ", "1"}]}], "-", 
          RowBox[{"D", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"slices", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                   "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
            "--"}]}], "-"}], " ", "*)"}], "\n", "  ", 
        RowBox[{"phiSliceT", " ", "=", " ", 
         RowBox[{"ParallelMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"computeR0", "[", 
              RowBox[{"#", ",", " ", "baselineSigmaS"}], "]"}]}], " ", "&"}], 
           ",", " ", "sliceSigmaT"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"phiSliceS", " ", "=", " ", 
         RowBox[{"ParallelMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"computeR0", "[", 
              RowBox[{"baselineSigmaT", ",", " ", "#"}], "]"}]}], " ", "&"}], 
           ",", " ", "sliceSigmaS"}], "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"plotT", " ", "=", " ", 
         RowBox[{"ListPlot", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"sliceSigmaT", ",", " ", "phiSliceT"}], "}"}], "]"}], ",",
            "\n", "     ", 
           RowBox[{"Joined", "      ", "->", " ", "True"}], ",", " ", 
           RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "     ", 
           RowBox[{"FrameLabel", "  ", "->", " ", 
            RowBox[{"{", 
             
             RowBox[{"\"\<\[Sigma]_T (Temp SD)\>\"", ",", 
              " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "     ", 
           RowBox[{"PlotMarkers", " ", "->", " ", "Automatic"}], ",", "\n", 
           "     ", 
           RowBox[{"PlotLabel", "   ", "->", " ", 
            
            RowBox[{"\"\<Temp variability \[Dash] \>\"", " ", "<>", " ", 
             "epsLabel"}]}]}], "\n", "  ", "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"plotS", " ", "=", " ", 
         RowBox[{"ListPlot", "[", "\n", "     ", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"sliceSigmaS", ",", " ", "phiSliceS"}], "}"}], "]"}], ",",
            "\n", "     ", 
           RowBox[{"Joined", "      ", "->", " ", "True"}], ",", " ", 
           RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "     ", 
           RowBox[{"FrameLabel", "  ", "->", " ", 
            RowBox[{"{", 
             
             RowBox[{"\"\<\[Sigma]_S (Supply SD)\>\"", ",", 
              " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "     ", 
           RowBox[{"PlotMarkers", " ", "->", " ", "Automatic"}], ",", "\n", 
           "     ", 
           RowBox[{"PlotLabel", "   ", "->", " ", 
            
            RowBox[{"\"\<Supply variability \[Dash] \>\"", " ", "<>", " ", 
             "epsLabel"}]}]}], "\n", "  ", "]"}]}], ";", "\n", "\n", "  ", 
        RowBox[{"sliceGrid", " ", "=", " ", 
         RowBox[{"GraphicsGrid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"plotT", ",", " ", "plotS"}], "}"}], "}"}], ",", " ", 
           RowBox[{"Spacings", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "1"}], "}"}]}]}], "]"}]}], ";", "\n", 
        "\n", "  ", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"figDir", ",", "\n", "          ", 
             
             RowBox[{"\"\<phi-slices-\>\"", " ", "<>", " ", "epsLabel", " ", "<>",
               " ", "\"\<.png\>\""}]}], "}"}], "]"}], ",", " ", "sliceGrid", ",",
           " ", "\"\<PNG\>\""}], "]"}], ";", "\n", "\n", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", " ", "save"}]}], " ", "numeric", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"arrays", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
              "--"}], "--"}], "--"}]}], "-"}], " ", "*)"}], "\n", "  ", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"dataDir", ",", " ", 
             
             RowBox[{"\"\<phiMeans-\>\"", " ", "<>", " ", "epsLabel", " ", "<>",
               " ", "\"\<.mx\>\""}]}], "}"}], "]"}], ",", "\n", "         ", 
          "phiMeans", ",", " ", "\"\<MX\>\""}], "]"}], ";", "\n", "  ", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"dataDir", ",", " ", 
             
             RowBox[{"\"\<phiSDs-\>\"", "   ", "<>", " ", "epsLabel", " ", "<>",
               " ", "\"\<.mx\>\""}]}], "}"}], "]"}], ",", "\n", "         ", 
          "phiSDs", ",", "   ", "\"\<MX\>\""}], "]"}], ";"}]}], "\n", "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "main"}]}]}]}]}], " ", "loop", " ", "over", " ", 
     "all", " ", "\[CurlyEpsilon]", 
     RowBox[{"(", "T", ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"versions", " ", "--"}], "--"}], "--"}], "--"}], 
              "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
      "--"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"runGridForEps", "[", 
       RowBox[{
        RowBox[{"conf", "[", "\"\<label\>\"", "]"}], ",", " ", 
        RowBox[{"conf", "[", "\"\<func\>\"", "]"}]}], "]"}], ",", "\n", "  ", 
      
      RowBox[{"{", 
       RowBox[{"conf", ",", " ", "epsConfigs"}], "}"}]}], "\n", "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<#### All \[CurlyEpsilon] grids finished.  Outputs \
written to figDir & dataDir.\>\"", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.958511875929283*^9, {3.958512289730649*^9, 3.9585123421384706`*^9}, {
   3.958512608680781*^9, 3.9585126107354803`*^9}, {3.958513433218576*^9, 
   3.9585134348865347`*^9}, {3.9585136582765512`*^9, 
   3.9585136669887323`*^9}, {3.9585139189155493`*^9, 3.958513932195033*^9}, {
   3.958514048736158*^9, 3.958514056955594*^9}, {3.958514099415738*^9, 
   3.958514099634137*^9}, {3.958515034463386*^9, 3.958515035807784*^9}, {
   3.9585155707167063`*^9, 3.9585155728279047`*^9}, {3.958516482006147*^9, 
   3.95851651181353*^9}, {3.9585170590625877`*^9, 3.9585170594332848`*^9}, {
   3.9585172718161383`*^9, 3.9585173670345087`*^9}, {3.958517424223866*^9, 
   3.958517444084947*^9}, {3.9585177626431828`*^9, 3.9585177631860847`*^9}, 
   3.958517804786182*^9, {3.958518504740766*^9, 3.958518508639595*^9}, 
   3.958518562943555*^9, {3.9585186797072067`*^9, 3.958518714215653*^9}, {
   3.958518949947435*^9, 3.9585189598604803`*^9}, 3.9585194192127123`*^9, {
   3.95852001547064*^9, 3.9585200181847153`*^9}, {3.958520137297205*^9, 
   3.9585201897665243`*^9}, {3.958520221194363*^9, 3.9585202298750668`*^9}, {
   3.9585202962645483`*^9, 3.958520333492778*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"84abcacd-0f47-40aa-8d99-17fdaa7233a1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"###  \[CurlyEpsilon] = \"\>", 
   "\[InvisibleSpace]", "\<\"eps1.0\"\>", 
   "\[InvisibleSpace]", "\<\"  \[Dash] running grid\[Ellipsis]\"\>"}],
  SequenceForm[
  "###  \[CurlyEpsilon] = ", "eps1.0", "  \[Dash] running grid\[Ellipsis]"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, {
   3.958520310234268*^9, 3.9585203364681187`*^9}},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"1fbed934-a7d4-45c2-b17a-fac351918106"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxd13tUTWkfwPHsTlsUuugiVHJXDE1C0vOQS7SKSmrJS+QSSSiRGGZK9Iqm
SDEKmdB1yi2vhkkkQmLIdDG6OOfsvc9BxqGNnd6z3rWe56z398dZe51Pv55z
nu/al3WGrYryX8Po6el1al/62td4zyGqdlcbRI5DWvatGtTRSt/fKZuw6Wyv
etRrWU3LFEM59fZgq/Ineq3oq7M5/4HhgHPo0ZyQtMVfVNS3FB1sDtfrRD8d
EuL35kPXIHb7L8FRtQJwEanict+dC4IuoQSDyIP1P/LUpzVUR7ro6eG6i7dO
rVVCZ3Bsj7rZbB8HXIbT05kYhxzoLGan8241/hzdP/l76J0zHlvVrdTJcc/m
nHXXWDl9T/pcDHPOHtaqBM6hLI/vgl2mCdRJn83TT1VUe6iAa5DluO3h9Suh
i2h5VL2P8CtcR0KRsndlVp956qTPde+YSTuzoDN4g/6ozJ8/KIHL8NTeR4/1
r4fO4hnLf7/jv11J90n6zI8aupk3bqNO/u/YwjEJESPk1Mmx627G56RyDjiH
Rr7vznB8LVAnfercdxhGTVAB16DQSzP3JOlDF1GSj/7ongq4joRK7CwzHPN4
6qTPDuXuNf1WQ2fw23ufpnnnc8Bl+GnYw229w6CzOPb7gBDTw0q6H9Inb+su
s7aFbdRJHyN79oM1llMn692cHP0w6JESOIdeDg8yOm6tou9Jn3F/zA+Pmgpd
g7iJFU2FQQJwERVIC7etkMF5CTVbPCjfnsNTJ33uhQTh2BQBOIOdffv7RW/k
gMuw6/a/frg/Gq7D4ntu7IFN35T0e5M+KUWNyQevt1Gn58/WXhbxMXLqpM9h
79PcnlIlcA7NePDnjZIpKurkqEo/E+c/CroG/WX7/bnnDQJwEXmNeBxkfBm6
hE6kXjRJ7+Kpkz7ZUV8yAmugMzjftj87r1sJXIYtr30xNo+F8yxOix+81ShV
Sb8f6WNc98e3qdPbqdP7k+O4jowzcuqkj7XgP8DEhgOuvb5Qo8eyFWrq5POr
1YcmhitUwDXIteVKVmCjAFxE+qG2yaHboEtok1W6f5/zPHXS53B7qGXOXugM
NhyYNTQ1hgMuw9a9D6zethQ6i4uNG5cHXlbS70H6OPh23e6ubKdO+pQWGJa1
Nsqpkz5vwyX+RYUSOIf8n48s446qqJM+Cbho6eM86BpULyh6wvtAF1F9reNh
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
ZXjzk92TvsTywFnsUtOll23Bo/8CC0Yatg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwB9wQI+yFib1JiAgAAAKIBAAADAAAAAg4DBREGDQIBAw8EBhIHBxMIChYL
DhoPCBQJCRUKBBAFEx8UCxcMFCAVDwMODgINEBwREAQPEh4TEgYRGQ4NER0S
EQUQGiYbDxsQEwcSHREcFgoVFiIXFSEWPjI9FyMYJjInGAwXJRoZGg4ZFQkU
FAgTHCgdGw8aHhIdHiofHSkeICwhHysgIi4jHBAbHxMeIBQfGyccFwsWIS0i
IhYhMSYlIxciMj4zJholKDQpKBwnKTUqJzMoJxsmJBgjIy8kKjYrLyMuLCAr
LDgtKzcsLjovLTkuLzswKh4pLSEsLiItKR0oIRUgPko/OS04MycyMiYxNEA1
NCgzNkI3Nio1N0M4NUE2NSk0Mz80PTIxOEQ5MCQvOi45OkY7OUU6O0c8Oy86
ST49OCw3SlZLPDA7Nys27/DkQExBPzM+QTVAQDQ/Qk5DQjZBRFBFRDhDRVFG
Q09EQzdCQU1CTlpPRlJHTEBLSDxHR1NIRztGVUpJSj5JSz9KRjpFTFhNS1dM
RTlEVmJXTVlOV2NYT0NOTkJNUFxRP0tAUERPUV1SUUVQUkZRU19UT1tQTUFM
U0dSVEhTV0tWVkpVWGRZWExXWmZbWk5ZYVZVWWVaWU1YYm5jXGhdW2dcW09a
XmpfXWleXVFcXlJdX2tgX1NebnpvYFRfbWJhYlZhZHBlY29kY1diZFhjZnJn
ZXFmZVlkZlplaHRpZ3NoZ1tmaFxnanZrXFBbaXVqal5pbGBra3dsa19qeW5t
bmJtb2Nucn5zcHxxb3tweoZ7cGRvcX1yaV1ocmZxdIB1c390c2dyKx8qdGhz
dmp1cWVwdYF2dWl0doJ3d4N4d2t2hHiDe4d8hXp5em55e296fHB7fXF8gIyB
fop/fYl+fIh9lIiTfnJ9kYaFgXWAgHR/go6DgnaBg4+EhpKHf3N+g3eCkISP
f4uAgY2ChnqFj4OOiZWKh3uGiHyHiX2Iin6Ji3+KjpqPjJiNi5eMipaLh5OI
jICLiJSJnJCbjoKNj5uQkp6TnZKRk5+UjYGMkoaRlKCVjZmOk4eSlqKXr6Ou
lYmUloqVmKSZl6OYl4uWmIyXmqabmaWamY2Ymo6Zm6ecm4+aqJynnqqfqZ6d
npKdoKyhn6ugn5OeoJSfoq6joa2ioZWglaGWopaho6+kpbGmo5eipJijpZmk
ppqltKiztaqpp7Oop5umprKnqrarqp6ppLClq7esq5+qrKCrrrqvsKSvrbmu
r7uwrLitrqKtsLyxraGsUl5Tsr6z1+PYtsK3s6eysaWwwba1t8O4uMS5v8C0
uKy3tqq1sqaxv8vAs7+0usa7u6+6u8e8ua24vLC7vbG8vcm+vrK9ucW6vsq/
t6u2uq65v7O+ytbLeGx3xNDFws7Dw8/ExLjDxbnEw7fCxtLHxdHGzcLBydXK
wrbByNTJyr7Jyb3IyLzHy8zAztrPy7/Kx9PIx7vGy9fMxrrFvMi92c7NzsLN
0d3Sz8PO0MTP0cXQ0sbR08fS1uLX1ODV09/U0t7Tz9vQ1MjT28/a18vW1srV
19jM2ubb5drZ2+fc1cnU2s7Z3Ojd1eHW3NDb3ene6Nzn39Pe3+vg3dHc4NTf
4dXg4e3i0NzR4+TY4u7j3tLd4Ozh4tbh4+/k6d3o5trl59vm6t7psb2y69/q
7eHs3urf49fi7ODr7uLt7+PuaoNQsA==
          "]]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{132, 144, 156, 168, 180, 192, 204, 216, 228, 240, 239, 238, 
       237, 236, 235, 234, 233, 232, 231, 230, 229, 217, 205, 193, 181, 169, 
       157, 145, 133, 121, 109, 97, 85, 73, 61, 49, 37, 25, 13, 1, 2, 3, 4, 5,
        6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
/wGXfamU
     "],
    VertexNormals->CompressedData["
1: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
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]_T\"", TraditionalForm], 
    FormBox["\"\[Sigma]_S\"", TraditionalForm], 
    FormBox["\"E[R0]\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{310.87084693829274`, 142.25543118975529`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.3432404856979603`, -0.38473951052415584`, 
   0.35315515546528714`},
  ViewVertical->{-0.10368261044983701`, 0.011931776061275908`, 
   0.9945388624937344}]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520344152457*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"0a9839ac-6abf-448d-938a-f942d382414b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"###  \[CurlyEpsilon] = \"\>", 
   "\[InvisibleSpace]", "\<\"eps0.3\"\>", 
   "\[InvisibleSpace]", "\<\"  \[Dash] running grid\[Ellipsis]\"\>"}],
  SequenceForm[
  "###  \[CurlyEpsilon] = ", "eps0.3", "  \[Dash] running grid\[Ellipsis]"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520344928658*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"fbea0f8a-eed8-4870-8203-90de08a9d8d7"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxd2HtYTekewPGsloUc49K4p0nkcSmicUmO950iUYmQ7a6US6QkCiWiRDHj
0nAmlxS5RkIcGZEudq3L3iGZyiXJIpOwsas1zek5z3nf9ZzfH/tZz/7023uv
9X3Wftfa9fcL9g5gTExMGlofpq0POxeLuuoxfRDZ7h34uvNNl3z6PP/K8LVp
bXSo6VRavP9ALfVqTc8bepMXyCGmp63dCB64jGI+c5VXnHTU111MqFhp0oD2
d6x69LSLHrgBbV0Y+cibgfNGlLej3CpyqQRcQZ9yDz8ce0p1x7KCoB9NTPBv
/14U71suAGfwweqD0Z800Fk8asvoHpNTeeAc9jk54uHcYJ4eP/n7/ZQ/HKTp
+dTJNsQx4cqV4Vr6nPTZsKtnkOt1HriM+il39AWJ6utJn5/Li9wHdIduQGEW
M/RtB0E3ouacLdkjXonAFfSlvHnfyYESddKn+bm135DuInAGJyAlLaatAJzF
Pvcet99jCp3DN8smKS/n8vQ4SZ/V6zs3v92QT528ztLsXsQsDy11sq1LSLW6
/iMPXEZtds/rf9xf7Uj6OJ1kk2J9oBvQdzkZ5eOyJOBGtDzR82XBIugKyg6d
NCI8RHXSJ/TiBqvCGgE4g/1uz931eCZ0Fs+yue97+Ax0Dues0Hm1N5TQ4yF9
/hprVfvgfj510sfWZIHP+XAtdfJ+439zDS1neeAyut63vpGLUc8n0kfc0zJ0
yDo9cAO6X8h2qOwN543ISrPXQjGTgCvo3Zj6N8fGi9RJH6EDmyQnQGdw2axV
ZrkdBOAsLlw2oeRFGg+cw0vddeOrD/N0v0kf76po9wSXAuqkz9Bvtfv9M7TU
SR9v334dDtzhgcvIM9HTwXKJ+r0iW9cZIyMbI6AbUK14oOWcOXQjqrdMyIzM
kYAryKXhO/Mxx1Unff5skk41dhOBM9iyJNe/j14AzuL0gifOTc954ByOWph7
1cRRpPtH+nhWNS5k5ALqpM/yPz70eWfQUid93nm4HeUSeOAyepI41j05Q11f
yOfLp8fY5v0K3YAGpOc6nRgO3YiuV93lol9LwBUUJH0p6rZRddLnwvcuQRkL
ROAMLtf/c2NSgwCcxVkp+ePSm3jgHN5X0GaN+XKe7gfp080/1zUyspA6vX75
6po8phVTJ30s54yaFX9cBC6j7KCtfs+Gqess6XN+W8rnXo+gG1Dw0Gq5dwh0
I5pftvViF08JuIJ2m8t1L9qq86RP5pY9N0zbiMAZHNNguSVtEnQWn61M/jr1
Kg+cw2nW6/KPhPH080gfTWLVkNjORdRJn+a3mtQL2cXUSZ/Vstf2rvME4DIq
nT0houMHiTrpM7HdDzttM3TADSjSOqvExQu6EfWx2lLQzxG6gkoPxw8bnCTS
56RPSFD/JzXboDPYBPf1dI8SgLN4GR9fdek0D5zDATHl7we7CPR9SZ/BnTeE
9zlfRJ30cas3nxf2qpg6vX4tt/Py3S0Al9HHZ87mwkz1ukv6mE3k3M4kQ29d
f+L8HXu4Qm89r2+nnfO5IwFX0OLOdbdW7VKdbB3Cw0/6TRWBMzjodWpRQogA
nMXOh2KC55hC53DGiqQ1uzsJtC/pUxnnePuy6QPqpE+s9bjghw4l1EmfuDfF
n5LHi8BllOw4IHCKRr3/oOtz33uFJz9Ab123ev1ker9ZAm5EG00nM1GhcF5B
e03dbjhWqfPk+PoGVsTVrRSBM3g81rzdaQ7nWdxrz/b0JbYCcA6nrIgym7CW
p+cZ6RM6Lsx/4K4H1Ekf+XRF8Mv9JdRJnwzJYc2hxwJwGfVcvZl33aHeh5E+
qTZPe97+GboBlVZXTxKPQzcizuZ2Ud1zCbiC/HYk2+2qUZ30qU3vb2o5RQTO
4G1XFq8qtoPO4sn9FBOfTtA5vPL3/W4zh5Hj4mifKUOaF+3TP6BO+gjfasPk
yhLqpI/1v5wtQzcKwGUU7Hk87s4L9X6U9NmMu562bKcHbkAlWRN/sgiH862/
LwLWH7hVIQFX0C8v93bzOqI66fPQ+GRJWLAInMHrz2ZqtmcJwFkc1BJdtnMa
nOewQ0jFiYKlZL497fMg79ukFFctddJnvvQkdactT5300TRv7f/hvghcRpkB
KPXMXR110keb2314eTp0A/r85vTbsKXQjaiT86ikKtqnPe3TdvNmHDBcddLn
+p3GHNYgAmdw+qOOo50Y6Cx+FZdo/d4LOoetx4RenhpI+pjRPk/ffKkYcERL
nfaxT7i8OIanTvp85j71E2aIwGWUl1voWSTqqJM+UW7tvg/4AN2Azoda2lTv
hG5EOyrrlA3lEnAFtTzvFR3qozr9ftUfylvpC53BEezXazVbBeAs/nxtQvDD
GOgc1gz6wX1mOPF/0D6B8edDcz9qqZM+tbluv3bP5qmTPrGfG+LzqkXgMrrb
x/7WlTwdddKnyWJmbBqnB25A37q71tw9CueNaEGAWe3osdAV9OTjbP/nLqqT
Ptu66/0rHCTgDF7bmF2doIjAWdxPzItS6gTgHPa08nhl2574d7SPTaK3ctmp
mDpdn0cs44Pf8dRJn63v7Bo95orAZcQ4nI2QL+qo0/vD2NiaY2XQDejFXMeb
Hc5BN6Ie8ug368ZBVxCemGnvNV2iTq9fpfaj7HeJwBmMc+qzPEqhs3jOkhXB
8WUCcA5nZTrZrzUT0H+rmHShfbizuTp0pJg66XPBab3FAI06T3/3H2v79VLr
/vy/yyi9IPFRXb6OOl1/lEd1lm30wA3oKTqTp5HhvBG5TVvJG/+SgCuoW0WE
Lues6qTP0uwXce/PicAZvGVO54W/NEJn8ekzLc3PIqFzuFODo/ff+fz/vCvt
422ROe/ap2Lq9P9DH68NlWMF6vT7tSl+0yC6P11pn8L5G3sfTtZRJ33cWo4k
HJGhG1DaiNUvpx+EbkSX6hv3RthDVxC3Yofg1UZ10sd16e6RL+Mk4Aw+ENDT
tmaICJzFDJoffXS7AJzDITXXz79ZRbwb7fNle0xFqFsJddJnjo/3nw8EdZ70
6R34qnK0nw64jITeF6KyOumpkz4uq8XmHe2gGxA3Y12m3WUdcCPSnKjW3vKH
rqDC3PaOhazqpE9okjZ+pCgCZ/B8aegm9B46i6dFO5QoU6FzeJvHgBnx38jx
mtM+Lc/OOTnvLaFO+mAb3eTCLiJ10ueZNTdnZwt0GQU+vpRycpKeOukTF67d
vYyeP+a0z9s7zk3ut6AbUaXNxNIuGugKWvn7PP1Va9VJn3elQffeRkvAGdzr
odXYlNnQWYzHJx77+4YInMM2i8wDfeMl9B+ZtBfs
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwB9wQI+yFib1JiAgAAAKIBAAADAAAAAg4DBREGDQIBAw8EBhIHBxMIChYL
DhoPCBQJCRUKBBAFEx8UCxcMFCAVDwMODgINEBwREAQPEh4TEgYRGQ4NER0S
EQUQGiYbDxsQEwcSHREcFgoVFiIXFSEWPjI9FyMYJjInGAwXJRoZGg4ZFQkU
FAgTHCgdGw8aHhIdHiofHSkeICwhHysgIi4jHBAbHxMeIBQfGyccFwsWIS0i
IhYhMSYlIxciMj4zJholKDQpKBwnKTUqJzMoJxsmJBgjIy8kKjYrLyMuLCAr
LDgtKzcsLjovLTkuLzswKh4pLSEsLiItKR0oIRUgPko/OS04MycyMiYxNEA1
NCgzNkI3Nio1N0M4NUE2NSk0Mz80PTIxOEQ5MCQvOi45OkY7OUU6O0c8Oy86
ST49OCw3SlZLPDA7Nys27/DkQExBPzM+QTVAQDQ/Qk5DQjZBRFBFRDhDRVFG
Q09EQzdCQU1CTlpPRlJHTEBLSDxHR1NIRztGVUpJSj5JSz9KRjpFTFhNS1dM
RTlEVmJXTVlOV2NYT0NOTkJNUFxRP0tAUERPUV1SUUVQUkZRU19UT1tQTUFM
U0dSVEhTV0tWVkpVWGRZWExXWmZbWk5ZYVZVWWVaWU1YYm5jXGhdW2dcW09a
XmpfXWleXVFcXlJdX2tgX1NebnpvYFRfbWJhYlZhZHBlY29kY1diZFhjZnJn
ZXFmZVlkZlplaHRpZ3NoZ1tmaFxnanZrXFBbaXVqal5pbGBra3dsa19qeW5t
bmJtb2Nucn5zcHxxb3tweoZ7cGRvcX1yaV1ocmZxdIB1c390c2dyKx8qdGhz
dmp1cWVwdYF2dWl0doJ3d4N4d2t2hHiDe4d8hXp5em55e296fHB7fXF8gIyB
fop/fYl+fIh9lIiTfnJ9kYaFgXWAgHR/go6DgnaBg4+EhpKHf3N+g3eCkISP
f4uAgY2ChnqFj4OOiZWKh3uGiHyHiX2Iin6Ji3+KjpqPjJiNi5eMipaLh5OI
jICLiJSJnJCbjoKNj5uQkp6TnZKRk5+UjYGMkoaRlKCVjZmOk4eSlqKXr6Ou
lYmUloqVmKSZl6OYl4uWmIyXmqabmaWamY2Ymo6Zm6ecm4+aqJynnqqfqZ6d
npKdoKyhn6ugn5OeoJSfoq6joa2ioZWglaGWopaho6+kpbGmo5eipJijpZmk
ppqltKiztaqpp7Oop5umprKnqrarqp6ppLClq7esq5+qrKCrrrqvsKSvrbmu
r7uwrLitrqKtsLyxraGsUl5Tsr6z1+PYtsK3s6eysaWwwba1t8O4uMS5v8C0
uKy3tqq1sqaxv8vAs7+0usa7u6+6u8e8ua24vLC7vbG8vcm+vrK9ucW6vsq/
t6u2uq65v7O+ytbLeGx3xNDFws7Dw8/ExLjDxbnEw7fCxtLHxdHGzcLBydXK
wrbByNTJyr7Jyb3IyLzHy8zAztrPy7/Kx9PIx7vGy9fMxrrFvMi92c7NzsLN
0d3Sz8PO0MTP0cXQ0sbR08fS1uLX1ODV09/U0t7Tz9vQ1MjT28/a18vW1srV
19jM2ubb5drZ2+fc1cnU2s7Z3Ojd1eHW3NDb3ene6Nzn39Pe3+vg3dHc4NTf
4dXg4e3i0NzR4+TY4u7j3tLd4Ozh4tbh4+/k6d3o5trl59vm6t7psb2y69/q
7eHs3urf49fi7ODr7uLt7+PuaoNQsA==
          "]]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{132, 144, 156, 168, 180, 192, 204, 216, 228, 240, 239, 238, 
       237, 236, 235, 234, 233, 232, 231, 230, 229, 217, 205, 193, 181, 169, 
       157, 145, 133, 121, 109, 97, 85, 73, 61, 49, 37, 25, 13, 1, 2, 3, 4, 5,
        6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132},
       VertexColors->None]}},
    VertexColors->CompressedData["
1:eJwNl3c8le8bxyOSUpSMyviWkELZRH2MUigpq7SohKhQkgYhVEZF+iWFIkVk
JONIiqysY6/sfdZDSKX0u/84/5zXeT3Pfa77M97XupMXDjpyL1iwYIJ8FpJP
+Z2My6tGyxFkEGMcFdqEUiGdG9t72fA14Mov02dgNnjHGekAJmb+JAiGelLY
cGIT488bCn02K9z2vaWQs79S13YbAxdEzWix4yw8a807OTo1hK/0sNmK3jr4
51tMH5plwGfH/eerV7Tgv2NNEQfXVeLt5mTpyltseEX9eep9fBTn1TRlplzo
OF9j9ffbKQ4aD/nqjTcyUHKiw2mS3oDo8LfMBj4Oqk1Eg/46juOH/0Bso14D
Nu60EX5bRqFZ5MCiv48oOC7YoKbS1Q3R4gG7uToKl3h1bAdSKVSkbVUSGBhA
5dLPwYG15PxyPuGbPlCISX8uW7h8DFV15r3pHykYP+D5b3EuhbHT59Y85BlH
2DG99EO+FXA1qhde2dWEA/4P6k/3sxGSWyAqYs8AKk0TRWOZSL8zHxniRcEg
Tb5UoInC4gcFzy6R523x0O6fyx5FWJmthoccC4JTEgbvbvRD99OIgr1VDUzU
me0vD7Dxofs5X1HUCMKrbyaniNGhVRTNWyLDxuDKP/Sa7mFYOHH9S4ith3tI
Vr4mk4PK+45LewtY6OaqSuPObMZJOS72mTQO0me1pOaHmeDomXz4U9EI1aAY
salMCj0bp9z7rSg85/Nptc3sBGN0qe/KFgrjpiFK43kURgoTX32/Mgw+EUtL
LfL9kvmaGa18Cv+aj+bG3h7GuFH32XbyOys+rbfq7yg03F+wusVrHEfNW5re
R1XBmbu74vhUM7RpTaV/xti4sCbZSJbGwLqheK7RASYm1hzJkvKlkDktfSIm
nYJ8H31ulujHMv7K50RpBvh9dHpWh7DAib3z64n6IMolc4/NP6rFxg99cotT
WFC3PXI0vW4QiqV/I3YsrkPw/Vj1r9NsBM5+/3p3zTgURKfpqlINcA/tcg5z
4iDGSDg6qJ+B0fGfMb2tDSjnnXkma87BLrdtSvTrDGwxe7LgX3oDpK6wfcu/
kPmkz2Qvi6Zw992k3C7Rbujm7ja+WU/hAWWfNE/0ntQg/PLemkHM+PlUbK+i
oCS9fEVsHAVr+RqGjkcf/qbF+ZU8oaAuxP9E6RUF+kL7HV22TNzlKbjQWFAL
ucuJm0PXteHOAbeOtT/ZiGvXmezZzkTkp7rPlBkLh6LyxDPuUlhfHGj4Op7C
p1Z3IfUUCneUoxWzFjHxl8bTZ67PwhoXg2y5qX7sxSuT96k1EKlkKV6VZ0Dm
iEHTys2fYST4/pw4bxlKIjm59J1syIjlR36zH0FHsJ/gwoV0NF84tY2njIMN
t0YHeXVY+L35oo9uSBOoGWnbBeEULqb8cIzr4kBG7hKHP6YDoU0WnN87KByo
nXO80MxGxcRZkfZtbXi/2s+mtJmCxLL2XhBdrHmyS8nMdhin2OKX5oi/pEN2
yh4l/qrKYybNLhrDxqoo3htfKVhYuRozaBR4pU2yevTH0BdBN1TZ2QipHvU6
i/ed8JdQ+80Q4kDKN/b65n4mVFXH78vWseBSdueiIZlv6eanrM9En2r+Lwyi
iik4BAeflggeBZeP9LTNQxbOZJjw5rsPwqlJR0K5tBYJJyScVtuwcFC66/pq
mwGIT0XQ3Kdq8OJA2Z5X1mwICCSHxiWO4KDGSPNaKTrM3HRE1Yh+d3sEqiWM
jeEjTx7vBH8DXAyHoucEOfgusvOQXfA4mjdbOM6YNKBzoHu/APGDuY/o05kj
FI5Rm1pefurEXi3aSs1yCv/FM8akH1PwnmaptZr3wLJQo72+jULs7LO9ZUUU
fHf5Bm4g7+dSvMkMi6BwOitIvr2PA5eRAHXhlx3479bHpfRfrdAxsIo2EOrF
dN61z4s1OTjcKeEYTmPhi0yz6bVrbGSmvjw1T/xUrVKt+pG8d/r6aPmxAgoD
DhF9E75jsP4jJODcxsT5JV0qDaJ9kOtbOxe1txpmL5NynJazMKmZ/yJcqB8b
1yk/l+WpgdeD5F8nBchzE4r4NvgPQ6nk22Nni3o4TV9mSWSwcXFMiGFG7rVT
65HOyrd0nNbIKws25mDuqD4t5jgDKtF3nxY+b0COkpTVrnMUCk8FREa7czDw
N0PV/0U7zJ1e1I+XUjjouT1dI4pC59Ro3VO7bzjJv9azm9xvhICJcSw5/+z/
+Pv06ofxuXV7/e9CCr/+WtkxcihcEFCrtVAZx0e3hDhPhy74i733verejzOy
jTUzhzmYdH0gK/yRjV8zn6bOmnJwJZlnT3EFBao2lWutEnnfkjWFMo/Z6C1a
2f8joxU5HcIJPcJs6K6um6yLG4ZJxtQaX+d65Fy4P/rpKhOPBfZpqQ99wzZR
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
p8A=
     "],
    VertexNormals->CompressedData["
1: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
Tdu8IgF/703ZS5thwP8A7CXf4Q==
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]_T\"", TraditionalForm], 
    FormBox["\"\[Sigma]_S\"", TraditionalForm], 
    FormBox["\"E[R0]\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520352670239*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"13c65944-ed07-4728-bfee-56e08c94213b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"###  \[CurlyEpsilon] = \"\>", 
   "\[InvisibleSpace]", "\<\"epsLogistic\"\>", 
   "\[InvisibleSpace]", "\<\"  \[Dash] running grid\[Ellipsis]\"\>"}],
  SequenceForm[
  "###  \[CurlyEpsilon] = ", "epsLogistic", 
   "  \[Dash] running grid\[Ellipsis]"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.95852035345759*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"4a9f4135-897e-4adf-bf50-aaa4192cbc6a"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+UCXYSuPwFPdL/LoH17WHcc=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwB9wQI+yFib1JiAgAAAKIBAAADAAAAAg4DBREGDQIBAw8EBhIHBxMIChYL
DhoPCBQJCRUKBBAFEx8UCxcMFCAVDwMODgINEBwREAQPEh4TEgYRGQ4NER0S
EQUQGiYbDxsQEwcSHREcFgoVFiIXFSEWPjI9FyMYJjInGAwXJRoZGg4ZFQkU
FAgTHCgdGw8aHhIdHiofHSkeICwhHysgIi4jHBAbHxMeIBQfGyccFwsWIS0i
IhYhMSYlIxciMj4zJholKDQpKBwnKTUqJzMoJxsmJBgjIy8kKjYrLyMuLCAr
LDgtKzcsLjovLTkuLzswKh4pLSEsLiItKR0oIRUgPko/OS04MycyMiYxNEA1
NCgzNkI3Nio1N0M4NUE2NSk0Mz80PTIxOEQ5MCQvOi45OkY7OUU6O0c8Oy86
ST49OCw3SlZLPDA7Nys27/DkQExBPzM+QTVAQDQ/Qk5DQjZBRFBFRDhDRVFG
Q09EQzdCQU1CTlpPRlJHTEBLSDxHR1NIRztGVUpJSj5JSz9KRjpFTFhNS1dM
RTlEVmJXTVlOV2NYT0NOTkJNUFxRP0tAUERPUV1SUUVQUkZRU19UT1tQTUFM
U0dSVEhTV0tWVkpVWGRZWExXWmZbWk5ZYVZVWWVaWU1YYm5jXGhdW2dcW09a
XmpfXWleXVFcXlJdX2tgX1NebnpvYFRfbWJhYlZhZHBlY29kY1diZFhjZnJn
ZXFmZVlkZlplaHRpZ3NoZ1tmaFxnanZrXFBbaXVqal5pbGBra3dsa19qeW5t
bmJtb2Nucn5zcHxxb3tweoZ7cGRvcX1yaV1ocmZxdIB1c390c2dyKx8qdGhz
dmp1cWVwdYF2dWl0doJ3d4N4d2t2hHiDe4d8hXp5em55e296fHB7fXF8gIyB
fop/fYl+fIh9lIiTfnJ9kYaFgXWAgHR/go6DgnaBg4+EhpKHf3N+g3eCkISP
f4uAgY2ChnqFj4OOiZWKh3uGiHyHiX2Iin6Ji3+KjpqPjJiNi5eMipaLh5OI
jICLiJSJnJCbjoKNj5uQkp6TnZKRk5+UjYGMkoaRlKCVjZmOk4eSlqKXr6Ou
lYmUloqVmKSZl6OYl4uWmIyXmqabmaWamY2Ymo6Zm6ecm4+aqJynnqqfqZ6d
npKdoKyhn6ugn5OeoJSfoq6joa2ioZWglaGWopaho6+kpbGmo5eipJijpZmk
ppqltKiztaqpp7Oop5umprKnqrarqp6ppLClq7esq5+qrKCrrrqvsKSvrbmu
r7uwrLitrqKtsLyxraGsUl5Tsr6z1+PYtsK3s6eysaWwwba1t8O4uMS5v8C0
uKy3tqq1sqaxv8vAs7+0usa7u6+6u8e8ua24vLC7vbG8vcm+vrK9ucW6vsq/
t6u2uq65v7O+ytbLeGx3xNDFws7Dw8/ExLjDxbnEw7fCxtLHxdHGzcLBydXK
wrbByNTJyr7Jyb3IyLzHy8zAztrPy7/Kx9PIx7vGy9fMxrrFvMi92c7NzsLN
0d3Sz8PO0MTP0cXQ0sbR08fS1uLX1ODV09/U0t7Tz9vQ1MjT28/a18vW1srV
19jM2ubb5drZ2+fc1cnU2s7Z3Ojd1eHW3NDb3ene6Nzn39Pe3+vg3dHc4NTf
4dXg4e3i0NzR4+TY4u7j3tLd4Ozh4tbh4+/k6d3o5trl59vm6t7psb2y69/q
7eHs3urf49fi7ODr7uLt7+PuaoNQsA==
          "]]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{132, 144, 156, 168, 180, 192, 204, 216, 228, 240, 239, 238, 
       237, 236, 235, 234, 233, 232, 231, 230, 229, 217, 205, 193, 181, 169, 
       157, 145, 133, 121, 109, 97, 85, 73, 61, 49, 37, 25, 13, 1, 2, 3, 4, 5,
        6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
biPf2yQdNYheicDWDpKvv81lRK8Sfqp9tLCMYjIxfTpgmqukBi7J25I8eVvR
pHJbJJD4c6Ij54zFfB8m8l3HzBSGwMXYpuYYT+H1zeOGL25S0G//XJ42RuFb
fCLP0nIKXtqllBnJ4y3Vib+lNYj/JNpeE/LuwqZk4xr1YtKzn0rqhvzDQn62
B7/kqhYIi/EnSZP+1aD6utfAl8LJhyqSzSUdOOUccecEya8cxycBw+ReobEa
dTwBJL+cVQtP/EP+76+lT+bXsXFbf8tN6cetkP+Z//0W0ReeLXJ6RnReNGme
F88YghkEZE0Jr6Z4Pz2IIr2x9szRO5wcI9CZsVg8SvzZrslSQJX4s4tNjJua
OwvRCovmNhFdu9/QOj9F/EpJKneHyqkx7Jvar8xYU4NGd4EbPkUM1FeZOh8c
ZcP+0Rql5XJ9+H21xeXu5UGsbJ+O8gqnwH3/ve8yQwo/8yI8tAuJLtakHDUl
ePiU3+5K20hDpaz7DWLYOFrwVL4wpQ07j452S69ggTW7nTbV7Ye3WK//nNwn
7DvNp/oINGT/Bhs9bGOjrr7s7yDaoVZc8kr5OQWh2D1F+hws9H98MuzP3YJY
4/ro/CIaZbH6JbqnaSSW/2HOfO1CWJlF/V+igwujGc5PSZ88U8A3v251D1Y2
PTtyyZTGv/qHNnsKkr4fHF1ZUd4Ory3jR7QYZN7Z9uSAFDkvdXb4lOXqYQR4
Vu3VCSL9QaZqCT/xvfAjG7gXUixkhp+l3IerUfMxpqI6loHIO+axgURfCbxT
83mFveAryXjYozmIhOXX3x0PolB18cKvVOI/T2w1v4sS/7nTH3nuCfGfHeHM
ld2kVx9TUjxXODGB3OQSp/iuJqRe9OwvI3j7a2bcqxoZg/rOXGXlRU3ozele
rGFMfHN9fLH9LBsnV9KhutHtYHx5W/qZzBcvLJWsuqJo/HkkI/XW5Qv2cwtn
aBMcbp0RKllC+nbGu8EAL79ulOdNqGaT9eOV8ot+k/XzX1LV73d2Y/IZ41Ba
MA0NGd2IZHJfXhmFG9VtLEQO/zAO9GbjBVfVpUghCmH6q0xaSJ9a8u5EoT2Z
4zQObhm0JHOcgO3Nrb6dE/jhGhZZp1+NpRc2C7XpMVDiuuj8NtKfC+jSvVu6
evH4261Q/32DOF7XVDQQTMFjyzfvTWETsEaStl4pE83B4kv1LhH/fSy2p2cH
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
f82stkQ=
     "],
    VertexNormals->CompressedData["
1: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
g4HEhmD00zfPtvlBwf8A4R7Lmg==
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]_T\"", TraditionalForm], 
    FormBox["\"\[Sigma]_S\"", TraditionalForm], 
    FormBox["\"E[R0]\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{316.3611015723883, 118.19704669900386`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.3555271713733883`, -0.4043714675973581, 0.1640765625191017},
  ViewVertical->{-0.048140763900619624`, 0.005801398813225495, 
   0.9988237134864564}]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.95852036178794*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"1b2c9bd8-90ac-4e0e-9700-39fa8c5a96bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"###  \[CurlyEpsilon] = \"\>", 
   "\[InvisibleSpace]", "\<\"epsGaussian\"\>", 
   "\[InvisibleSpace]", "\<\"  \[Dash] running grid\[Ellipsis]\"\>"}],
  SequenceForm[
  "###  \[CurlyEpsilon] = ", "epsGaussian", 
   "  \[Dash] running grid\[Ellipsis]"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520362587185*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"accd91f8-6c5b-4fed-afbd-f13b10e311e5"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
NCvfYu56njrps3T83K73zHTAJZTybVPChudw3ohmRDlOiHEUgMvIL61/V26Y
aZ70qe/XYH/ODTqDOd9jb47UQWfxyJv5hwp+gc7hN6feugscOW4b2qdDkpWT
xR9K6qTPmkafO3PuqKmTPp8sAs/3KasCLqKRyj87rz1nWp/0Wec4LmpdNnQJ
STs524AW0I3opiQali/ngcvI8pdaTc48k5M+q0eeqloZowXO4AmvOx/6lKAB
zuJgVu6rnwrX4XDM5r5JkYla9N8qina0T8IbNKT7YSV10id9eOVefoeaOunT
EFV/68lmLXARnTgfGPTYVqBO+ngaeo13DtMBl5D5m1qPiA1w3oie51dbjmgH
XUYzJvaSL7uYnPT5SzGxsl+tFjiDl0rVpTbJ0Fk8IHdG/q/Nf6f/v3P4Q1rx
RZdlZL497WMdkupRcE9JnT5/Djx0a/xDTZ3+PyDtiFfsoyrgItqXGJ2abWda
n/Q5+Vi3x3eFDriEGgcmePaLF4Ab0agD2tQkiQcuo6fLgp61DjA56XPWtWHN
YwvoDJ5X1G6Fwz0tcBb7tv6toasrdA7fXzZD9XwI8Q60T338tw/vspXUSZ8x
z28lKrarqZM+C/W9O70prAIuog0/OB+OsddRJ33mdZnk6FzAA5dQ+z4/hmaU
QDeiE+/TQmZroDf3ycjb0LTb5KSPf+Hz6sieWuAMDjfrkNAnDDqLnWZmnX/a
pAHO4dauVyxT6X3Rkfaxc/8tfvo3JXXSZ3DIzN/27VZTJ33++v6g7PtIDXAR
aY+0dSpM56mTPttmJt2Pfi0Al9CkIvdnd25DNyLH5NATcZfhOjKaeHhS8Glk
ctLnZa77tQpz6Aw+ygeVvOgBvfn7z92ukt1GLXAOd/M761Zp1KB/AWz1Krs=

    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwB9wQI+yFib1JiAgAAAKIBAAADAAAAAg4DBREGDQIBAw8EBhIHBxMIChYL
DhoPCBQJCRUKBBAFEx8UCxcMFCAVDwMODgINEBwREAQPEh4TEgYRGQ4NER0S
EQUQGiYbDxsQEwcSHREcFgoVFiIXFSEWPjI9FyMYJjInGAwXJRoZGg4ZFQkU
FAgTHCgdGw8aHhIdHiofHSkeICwhHysgIi4jHBAbHxMeIBQfGyccFwsWIS0i
IhYhMSYlIxciMj4zJholKDQpKBwnKTUqJzMoJxsmJBgjIy8kKjYrLyMuLCAr
LDgtKzcsLjovLTkuLzswKh4pLSEsLiItKR0oIRUgPko/OS04MycyMiYxNEA1
NCgzNkI3Nio1N0M4NUE2NSk0Mz80PTIxOEQ5MCQvOi45OkY7OUU6O0c8Oy86
ST49OCw3SlZLPDA7Nys27/DkQExBPzM+QTVAQDQ/Qk5DQjZBRFBFRDhDRVFG
Q09EQzdCQU1CTlpPRlJHTEBLSDxHR1NIRztGVUpJSj5JSz9KRjpFTFhNS1dM
RTlEVmJXTVlOV2NYT0NOTkJNUFxRP0tAUERPUV1SUUVQUkZRU19UT1tQTUFM
U0dSVEhTV0tWVkpVWGRZWExXWmZbWk5ZYVZVWWVaWU1YYm5jXGhdW2dcW09a
XmpfXWleXVFcXlJdX2tgX1NebnpvYFRfbWJhYlZhZHBlY29kY1diZFhjZnJn
ZXFmZVlkZlplaHRpZ3NoZ1tmaFxnanZrXFBbaXVqal5pbGBra3dsa19qeW5t
bmJtb2Nucn5zcHxxb3tweoZ7cGRvcX1yaV1ocmZxdIB1c390c2dyKx8qdGhz
dmp1cWVwdYF2dWl0doJ3d4N4d2t2hHiDe4d8hXp5em55e296fHB7fXF8gIyB
fop/fYl+fIh9lIiTfnJ9kYaFgXWAgHR/go6DgnaBg4+EhpKHf3N+g3eCkISP
f4uAgY2ChnqFj4OOiZWKh3uGiHyHiX2Iin6Ji3+KjpqPjJiNi5eMipaLh5OI
jICLiJSJnJCbjoKNj5uQkp6TnZKRk5+UjYGMkoaRlKCVjZmOk4eSlqKXr6Ou
lYmUloqVmKSZl6OYl4uWmIyXmqabmaWamY2Ymo6Zm6ecm4+aqJynnqqfqZ6d
npKdoKyhn6ugn5OeoJSfoq6joa2ioZWglaGWopaho6+kpbGmo5eipJijpZmk
ppqltKiztaqpp7Oop5umprKnqrarqp6ppLClq7esq5+qrKCrrrqvsKSvrbmu
r7uwrLitrqKtsLyxraGsUl5Tsr6z1+PYtsK3s6eysaWwwba1t8O4uMS5v8C0
uKy3tqq1sqaxv8vAs7+0usa7u6+6u8e8ua24vLC7vbG8vcm+vrK9ucW6vsq/
t6u2uq65v7O+ytbLeGx3xNDFws7Dw8/ExLjDxbnEw7fCxtLHxdHGzcLBydXK
wrbByNTJyr7Jyb3IyLzHy8zAztrPy7/Kx9PIx7vGy9fMxrrFvMi92c7NzsLN
0d3Sz8PO0MTP0cXQ0sbR08fS1uLX1ODV09/U0t7Tz9vQ1MjT28/a18vW1srV
19jM2ubb5drZ2+fc1cnU2s7Z3Ojd1eHW3NDb3ene6Nzn39Pe3+vg3dHc4NTf
4dXg4e3i0NzR4+TY4u7j3tLd4Ozh4tbh4+/k6d3o5trl59vm6t7psb2y69/q
7eHs3urf49fi7ODr7uLt7+PuaoNQsA==
          "]]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{132, 144, 156, 168, 180, 192, 204, 216, 228, 240, 239, 238, 
       237, 236, 235, 234, 233, 232, 231, 230, 229, 217, 205, 193, 181, 169, 
       157, 145, 133, 121, 109, 97, 85, 73, 61, 49, 37, 25, 13, 1, 2, 3, 4, 5,
        6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
EaGBv+YeVuXD17Kc9hpmYXHO/IB/GR/hp9Ve4itDIy/KoDTTko/kNX9kXv5r
w/pItnxOCI0be1s8m3IpnE1XflSu1AW/ULuhLQQXVWm3iYZfXEQeUNZK/t4M
wcON6Uziw+evPNh1t5xGWOsC+WNNLEz4m9X9Rz4/Jd6h+/kJjWW96baOQSy4
L1ozK+UqjdqpRGopyZ9VH7+uM1fiQafc80v+bwZi3psyvjt3ocskZDRqBoVP
JhaW7wfY6F4W1bggdwzzopz+fF9DQ2TOlfl/NtBoFXNO3utDY9O1lwvck/go
CikvlnlB4VFPx6bR+Ty8U11Y02fcAtauBO6uvzx4Dbe2BViwsPuSKb1G5SPC
m54tEiY+kmdtWRFQyIfW6qV/C1ntqOk7bfq+ksJAg8chn2U8nJpYm1Ho2oI8
pXOzzYnPXCmNES8iPiMz+Szmlv8ATEQCwxzqaDjUfS++mEzy+Wj0MyOTflTU
hhbEEN1tWC6rKE5y5Of7xZ/el4zCTFLyV3kajchjX/M988h1corePVrKRZCM
3c08bRqvJhzFj+0nfJM4oT9OzmVhIejJfMZA1q/gKJ5sF1rMdv19Ikzhquvx
iVcuI3i7+PnSV4GjOGwkYu4mSUO5IuV2OdFv0CzTmkTiz5mBtsyipBFosY7t
9D/IxztZ5c4dn0YQm587Qa1hYKbp+awF73iYGDjh6LhvGMNbVPbYnPyAtSeV
JJ4uIvq3nrcp1ZOPwxdNHmsZtePM9riFC0FjefO0MibxoegvOwsHDTsgVqS7
9rUjjYxzp20PqlOwt+4UUBbqBOciJ963kYb/0QvuMcS/D+69+uKsPhPJI7w9
yxhE/2LCMw4SvVTFbtBJ3j+Ek75zhARI/1luJmW3kuT4tn+D628TX5Qwccq6
RPrdI1Nc+kN08e0/EW4Am4Mm088Plup/RLmmzoZATgcKM4PtYqb4yLW0tDvF
GsaQdV9pvS0bMhLyYoNjFH4yL6HSi8L8wjN/ZRoppPZG1twVoGHtxIpQzaTw
9+62QJFXXMyr+WsbfawZG9RqRGcTn9ESt8zXVuNgwuz5KwniM9rBEh4rFlKY
Hv7IOf3ZGAyTHm1fubcJRbq6TFWiO+HBhEfWQyyUJ9Q7zCe6u20zY9EQed6Z
tt5p3x+S57gmL3ukaAhhPF1d53AakqL+Nf8RXtT33st14vFgKBp//9n/86Ov
epcJeVcTdpSv5o7heOkWFzeiL/3CedMTCK88mn8bjCazMCRqG80luI0xTCSY
pCculdUUKbFhY8kF168Zqh8QK3Z5zmrnDjh866/J/sXH3Ie5GzJPDuG75k0N
PbURPOLcK6XrKbyUWVb4muTjGafjnZUE/+K0ogndXDYmcmd4yZM5SXF1wobN
aExIrQg4fL0bJ1yrfRb4UhBXKNqd+pWDglAXfb1PTdjbtjHpvg0N7SLzhNB5
FI55i3Nk3ncgKy1N15/4apFey9Zg4qufx8vqbT8OwqQw6Z5QM+m1DZNTIuS+
2g0XdFWr2dBSP3VcpYFGyTmH7nziG0sYM04+wSB6ZykcuEh6/rvwkrPDpAf2
esaHHjzNxrWSPSXL1Wg8dzyxqnM3DUGWslz2CzKPGPO6wxQFWXq9hhjRmWJe
ueXsxRScipwby4YaoBzofj94RTsEMl4f9yb9/rVoh/cvgo/S4IU3oQSfCaWy
nAmCj0PtsQwFVR5kni24YTOdj+aHJvYVJFf+e8tbGbSMA+ndxi1z1atgLPn4
sJxwDeQqs28aBVBY1jZjR5MCF0LL++WjqSYEHL+4q8aKgodXxRGLsxzsYAmJ
ChQ2gTabL+JBcFD+t05dp5j0ukOPgyiHYTy+S52XvEZBfjw6ViWci/KO2C1S
cs0QGba5WUT8R19XLN8yhUaO6fj1q3H9GFh5psyF4OLKHm/fQXLWMC78p86v
UYSMdqv5/6KQnmbWvVmf+EPaTdEDJK/7RzSqt1yhcbtVelyL6MzOrDBq3IyH
0x435NbnN6BhWqVslVg7Lj0a3574mY9zE7PMw/YwMXCxZ1qqKQvRAduOTJQS
3c8a+D3hROFWdU21TRWF4u07hl0UCN6uHy6ON/LgZ7rYanvAMF4FbJ3tf/4D
eN32YvEmfDiovlz4ZfcIvOa+7BISZMD5nKTkkgIKXVWzhSoGuWgK262p/bIZ
pcyY4EiSI0cjo1pqBigsne42NZrdhX3CaM8k/jstVXlr0iwyj+chAuPTujH9
eH1sOOl5w487brQUET+mQosVHoxBQ10zL4c8v7qAmbG7J8mxYQV/X7Ifzn89
TpyVwnY1YyPhtTQ8RVWDQ+ZSkA6Qcyohc7a2kjl/h/jPKrPWVo/vJN9/Czcp
176Da/z8vk8Sbeh5YRFTOsaHmPFD/7Fzg7h29exph4RhmEc4c+5nUfgmafST
/Zr0kJDspDqSj7NCGsYvvhzFADe4eyfZOwoyVpzadINGf7vVTJG4Pjiu6M+Z
oUrjVm+Y2EgwH5Pr8s31j7ejZZWXtTjp8TZfNUtK3UgPD7/Wp8XoRuJOr2qL
SxRmL1/y1siHi3vVtWvqZjfDzJNVYEz20KresaQvZA+1O1NA2eb0IsXHvPiC
LfGL45Olj4IIHybn7c8MIP757ttCiuiOdhdy3p1NI0777oahxEH8tFzr4ilI
Qbv8yo4tZynENsqJmBFc/yw+6Xz7HR8NrveWZthR8MvQQxfZT4aSHz/QPPYW
16p/v1RzboWxlLlhO+n9/X4Zny1XD0AnWuFwSMQQpk6OBHlFUyjqKnnFDKUQ
nHKH2d1LwaonMuwTea9W8h94SfASP+y9aEUJDZUq273Bp8ZgSs3vSQkm+8iu
igLbbOIzj2e03ZfvgqCroXwj8UM/g1mn2ogf3qkx8i+wY+NXrKPKWbIfpVV0
2/3fV5PNBafefB2CVavSql6iH+zYIHuH5JRznFl9+hYuKnNT1q8nc4/6nGd8
nMydcWQTY8EUB7U75/FmkJzNVQgulCc9OTv0ic4SqxEsbFTvXHyb5KD1dKlJ
ku8KnSm7/SW5YJatNu5s/b9fTU/zJc/B1eV1aO1joT66MECaXYtI4yTT+Mst
eDPHIGRDPx9Psy5VCJgOoHb0vvaDhCE0BrUGMslc9SbiZcokx/DRPWfFq3gO
5hsnCy+zJ3lydfUgm8w3bn38fAeyL6v7mXjlrerDRbUyzWuEV+fHFWUqCK9u
0KJdNVV9mPwardFIzhOwrJlrT84znhyyOmg3C2GP5P47SObZc7LaPZrg0zte
fO39wBjubrvp/Zf03fLEHvYTkl9rjF68KSB5GB/FDGd/oqBU9GLlqSU02oyi
ihzWUejZxLaK9uShJSbSz8KAj/2aWY7zCK5ZvqE9O+7SmGEY/f0b2Ts+tz5L
2HWLg5FkC4vscQpVPg8uaq0mOXaqOZ8nR6HkR+JC85i3CH25Ld/Pi/Cn2nyr
EYsP94V2y59K9iP66CVz699MZPhEnOKcITm9SSSK2UdyOdIqulSF8Nl+OEBy
PYXdZ9SSHxFfbZihV8ggvtqbe6U/y38YDVzl2rtE70JL0yT8Bng4Rp+LHpjZ
hjjHmNkppO9NvZ2MdyPzrAsUTmPeInulbwTnB8lHmTVJtVeI/nz2vfjZKMDC
NPpulBPJdxfGyZ0fSU7aD2X8ogKG8MsufVNuGA2lIaHahlQaTg/k9OgfPGSq
z1OcIPdVCY01PkR8xkOAWZMqRYGd3Jeyi/S2A36LbwaR619duNPyxfwxrDg/
4aH2hMKNJSa7WkTIfNZ5f0gJoXBvr9j1EqF6RJWVZxlotpF+e/Nzwv/3Z6tD
cxS9P0F9ov6nzBMmigwk3rv7k7xrcXOUWTSGiLsL1v5J54DYc1uiA+nR1Xfv
fTAm/j3/+oXthRR++G603bSZRkiDQ/7frxRqE1/2h3TwcCSi32b9t1a40BqP
bYi+8w+tUb5Dnut4fPnfbvEBKKxYuD6O5PLUXpMWheektxQIfHygMAIlH9/0
s2Q/upo0v7KQ4CPm/n2riB0HjpISvuxLhH9bXkjdJjpL9JmXk+HKw8xrhopG
pD/0KTZlvTxNfORozPvaQOLPE93K3w+S8yi+j73wjsz5+pFNr2fSGB2XuSRB
csfpvWlB1isKbZtfiI2RPW+jt1eMHe8t9u/aluyZ0oq5CatLkkf4KPRa0Jwr
1I/f23zzvL4zIeB5ln2M8Efvlo6GQPMoquzrn1w6wIGPi8hRASsaXxyL4/Ss
iX5bZz/RJfv/SdXnN/897cD6M0b/tpN98Oo0lyWjxAd0ZZnyEl/Y+Lt8n+BP
whP2UjVWG+kzXgkrLauy2NAMzLTZS3zJ/aCyxk/yOTVp/mHJwAjmqIlGniF5
zTJco+5C8lpyo0mfyY9RNPjsuT5O9JQmuLFF6x6FZLUY6hM5R85njd9fn1Ow
bXdc5CFK4xezP+osma/MrIoNB8l+MHDr08ON4RTOVP75cpHgvv/f0U/niS5W
faHpw//XRfzM0kKiiwK50EXPchpwnOWtMTarHV91ZCKiSL4f02Poc4z68aTm
yFmz2UMI/GOo00349v1QXakU6TFUiWqtljYPYutc7Vwi/5+Tx8NUyb7zYnxK
bJD4SXdsjsrlZ6PIqch0LCT3n/VENbOS7A3nKMedBWe70SVX5qdFfp+S/E06
N46G3taEG6overC7fq2VDtkXjHz2xMwkeJ6M8notIT2Kvn/R61IIP2a2VUbf
Ij6cfmdNzMQEB1bpS3erEf4Y7uoJ3EG+HxpsjaS8eXgzKOi6NYH4bHhp5TmS
X5ztEhlSb7j4Flqt09lB9gBDptlqRRpyp45OszClwFDncm//4UMxkDX+PYjC
EpvLDpKEv/8DYpWvUg==
     "],
    VertexNormals->CompressedData["
1:eJwVV3c8Vu8bzmip0JSRFF+ySimE3A2hhYisSkYykowUsrLLHtmZrz1ee8Rj
FzKzklGUhPccUcj8Pb8/zj/P53zOue/rvq7rvp4jBo/VjOk3bdo0ix8G/PjI
W57T2mUBwX3c1MCNAaRdd8brhB0NFNao7Mr9luCnNjavsdqH1G2n8/SGaTB9
X2vcKyQHrpZbWgp/70SinAX/dDoIuO/6cOyCSw50VDc1sZS3oxsKH66405MQ
s0vCtFHfBSSaMw+n1OYi2lArx+IsCWMHfz3+Ov8CLdU16wuWlUG6Yegm188k
9Pxl1hakD4AFQ2PRqYwc8CSqm3R/k5C+ILMnY+AGYivo3shNLQJHE7sDKj9I
aN91vvIyQwIaYJYKl4/Ohl7miy9PkiTMHfnCPBaWjSQvS42glgwoydBg7Zgk
IVHGdjG+LAB1L0dWSAjnQWqnAOMYfv98ILP7UKAzev7l7g/jq2FgvO/xkOA6
CYGm2WXcbXag8P2Oj8fKADoXts63hPGRk66vaQsJg0g0ddXpQQ/SzXrYSqoR
AEETp23V3kDthYXJz9JdSMThpNZtjA+r3wR7654k9Kw2LF/rUCeKsPMPbJkj
ICqF0SlXwBHJsQWixztcgdtU3T94g4TjLkOyg1ttwdrvTymfYiG8pqmcSsH1
Ny4jgVD8vtBHQU0f53y4ReG4+ZEgQTgryGfv12h03io8OkY2Bx4Uhjxrx33d
Mfg2JXX7LUrZn9aTL5UB39uKb0jMkUB1sHauX3iF1oxyXKj1VBjmta10mibB
USNE9U2WH1KNcWfaup4Bx17Utlb9IUGhiEXoFuU1+lnBZfE3MRbecewpW18h
oV92Z1r9aTeI/O9oycHFAcTT8m6k9CkN2je5KstoGoFMTP0+veAeZDJjF2p6
gwCD4g7qa49UdExsf2FOUg+SuDki8vkiAee9LT4OzkYgB+3T+54btyIx6SxO
5vO4nkkRecMTGXDtdgP9AesMcH5qmTSH66w9KuPUbBQAjj1X1rZ4pEHzPqls
mwWMQ3RJrHi7M+reOZJuFJYOlf5iEWr4fD/xNPzkaAgkHuzXuS9WCKoRljsC
f5Jgx37VpSI2BXTbR9ze388FZ15lrV9TJDBbeyTPcYVBU21fYPVwLsgRHBoe
GE+eF+cGUvKNUKe0jYHAlTRYsgtVcFkk4YiSkRxbbTAalBabiDKngJYdXeck
/m/YgPz9v8LuoGrUbd+bNYA0DEKLX3rRoEtZrKAtwx3AO/egXGYvKtzLx77G
SYBeVpmVTGUYFFc1e/1M6UEXN212v61EwHMt2V9lXG/AQLdrh69wI5Le1PWE
1Z+EjM3Hy+OkwyCOZyz09fsU6I7Z7k/B9VSg62o0d3H4bB684RERBFc7bStm
MJ8FZRmKdAVcoNlrvDPhBhXUb7Fe2UojQY3Iszw8Gw7ylA0Xkr0MTsQ6DZdj
Pa5Jt26oXXeFkGmTIepKGkzOJToi3NcnKdJmYK8z2N6dHSLkkmCN7pVu6DIJ
h/tyBr+rWCOOumFf1+PhYK6Sqy6E/8vwaX+e+ZtIFCC+L8LA7S16ssHDUveP
BO1T5wb2CLhBguuJlnNl/eixnCH7tTIabDPmPugdEQFKDCo6F3/3IH+pO4e+
SxPwIJ89b0HZAxkR41EfWPrQ+todd/vtBHCaRF9bmjZHj1Qmx/cdaEA/n/BZ
2EWTwNmqOKQX74i6uXrLvF6FA73Dxb2bcD0jz8MUB4z0oU087BBhEwP59oJ0
TGskiMUW5/34EggpkzNOseMFsIUGy9lYd5wGUhTLL8aQlC6mcUC2GFRCFayr
xkkwVRi0E9D3QAbzRySVRtKg5nnSnnyMzy6deEFjERt095GaBUNIJnQ+7OIf
xTpi0j87Q93vjn6f9DE0oL+Har9fdMjEem+rOTxvGxoNbdeiZZZt3KDvyKrZ
71USqufvHS13tQOqwYuEkII+VF0pzGg8TQMJ6TUdX63bMC6b+P3mp150p2hh
YnofAU+e7i3LpgQjhTuvFdo0+lDnlSV3ygoNfm4Wn7viEY7C51piZyrrkbrg
QsnZWBJOPSrsVziUiAL/nuYxa40Aq1+G3EZ4Loee3+qe22eHnize3/NqKhM4
DU9eCML1ezoMpTgGvIWIcZGRh7tKYNy3qitlmASvspE13bfBoCkrqkyRzwBr
Ou/gtv/3W0NhOcGTiqbIH/F9CyFgxZG7Nx7z0136QvwbczckbpQcrWdVADVL
UwsWWHdXW4qRUkYkZIrINDvPJMJzA7GpqCUSVozn1FWe5EKL98+to0xVwGKX
Zer1joTiYvOMHVo+UCFt4D9W3Iu+2jgZJrMTwHBTb0t/mStIExKHJc/2I9YJ
3j9aXTSY0ojUoGNOAuaG9JgvXb3oC/1ScBMLAV9fv2jgrcqEPR0V2TeHG5Fi
zIcLF5wwb0WjaI90I8DyGY+0iNIbyAwc+UzDvqfs7dXiF0WBsqd6uUmcFUAX
Nt14sY0Es1FVh83z8bBee/iD+WwBaJhV6XzEeyraTHT63E8z5Mey67pNhTP2
m9Hscjz3drmDjfY/E0GdN1TEeDgTvuwUeFeAfSZ/Xu2KYG0OJI8ldPcSJWCQ
5Jsl2EXCzr5ybpbSbBi5V6HcFZUPqSLP+Pu+kfAqm/NIgkUuZDjXt48llUNt
UL755Q8kmFdPmLg2OUDRZzGDSzt7kURmrjaPFAGZLCdvdxqlgZ3q8tGzrD3o
8fGHi0w6BFQ4HvLzVcyCdoOA0J/l2J8vr/dJY9392XxqePZXMISvl+tdHW5G
wFYs/E6DBI8wJ67E+2GQn5Vme1M/GI67cr86hXXUcMV4/SiZCpra7TXPOMtB
1qJtfq4T+4Pxga3fll+DT67/Lce5ZDCx2Vb0F89XeYmZmXshCm65N6Yacr4F
7yO9peGYh7M/v+Ua78qAAbZDdAp6JTAwUC3V34d9CbZPOGj7QIxAo/fTvzmg
eopZxQDnBIM0vr2Sj2RQJNuTK78t8yGYWcieA+NZ7Rhqsi8wCV1aOStamkSF
6JVFfT7s/zUDPEceBgWBv9TYnsrhT5jvLv8kzAiwPEoIr986CDwq79Pf/+tB
E1HxHF4yBJA/itjq+T1AL43Dg8uqFxVEGM6q8RNAyWQyZ+aKgbgXTDyqB1pQ
aJ1vAc9NElQc9PRyPqVC/LVrq396qeDpFNCR8J2EHGVz0bEfDsjtUgxdfHA2
nGnJtGWZJ4F1fTUvjpWKpHdE3j9pEQpCoUFqN2ZICKgzfLWt2hMdrfd5cn6l
CKwEguiWsf/oeCv/yttXCINfUtI+KReD74c1yeKP2FfFhVV/2byB9X3xSn1f
g+DD5fcz77CfdKRbnx1iiUVCv8xF+fKTQW9HZPUQ9qtWldg0e4VMpFW0XfJp
QS5sttBZs54g4athu4ZmVjAorcr8KOnoRqEfH3AMhxFgPV3tsXY2C+x+qWw7
8a0bNXVL8t30JsBMuyZ39EIMmNR7b1L52osWlpvcHbG+6HY6yP78mQlZ316E
Byo2If2H5h229th/FHkO7YxLBY79ZXwXWh+gGINLzzMxH05U+lozuoUiLdGX
HPkN7oj11LyDMPZt7ioXl4MOVNCuck1LGC2BfzPRr3bgfhNL3ImC0zUwltTM
TMg3gcBEv8chnB84WjUOcxpGwGSejT/btnAwYHFWUMU4tF6kj5DTDELlk2qf
x82jkO1R2XRLfB6zcLnu+rZ4ONWi8DVGMhRK3D7d2Yb1bsq8yfyKTjG4LOxn
XrgdBtOaiTM9WHcL6yvWz8SCYTHHR48BdaHeIwKSoVUEyIW+SL0hH4zEGmWW
RhZ60Dm2e5mtWEcDQZ7HjT0ywUmVqvOorht94cj8m/OaAIk7TJeaKBRELFJZ
0343I61nPxIab5AglWI0dtI4HQUfWV9SyKCA6MSJtHSc98Y0mf9LEsoAHbbd
3rlzacBpHLXGjfe4CGPBuB1/KXwLGir/PFELbeeDLkTgnFCp2L2dkl2CFElC
NdHdFa0sHVf3HSXhqcaj8NGqKnRL6Vy56Fc/8H3oQt/1ngTS5sHFvplg2Dij
+rEhuQjkH9zz2YN5G1nRccyBsxRStobxC9gVQt7Wjh0NTSQE3XjsmSqdDPfS
HPvPbjijuynXdFaxfrVeOC0Tp+0hX2RtOPlvFwrt7A8rKiHAqThmtnY1E96K
h3j4jnchxzlOkbc5BFwmnkySEwEgQefIoBTTj27Vl/roVdFgs1BRU8FaIQrW
bvZYlmxHuzcKXPPXCbgLNis6p93QfMuPW2I8NbAW5XbTqpoEEyeb231rbxGv
tmjCJ/oKSL0ZnR+O/dN7fOuI59Nc9Ot7o5jedCLsThFJtcP6kvFiKpwdyUfr
meZGx8vjUZxMZK8z3kdxs8EaXCV5MFWt0JQ5VwOTf9gq6dLxfcFpA7lPUiFF
dPvks8FqWB2hLu7Ox/wpFNKVPOoLz78kOkk0xcJQiunYf5hX5rHuH3kfxyEP
ToHlw1upSDktXsYef1/Vhu1mI+EN8o1GsbIeXcjnw20yromA42JnhBLPnIUv
NIuVun+dqH+vm1PIIAGB+iby2yJSkcsHpg/624fR1dT//EScZsArxIvZ/xau
oy2g1U+pBmk83Bov/5KELo9yLT5/KsyUPFzyin0LF8xvev3/HjTqbmbcGpUJ
kqbPWtxWK0H8UiBvYz0JSq8/sfG3JSC/f+4nKgLD0czvXzqNeI5+uu+af9LS
QbFPUV/waSUsa+/Y8xfPfYBhXHVDuAyu63zzfslVDxNvdB2PueB83vNISy8i
FP2+znvpYFsUHIG8exNYR9Tzm33R1gC0XUs4qEsjGArMpZd+431xI/pu5IND
BdCnk1vLr5WFAiaVvKsxP93rfnxa5/EDvrvbTNoZuhAXf4ONywAB4Wf0rfx+
eKHVisMyxgK9qGZMad82cQL863njVNLToczHUFKT0oseCL43m99DwIvf9Jp9
b99DudDR610mJahDPDBFQZ3E9y+2RQPLCgiUbFoMPxyOYhlscuy7cZ3SwpV+
mflQ/zjv7sJ6KIyzN91lxvqSHvq12+hfNjxX3RNwXkcH3XtZFDqE71PTgVIX
vntXAaW5XNG2uREynNJl/6qS4OIzFJvI8xSW730Mv1wRAzEDDRZfMR+Slajm
BjbpaER1/DD9Shh4VRf4EzgvXUgXdegXegln7RpbH/wuBwEzSUX7XhLu1S30
FPEXo0XIyi19Fo2CnOvc5LD/bCf+MKaoBsAcpZWNR7MTuZttKyggCbAn3h3z
/pYIEbP2UYPyPShsrI5/pwYBKpTC+mW/WjBg3ftum1ErWi7cRNk/T4DHQ+OR
aIdkcEmv2cVr0Yzm7BkDkSYJrsLXqEwhEVCdlZBkmP0InSk7WPMHz8vzT0N7
TXYBdHRdc71uHAdbLI+tNON98Z91z2cuFwREdrGqTXYuhI3ynSELSKAf8+pz
xXsl+X5GJuv3QlCMWp2yGcA5wSdKcm9rMMxGW1loWqUhi8o2fZH/39c8aRO2
3ypAoqN5kGZLhcmsEG4/RMLpENtzuwczULe4H4/tRDKiLUrd0sH7Xa1L3bbW
MQ4ZxvYbz4wkIp+oYqFYnDPfXT/boyariFhMGqab3DpRO7+Fbc8UAVdN9aYY
wxJguXmuRG5nB1IzLdWnbSGhmyHAemEkEhV+H9mR0NyNZG9lsL/G+26f4QX9
bpSOBmdcRTpWW1AQL018lxwJi4pH1Tw9XyKbC4wJhqZRwKjV2M+B8XnOxK7G
lByLnuVetOi4kw/Pb6/RtmKfUSweBaedL9FU/nDPsdxsWEpuUP2A+SPY6Hh8
T2oKIr4p7qsRT4Q9B3Z5FmM+HApxjTQ3pABNeNouzKoEuHR1OaIxbg6D/H45
qRSYGOuNcNjsjThlVZqf4n6Ld9355DP2CKUwbmor/VOIqOei7RlxzlnoVH0V
lZkNxB1blyutlXDkTd98ah0JhkXnBgu3GaFblrcFOew60AS7fFUFI84VxqEU
1/2xyNWIIdRKuwsdyQAW5hYCtNxuym34BsPPamGxVlacl0pqJz76EUAruFLq
cwbB361vhFIi6tBRhyfDRuYk/Hs9zJ545z5ivuyiu8FARfczCijDWEc+N7UM
lX8kIt1jDc8+W5eAzi9tOvMvJFyak7ur2JiCmDSLKVx+UaDumF5chPngXMc9
tHvzU8TXu+Vic0shNOUU++vhvpK/j38MYo5CZkn+p1vFy4Cz8e+xAYyP0lta
qU9wDqqaPRP2eyYb6QhpDEnhHJ7A+OvRp70UGBZmS1bYkgjaIt6FAzh3BYy1
cJo0UkFoTqL1HL7/Ou5nrGjEe5CrdvDH93Z1KOF0KfA83IaeuJ/dxytIwsND
q1nzx5Jg83Gjr6Uz7WhZI8aKfhsJW2YSdshOV8LrOJpIq/J7xGTNtEnrMt6D
dHE7pUdjUbDh1EB6QDca1FdXyYwlAG545fL3+oHGaEcBsKai5XNqpno4/9hJ
3HfYQUeFsaDIZMdKKrhSb9uJDeJ53Vhd5OdLhf5d8To87ylQuZSm8mMW61R7
pupceDRYd6SptGkVgKp4RJUQ9vn0paCT4qGRsC65M4+VKQ92q0cHBeP8MMX3
yjktKBNoB+ezLWMdoGZZdKkF820++J26w6NC4Bavi+ldzoZSpS1vTuO58I3r
Wrx4YA+8A4lM51xDUdmWNev7OI+JUC+UPRa2R67nNVMjfNvQiQYQaThKws+y
XYKmGTboUv/NxxlVLehTRj493zUSjopUu8fXUdG1Fyqcvk7dyKTrn7VYAAEZ
PFRLhepwZDZyV0dF8SMKClfLzhMn4WzDkXEPrgLwLXxYuYHSwZM7SHwU+966
3tMeBp23SEd6f3EluxtQVmYLR/F+6XquJ24gGoBefXEwEOOkAEehqd0zrIvB
Y84mMgXRICXzZKb4XQnMbJ3X6BkiYZK9U0J//jXQyfKv16xkA5mWJL8D61EA
NhN+GrGIe2ccT4ppAFR2S+T/xd+fso5abPdIQLf2u3ZUzXmA+sPP9sr4/JEp
z86sLm+03PE7WCc4HEmqbJpMwD5wIC1ulDfJE91OrfItY21D9Mdj4nwxf1Y7
RUPWPcJQ5qOecauLrWip7eqs4UXsD1G+BhtXoqE+J+CsqlcvivvuemDmMAFI
qrmxSL4IuH22XiL4S9Hf1eKsmAaMD9fYNG1HLZKK/1DqfjgDMVotqe/JISHT
mN/ed1MhWr0+8G+3BgW2bb9/OxzjFr30dwZ+xYDp5PPeXs1CYFfm+OOLdcH3
36Hzu+56ovsqwrTSwhKollRkVMT71/LMi+J0qED3Us1Wvho5o7HP7nORPXhv
hnEcGV8vRGsvzdyS5FKgc+8y+eorCZuV6/Oi20JR2CHHbMmNaLinalEYj/HJ
iKDAFC8VBjvFX9YX58O/opoUToz//wDCsPt7
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]_T\"", TraditionalForm], 
    FormBox["\"\[Sigma]_S\"", TraditionalForm], 
    FormBox["\"E[R0]\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{387.34616553413605`, 328.100209592273},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9726653673628138`, -1.9787576891719234`, 1.9086931015619897`},
  
  ViewVertical->{-0.3982426164652689, 0.3994725372707685, 
   0.8257266559808709}]], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520370984297*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"bc147f97-2c6f-40ec-b825-3656e825006c"],

Cell[BoxData["\<\"#### All \[CurlyEpsilon] grids finished.  Outputs written \
to figDir & dataDir.\"\>"], "Print",
 CellChangeTimes->{
  3.958513437487608*^9, 3.958513570267089*^9, {3.958513660823084*^9, 
   3.958513667730399*^9}, {3.9585139235075417`*^9, 3.958513933556457*^9}, 
   3.9585140578565187`*^9, 3.9585141024809113`*^9, 3.9585150389360647`*^9, 
   3.958515489390832*^9, 3.958515575738916*^9, 3.9585165312584667`*^9, 
   3.958517060784013*^9, {3.958517273882538*^9, 3.958517309753751*^9}, {
   3.958517340078689*^9, 3.958517367662038*^9}, 3.958517444745564*^9, 
   3.958517808006795*^9, 3.9585184345349197`*^9, 3.958518509594654*^9, 
   3.958518566280678*^9, 3.95851871837085*^9, 3.958518965398575*^9, 
   3.958519172387205*^9, 3.958519422022829*^9, 3.958520198368145*^9, 
   3.958520310234268*^9, 3.958520371799293*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"38e70184-485b-4938-a01d-8de2d381457c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"06", "b", "  ", "1"}], "-", 
    RowBox[{"D", " ", "sensitivity", " ", 
     RowBox[{"plots", ":", " ", 
      RowBox[{
      "\[Sigma]_T", " ", "slice", " ", "vs", " ", "\[Sigma]_S", " ", 
       "slice"}]}]}]}], "                       ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"-", " ", "choose"}]}], " ", "slice", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"points", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"sliceSigmaT", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "0.5", ",", " ", "1", ",", " ", "1.5", ",", " ", "2", ",",
        " ", "3"}], "}"}]}], ";"}], "             ", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", "tweak"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sliceSigmaS", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "0.5", ",", " ", "1", ",", " ", "1.5", ",", " ", "2", ",",
        " ", "3"}], "}"}]}], ";"}], "             ", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", "tweak"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"fixed", " ", "baseline", " ", "values", " ", 
     RowBox[{"(", 
      RowBox[{"centre", " ", "of", " ", "other", " ", "axis"}], ")"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"baselineSigmaT", " ", "=", " ", "1"}], ";"}], "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "held", " ", "constant", " ", "while", " ", "\[Sigma]_S", " ", "varies"}],
     " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"baselineSigmaS", " ", "=", " ", "1"}], ";"}], "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "held", " ", "constant", " ", "while", " ", "\[Sigma]_T", " ", "varies"}],
     " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", "recalc"}]}], " ", "R0", " ", "means", " ", "on", " ",
      "each", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"slice", " ", "--"}], "--"}], "--"}], "--"}], 
                   "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
            "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"phiSliceT", " ", "=", " ", 
     RowBox[{"ParallelMap", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"First", " ", "@", " ", 
         RowBox[{"computeR0", "[", 
          RowBox[{"#", ",", " ", "baselineSigmaS"}], "]"}]}], " ", "&"}], ",",
        "\n", "   ", "sliceSigmaT"}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"phiSliceS", " ", "=", " ", 
     RowBox[{"ParallelMap", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"First", " ", "@", " ", 
         RowBox[{"computeR0", "[", 
          RowBox[{"baselineSigmaT", ",", " ", "#"}], "]"}]}], " ", "&"}], ",",
        "\n", "   ", "sliceSigmaS"}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", "build"}]}], " ", "two", " ", "simple", " ", "line", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"plots", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
             "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}],
     " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"plotT", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"sliceSigmaT", ",", " ", "phiSliceT"}], "}"}], "]"}], ",", 
       "\n", "   ", 
       RowBox[{"Joined", "       ", "->", " ", "True"}], ",", "\n", "   ", 
       RowBox[{"Frame", "        ", "->", " ", "True"}], ",", "\n", "   ", 
       RowBox[{"FrameLabel", "   ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Sigma]_T (Temp SD)\>\"", ",", " ", "\"\<E[R0]\>\""}], 
         "}"}]}], ",", "\n", "   ", 
       RowBox[{"PlotMarkers", "  ", "->", " ", "Automatic"}], ",", "\n", 
       "   ", 
       RowBox[{
       "PlotLabel", "    ", "->", 
        " ", "\"\<Effect of Temperature Variability\>\""}], ",", "\n", "   ", 
       
       RowBox[{"ImageSize", "    ", "->", " ", "Medium"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"plotS", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"sliceSigmaS", ",", " ", "phiSliceS"}], "}"}], "]"}], ",", 
       "\n", "   ", 
       RowBox[{"Joined", "       ", "->", " ", "True"}], ",", "\n", "   ", 
       RowBox[{"Frame", "        ", "->", " ", "True"}], ",", "\n", "   ", 
       RowBox[{"FrameLabel", "   ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Sigma]_S (Supply SD)\>\"", ",", 
          " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "   ", 
       RowBox[{"PlotMarkers", "  ", "->", " ", "Automatic"}], ",", "\n", 
       "   ", 
       RowBox[{
       "PlotLabel", "    ", "->", 
        " ", "\"\<Effect of Supply Variability\>\""}], ",", "\n", "   ", 
       RowBox[{"ImageSize", "    ", "->", " ", "Medium"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"sliceGrid", " ", "=", " ", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"plotT", ",", " ", "plotS"}], "}"}], "}"}], ",", " ", 
      RowBox[{"Spacings", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "1"}], "}"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"export", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                  "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
           "--"}], "--"}], "--"}], "--"}]}]}], "-"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Export", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"figDir", ",", " ", "\"\<phi-sensitivity-slices.png\>\""}], 
        "}"}], "]"}], ",", "\n", "  ", "sliceGrid", ",", "\n", 
      "  ", "\"\<PNG\>\""}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"TODO", ":", " ", 
      RowBox[{
      "add", " ", "error", " ", "bars", " ", "with", " ", "phiSDs", " ", "if",
        " ", "we", " ", "like"}]}], ";", " ", 
     RowBox[{"tweak", " ", "slice", " ", "values"}], ";"}], "        ", 
    "*)"}], "\n", 
   RowBox[{"(*", "       ", 
    RowBox[{
    "or", " ", "normalise", " ", "curves", " ", "to", " ", "their", " ", 
     "baseline", " ", "R0", " ", "for", " ", "relative", " ", 
     RowBox[{"change", "."}]}], "     ", "*)"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.9585196748661537`*^9, 3.958519712254334*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"7e753ba9-55d8-49cb-b407-1bbdc1b22f09"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, 
       InterpretationBox[{
         TagBox[{{{}, {}, 
            TagBox[
             {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              LineBox[{{0.1, 0.8845050746945011}, {0.5, 0.8885668001552594}, {
               1., 0.895631095273347}, {1.5, 0.8887811043530693}, {2., 
               0.8910357822382027}, {3., 0.906789785006646}}]},
             Annotation[#, "Charting`Private`Tag#1"]& ]}, 
           TagBox[
            {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
             AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
               FormBox[
                StyleBox[
                 GraphicsBox[
                  {EdgeForm[None], DiskBox[{0, 0}]},
                  PlotRangePadding->Scaled[0.15]],
                 StripOnInput->False,
                 GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.24, 0.6, 0.8], 
                   AbsoluteThickness[2]]}],
                TraditionalForm], {0., 0.}, Automatic, Offset[10.976]], {{{
              0.1, 0.8845050746945011}}, {{0.5, 0.8885668001552594}}, {{1., 
              0.895631095273347}}, {{1.5, 0.8887811043530693}}, {{2., 
              0.8910357822382027}}, {{3., 0.906789785006646}}}]},
            Annotation[#, "Charting`Private`Tag#1"]& ]},
          {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
         StyleBox[
          DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]], 
                 
                 Line[{{0.1, 0.8845050746945011}, {0.5, 0.8885668001552594}, {
                  1., 0.895631095273347}, {1.5, 0.8887811043530693}, {2., 
                  0.8910357822382027}, {3., 0.906789785006646}}]}, 
                "Charting`Private`Tag#1"]}, {
               Annotation[{
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]], 
                 GeometricTransformation[
                  Inset[
                   Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                   Offset[10.976]], {{{0.1, 0.8845050746945011}}, {{0.5, 
                  0.8885668001552594}}, {{1., 0.895631095273347}}, {{1.5, 
                  0.8887811043530693}}, {{2., 0.8910357822382027}}, {{3., 
                  0.906789785006646}}}]}, "Charting`Private`Tag#1"]}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0, 3.}, {0.8832670352327175, 
                  0.906789785006646}}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {0, 0.8832670352327175}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.24, 0.6, 0.8], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{0, 3.}, {0.8832670352327175, 
                 0.906789785006646}}, "Frame" -> {{True, True}, {True, True}},
                "AxesOrigin" -> {0, 0.8832670352327175}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
           
           ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}],
          Selectable->False]},
        Annotation[{{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             
             Line[{{0.1, 0.8845050746945011}, {0.5, 0.8885668001552594}, {1., 
              0.895631095273347}, {1.5, 0.8887811043530693}, {2., 
              0.8910357822382027}, {3., 0.906789785006646}}]}, 
            "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             GeometricTransformation[
              Inset[
               Style[
                Graphics[{
                  EdgeForm[], 
                  Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
               Offset[10.976]], {{{0.1, 0.8845050746945011}}, {{0.5, 
              0.8885668001552594}}, {{1., 0.895631095273347}}, {{1.5, 
              0.8887811043530693}}, {{2., 0.8910357822382027}}, {{3., 
              0.906789785006646}}}]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 3.}, {0.8832670352327175, 0.906789785006646}},
             "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0.8832670352327175}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.8832670352327175},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox["\"E[R0]\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"\[Sigma]_T (Temp SD)\"", HoldForm], TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{45.1962890625, 1.6883769132653015`}, {32.34375000000014,
        0.5000000000003979}},
      ImageSize->Medium,
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.95, 0.627, 0.1425], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.455, 0.7, 0.21], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.578, 0.51, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.4, 0.64, 1.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1., 0.75, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.8, 0.4, 0.76], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.637, 0.65, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"Effect of Temperature Variability\"", TraditionalForm],
      PlotRange->{{0, 3.}, {0.8832670352327175, 0.906789785006646}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {181., -122.13663824634818}, 
     ImageScaled[{0.5, 0.5}], {360., 239.76591882575394},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{{}, 
       InterpretationBox[{
         TagBox[{{{}, {}, 
            TagBox[
             {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              LineBox[{{0.1, 0.6858456305428549}, {0.5, 0.8092648714276882}, {
               1., 0.8851469536380405}, {1.5, 0.8517100664148748}, {2., 
               0.8239429368622808}, {3., 0.7940829121429152}}]},
             Annotation[#, "Charting`Private`Tag#1"]& ]}, 
           TagBox[
            {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
             AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
               FormBox[
                StyleBox[
                 GraphicsBox[
                  {EdgeForm[None], DiskBox[{0, 0}]},
                  PlotRangePadding->Scaled[0.15]],
                 StripOnInput->False,
                 GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.24, 0.6, 0.8], 
                   AbsoluteThickness[2]]}],
                TraditionalForm], {0., 0.}, Automatic, Offset[10.976]], {{{
              0.1, 0.6858456305428549}}, {{0.5, 0.8092648714276882}}, {{1., 
              0.8851469536380405}}, {{1.5, 0.8517100664148748}}, {{2., 
              0.8239429368622808}}, {{3., 0.7940829121429152}}}]},
            Annotation[#, "Charting`Private`Tag#1"]& ]},
          {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
         StyleBox[
          DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]], 
                 
                 Line[{{0.1, 0.6858456305428549}, {0.5, 0.8092648714276882}, {
                  1., 0.8851469536380405}, {1.5, 0.8517100664148748}, {2., 
                  0.8239429368622808}, {3., 0.7940829121429152}}]}, 
                "Charting`Private`Tag#1"]}, {
               Annotation[{
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]], 
                 GeometricTransformation[
                  Inset[
                   Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
                   Offset[10.976]], {{{0.1, 0.6858456305428549}}, {{0.5, 
                  0.8092648714276882}}, {{1., 0.8851469536380405}}, {{1.5, 
                  0.8517100664148748}}, {{2., 0.8239429368622808}}, {{3., 
                  0.7940829121429152}}}]}, "Charting`Private`Tag#1"]}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0, 3.}, {0.6747733348153463, 
                  0.8851469536380405}}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {0, 0.6747733348153463}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.24, 0.6, 0.8], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{0, 3.}, {0.6747733348153463, 
                 0.8851469536380405}}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {0, 0.6747733348153463}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
           
           ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}],
          Selectable->False]},
        Annotation[{{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             
             Line[{{0.1, 0.6858456305428549}, {0.5, 0.8092648714276882}, {1., 
              0.8851469536380405}, {1.5, 0.8517100664148748}, {2., 
              0.8239429368622808}, {3., 0.7940829121429152}}]}, 
            "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             GeometricTransformation[
              Inset[
               Style[
                Graphics[{
                  EdgeForm[], 
                  Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
               Offset[10.976]], {{{0.1, 0.6858456305428549}}, {{0.5, 
              0.8092648714276882}}, {{1., 0.8851469536380405}}, {{1.5, 
              0.8517100664148748}}, {{2., 0.8239429368622808}}, {{3., 
              0.7940829121429152}}}]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 3.}, {0.6747733348153463, 
              0.8851469536380405}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0.6747733348153463}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.6747733348153463},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox["\"E[R0]\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"\[Sigma]_S (Supply SD)\"", HoldForm], TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{39.634765625, 1.5748764349489761`}, {32.34375000000014, 
       0.5000000000003979}},
      ImageSize->Medium,
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.95, 0.627, 0.1425], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.455, 0.7, 0.21], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.578, 0.51, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.4, 0.64, 1.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1., 0.75, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.8, 0.4, 0.76], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.637, 0.65, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Effect of Supply Variability\"", TraditionalForm],
      
      PlotRange->{{0, 3.}, {0.6747733348153463, 0.8851469536380405}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {543., -122.13663824634818}, 
     ImageScaled[{0.5, 0.5}], {360., 243.27327649269637},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[244]},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.958519718425519*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"9d2450d5-310a-48e7-b0d1-afae8162e6fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Trying to get a minimal version of a simulation to define a TPC, define a \
transmission curve, and see how that changes R0\
\>", "Subtitle",
 CellChangeTimes->{{3.9585588668920193`*^9, 3.958558894339828*^9}, {
  3.9585594028409843`*^9, 
  3.9585594059890842`*^9}},ExpressionUUID->"1694fa81-f48d-439c-9521-\
dd2128202178"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rbaseline", " ", "=", " ", "0.8"}], ";"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"=", " ", 
    RowBox[{"0.8", " ", "by", " ", "default"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"temperature", " ", "range", " ", "to", " ", "sweep"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Tmin", " ", "=", " ", "10"}], ";", "  ", 
  RowBox[{"Tmax", " ", "=", " ", "40"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"suitParams", "[", "\"\<Shalf\>\"", "]"}], " ", "=", " ", "0.1"}],
    ";"}], "\n"}], "\n", 
 RowBox[{"wCurve", " ", "=", " ", 
  RowBox[{"Plot", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"SuitabilityFunc", "[", 
     RowBox[{"T", ",", " ", "Rbaseline", ",", " ", "suitParams"}], "]"}], ",",
     "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"T", ",", " ", "Tmin", ",", " ", "Tmax"}], "}"}], ",", "\n", 
    "  ", 
    RowBox[{"PlotRange", "   ", "->", " ", "All"}], ",", "\n", "  ", 
    RowBox[{"AxesLabel", "   ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Temperature (\[Degree]C)\>\"", ",", 
       " ", "\"\<raw w(T, R=0.8)\>\""}], "}"}]}], ",", "\n", "  ", 
    RowBox[{
    "PlotLabel", "   ", "->", 
     " ", "\"\<Suitability curve vs. temperature (baseline R)\>\""}], ",", 
    "\n", "  ", 
    RowBox[{"PlotStyle", "   ", "->", " ", "Thick"}], ",", "\n", "  ", 
    RowBox[{"ImageSize", "   ", "->", " ", "Medium"}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.958559412728256*^9, 3.958559412729216*^9}, {
  3.9585594442540913`*^9, 3.9585594549297457`*^9}, {3.9585598377254744`*^9, 
  3.958559875202818*^9}, {3.958559907561678*^9, 3.958559929570746*^9}, {
  3.958560742755205*^9, 3.958560801199603*^9}, {3.9585653089220963`*^9, 
  3.9585653110835037`*^9}},
 CellLabel->
  "In[1369]:=",ExpressionUUID->"75e903df-b86b-4ffb-86c3-cb1afc73b075"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], Thickness[Large], Opacity[1.], 
         LineBox[CompressedData["
1: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
zl1i32aztGwXiHHJuDqST5w7Haazzhr+BzB/IgM=
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbnfs+raJmsHBiiQaP6bs30rgr+i9FmQ9Q4E/3jU
DjnnvQg+m2rMtqDjCH6apL3X6pNI6nmV7jGfQfA7vj1n3XoBwec6URwqfgvB
58/u/nL7DZJ7Nu4yShWygfO1bSXXl8ci+Pn3hA57MdjC+W8+94R6zkDwXfSP
zfLUtYPzd3+2/v39HIKfrWN062KqPZwvW270ag2LA5yvJNSzjC0QwRdxcLV5
OBvBn7Zpzn2htwi+SbyJ0y0LRzg/KSBr048uBL/2yv/f028j+FsnXWU5q+YE
59dM9ZSOrEDwEy79/VB1BME3XCS4QJbfGc6ftO1wjHgCgi/Auu3GstUI/vWF
drY/1iD48+yOL/Rch+DrVNzIerMBwfd4/euP4TYEv+GiveLeAwj+h7knMy9f
RfC3WwWdU7mO4Nddv2VUdgPB5xF881viNoKv0cLXF/cAwU/ICt708hWCr85+
R8z6DYL/bnFKdc9bBL/mbqmL/gcEf0bAjGslXxH8+LcK1se+IfhqXSvni/9A
8Lcc3pWx6xeCX53gfJb7D4Lv9Pe0YexfBJ9jVsi0df8Q/PNmd3/9/4/gAwAf
bcCX
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
zl1i32aztGwXiHHJuDqST5w7Haazzhr+BzB/IgM=
              "]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbnfs+raJmsHBiiQaP6bs30rgr+i9FmQ9Q4E/3jU
DjnnvQg+m2rMtqDjCH6apL3X6pNI6nmV7jGfQfA7vj1n3XoBwec6URwqfgvB
58/u/nL7DZJ7Nu4yShWygfO1bSXXl8ci+Pn3hA57MdjC+W8+94R6zkDwXfSP
zfLUtYPzd3+2/v39HIKfrWN062KqPZwvW270ag2LA5yvJNSzjC0QwRdxcLV5
OBvBn7Zpzn2htwi+SbyJ0y0LRzg/KSBr048uBL/2yv/f028j+FsnXWU5q+YE
59dM9ZSOrEDwEy79/VB1BME3XCS4QJbfGc6ftO1wjHgCgi/Auu3GstUI/vWF
drY/1iD48+yOL/Rch+DrVNzIerMBwfd4/euP4TYEv+GiveLeAwj+h7knMy9f
RfC3WwWdU7mO4Nddv2VUdgPB5xF881viNoKv0cLXF/cAwU/ICt708hWCr85+
R8z6DYL/bnFKdc9bBL/mbqmL/gcEf0bAjGslXxH8+LcK1se+IfhqXSvni/9A
8Lcc3pWx6xeCX53gfJb7D4Lv9Pe0YexfBJ9jVsi0df8Q/PNmd3/9/4/gAwAf
bcCX
              "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {10.000000612244921`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {10.000000612244921`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
zl1i32aztGwXiHHJuDqST5w7Haazzhr+BzB/IgM=
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbnfs+raJmsHBiiQaP6bs30rgr+i9FmQ9Q4E/3jU
DjnnvQg+m2rMtqDjCH6apL3X6pNI6nmV7jGfQfA7vj1n3XoBwec6URwqfgvB
58/u/nL7DZJ7Nu4yShWygfO1bSXXl8ci+Pn3hA57MdjC+W8+94R6zkDwXfSP
zfLUtYPzd3+2/v39HIKfrWN062KqPZwvW270ag2LA5yvJNSzjC0QwRdxcLV5
OBvBn7Zpzn2htwi+SbyJ0y0LRzg/KSBr048uBL/2yv/f028j+FsnXWU5q+YE
59dM9ZSOrEDwEy79/VB1BME3XCS4QJbfGc6ftO1wjHgCgi/Auu3GstUI/vWF
drY/1iD48+yOL/Rch+DrVNzIerMBwfd4/euP4TYEv+GiveLeAwj+h7knMy9f
RfC3WwWdU7mO4Nddv2VUdgPB5xF881viNoKv0cLXF/cAwU/ICt708hWCr85+
R8z6DYL/bnFKdc9bBL/mbqmL/gcEf0bAjGslXxH8+LcK1se+IfhqXSvni/9A
8Lcc3pWx6xeCX53gfJb7D4Lv9Pe0YexfBJ9jVsi0df8Q/PNmd3/9/4/gAwAf
bcCX
          "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {10.000000612244921`, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2], 
          Thickness[Large]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Temperature (\[Degree]C)\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"raw w(T, R=0.8)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{10.000000612244921`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Suitability curve vs. temperature (baseline R)\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.95855945595479*^9, {3.95855984119967*^9, 3.958559875906303*^9}, {
   3.958559910079029*^9, 3.958559930853327*^9}, {3.9585607532190313`*^9, 
   3.958560801572949*^9}, 3.958565311611652*^9},
 CellLabel->
  "Out[1372]=",ExpressionUUID->"20a7b430-ab6d-4fca-a7e0-ef6604ddb659"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "epsMirrorLogNorm", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Topt", "     ", "=", " ", "26."}], ";"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{"optimum", " ", "transmission", " ", "temperature"}], 
   "            ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TcutOff", "  ", "=", " ", "45."}], ";"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[CurlyEpsilon]", 
     RowBox[{"(", "T", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"0", " ", "for", " ", "T"}], " ", "\[GreaterEqual]", " ", 
     "TcutOff"}]}], "                    ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sigmaLN", "  ", "=", " ", "0.3"}], ";"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"breadth", " ", "of", " ", "the", " ", "log"}], "-", 
    RowBox[{"normal", " ", 
     RowBox[{"(", 
      RowBox[{"play", " ", "with", " ", "this"}], ")"}]}]}], "  ", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Step", " ", "1.", "  ", "Work", " ", "in", " ", "the", " ", "mirrored", " ",
      "variable", "  ", "Y"}], " ", "=", " ", 
    RowBox[{"TcutOff", " ", "-", " ", 
     RowBox[{"T", "  ", 
      RowBox[{"(", " ", 
       RowBox[{">", " ", 
        RowBox[{"0", " ", "below", " ", "cutoff"}]}], ")"}]}]}]}], " ", 
   "*)"}], "\n", 
  RowBox[{"(*", "          ", 
   RowBox[{
    RowBox[{"We", " ", "want", " ", "Y_mode"}], " ", "=", " ", 
    RowBox[{"TcutOff", " ", "-", " ", 
     RowBox[{
     "Topt", "  ", "so", " ", "the", " ", "mode", " ", "maps", " ", "back", " ",
       "to", " ", 
      RowBox[{"Topt", "."}]}]}]}], "   ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"yMode", "    ", "=", " ", 
   RowBox[{"TcutOff", " ", "-", " ", "Topt"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"muLN", "     ", "=", " ", 
    RowBox[{
     RowBox[{"Log", "[", "yMode", "]"}], " ", "+", " ", 
     RowBox[{"sigmaLN", "^", "2"}]}]}], ";"}], "         ", 
  RowBox[{"(*", " ", 
   RowBox[{"sets", " ", "mode", " ", "at", " ", "yMode"}], "            ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Step", " ", "2.", "  ", "Unscaled", " ", "\[CurlyEpsilon]", 
     RowBox[{"(", "T", ")"}], " ", "for", "  ", "0"}], " ", "<", " ", "Y", 
    " ", "<", " ", 
    RowBox[{
    "\[Infinity]", "   ", "but", " ", "we", " ", "will", " ", "zero", " ", 
     "it", " ", "for", " ", "T"}], " ", "\[GreaterEqual]", " ", "TcutOff"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"epsRaw", "[", "T_", "]"}], " ", ":=", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"T", " ", ">=", " ", "TcutOff"}], ",", "\n", "     ", "0.", ",",
       "\n", "     ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"TcutOff", " ", "-", " ", "T"}], ")"}], "*", "sigmaLN", "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}], " ", "*", "\n", 
       "       ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"TcutOff", " ", "-", " ", "T"}], "]"}], " ", "-", " ", 
             "muLN"}], ")"}], "^", "2"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"sigmaLN", "^", "2"}]}], ")"}]}], "]"}]}]}], "\n", "  ", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Step", " ", "3.", "  ", "Scale", " ", "so", " ", "\[CurlyEpsilon]", 
     RowBox[{"(", "Topt", ")"}]}], " ", "=", " ", "1"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"scaleFactor", "   ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"epsRaw", "[", "Topt", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"epsMirrorLogNorm", "[", "T_", "]"}], " ", ":=", " ", 
    RowBox[{"scaleFactor", "*", 
     RowBox[{"epsRaw", "[", "T", "]"}]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"quick", " ", "sanity", " ", "check", " ", "and", " ", "plot"}], 
   "                                             ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"epsMirrorLogNorm", "[", "5", "]"}], ",", " ", 
    RowBox[{"epsMirrorLogNorm", "[", "20", "]"}], ",", " ", 
    RowBox[{"epsMirrorLogNorm", "[", "45", "]"}]}], "}"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[RightArrow]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[TildeTilde]", "0.03"}], ",", " ", "1.", ",", " ", "0."}], 
      "}"}]}], "  ", "\[LongDash]", " ", 
    RowBox[{"small", " ", "at", " ", "5", " ", "\[Degree]C"}], ",", " ", 
    RowBox[{"1", " ", "at", " ", "optimum"}], ",", " ", 
    RowBox[{
     RowBox[{"0", " ", "at"}], " ", "\[GreaterEqual]", 
     RowBox[{"45", " ", "\[Degree]C"}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{"mirrorPlot", " ", "=", " ", 
  RowBox[{"Plot", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"epsMirrorLogNorm", "[", "T", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"T", ",", " ", "0", ",", " ", "50"}], "}"}], ",", "\n", "  ", 
    RowBox[{"PlotStyle", "  ", "->", " ", "Thick"}], ",", "\n", "  ", 
    RowBox[{"PlotRange", "  ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1.05"}], "}"}]}], ",", "\n", "  ", 
    RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
    RowBox[{"FrameLabel", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Temperature (\[Degree]C)\>\"", ",", 
       " ", "\"\<\[CurlyEpsilon](T)\>\""}], "}"}]}], ",", "\n", "  ", 
    RowBox[{
    "PlotLabel", "  ", "->", 
     " ", "\"\<Mirrored log-normal \[CurlyEpsilon](T)\\n(tiny below 5 \
\[Degree]C, zero \[GreaterEqual]45 \[Degree]C)\>\""}], ",", "\n", "  ", 
    RowBox[{"ImageSize", "  ", "->", " ", "Medium"}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.958560824588142*^9, 3.958560830493658*^9}, {
  3.958560860921677*^9, 3.958560865513987*^9}, {3.958561010579755*^9, 
  3.95856105290071*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"cc75ad62-908d-4b28-90bf-eefd3b891c64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04601249276831973`", ",", "0.6580858391378366`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.958560826685768*^9, 3.958560830888352*^9}, 
   3.9585608661795597`*^9, {3.958561014138733*^9, 3.958561053635651*^9}},
 CellLabel->
  "Out[836]=",ExpressionUUID->"e1beeaa0-3b8a-444c-95d7-69f06cc532a5"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], Thickness[Large], Opacity[1.], 
         LineBox[CompressedData["
1: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
361Wqf8BgxcSsw==
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQPSP4QxFXk5sDAxT831G0tS3PHc73NnBzrfmK4B+P
1c/MLvaA84WSM3bPLUXw4zIW8l4oR/C/FQlvMqlB8FU6vv/624LgN2za3zNh
GoJvxR6wYetOBL+Np5PpxW4E/6LgoRCpfQh+hozJz7pDCP50Qwknj9MI/pfo
B5dv3UHwHRIl1XjvI/jdaUEV9g8RfKXCIzJLniL4gW0rUnPfIfhzuh9un/8B
wX8xQYrr0ick/8zuWWf2HcE/s+AoQ+ZPBF982b+g2b8R/KTV5kvP/kXw120o
+P7/P4IPAEkUYy4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
361Wqf8BgxcSsw==
              "]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQPSP4QxFXk5sDAxT831G0tS3PHc73NnBzrfmK4B+P
1c/MLvaA84WSM3bPLUXw4zIW8l4oR/C/FQlvMqlB8FU6vv/624LgN2za3zNh
GoJvxR6wYetOBL+Np5PpxW4E/6LgoRCpfQh+hozJz7pDCP50Qwknj9MI/pfo
B5dv3UHwHRIl1XjvI/jdaUEV9g8RfKXCIzJLniL4gW0rUnPfIfhzuh9un/8B
wX8xQYrr0ick/8zuWWf2HcE/s+AoQ+ZPBF982b+g2b8R/KTV5kvP/kXw120o
+P7/P4IPAEkUYy4=
              "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 49.99999897959184}, {0., 1.05}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0., 49.99999897959184}, {0., 1.05}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
361Wqf8BgxcSsw==
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQPSP4QxFXk5sDAxT831G0tS3PHc73NnBzrfmK4B+P
1c/MLvaA84WSM3bPLUXw4zIW8l4oR/C/FQlvMqlB8FU6vv/624LgN2za3zNh
GoJvxR6wYetOBL+Np5PpxW4E/6LgoRCpfQh+hozJz7pDCP50Qwknj9MI/pfo
B5dv3UHwHRIl1XjvI/jdaUEV9g8RfKXCIzJLniL4gW0rUnPfIfhzuh9un/8B
wX8xQYrr0ick/8zuWWf2HcE/s+AoQ+ZPBF982b+g2b8R/KTV5kvP/kXw120o
+P7/P4IPAEkUYy4=
          "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0., 49.99999897959184}, {0., 1.05}}, 
       "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2], 
          Thickness[Large]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"\[CurlyEpsilon](T)\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Temperature (\[Degree]C)\"", HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Mirrored log-normal \[CurlyEpsilon](T)\\n(tiny below 5 \[Degree]C, zero \
\[GreaterEqual]45 \[Degree]C)\"", TraditionalForm],
  PlotRange->{{0., 49.99999897959184}, {0., 1.05}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.958560826685768*^9, 3.958560830888352*^9}, 
   3.9585608661795597`*^9, {3.958561014138733*^9, 3.958561053657331*^9}},
 CellLabel->
  "Out[837]=",ExpressionUUID->"dc7ff575-a97a-4743-a4f7-1839042b1630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
  "(*", " ", "parameters", 
   "                                                              ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"nPatchesDiag", "   ", "=", " ", "2000"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"muTLand", "        ", "=", " ", "22"}], ";", "            ", 
    RowBox[{"sdTLand", "  ", "=", " ", "1"}], ";"}], "      ", 
   RowBox[{"(*", " ", "\[Degree]C", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"supplyMu", " ", "=", " ", "0.8"}], ";"}], "        ", 
   RowBox[{"(*", " ", 
    RowBox[{"resource", " ", "units"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"supplySD", "  ", "=", " ", "0.2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"StotalDiag", "     ", "=", " ", "3000"}], ";"}], 
   "                            ", 
   RowBox[{"(*", " ", 
    RowBox[{"total", " ", "susceptibles"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"supplyConst", " ", "=", " ", "5"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"draw", " ", "one", " ", "landscape"}], 
    "                                                      ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"temps", "   ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"muTLand", ",", " ", "sdTLand"}], "]"}], ",", " ", 
       "nPatchesDiag"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"supply", "  ", "=", " ", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"supplyMu", ",", " ", "supplySD"}], "]"}], ",", " ", 
        "nPatchesDiag"}], "]"}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"supply", "  ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"supplyConst", ",", " ", "nPatchesDiag"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"wRaw", "    ", "=", " ", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SuitabilityFunc", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", "suitParams"}], "]"}], " ", 
        "&"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"temps", ",", " ", "supply"}], "}"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"wNorm", "   ", "=", " ", 
     RowBox[{"wRaw", "/", 
      RowBox[{"Total", "[", "wRaw", "]"}]}]}], ";"}], 
   "                       ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", " ", "w_i"}], " ", "=", " ", "1"}], 
    "           ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"mirrored", " ", "log"}], "-", 
     RowBox[{"normal", " ", "\[CurlyEpsilon]", 
      RowBox[{"(", "T", ")"}], " ", "from", " ", "previous", " ", "step"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"epsF", "     ", "=", " ", "epsMirrorLogNorm"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"epsVals", "  ", "=", " ", 
     RowBox[{"epsF", " ", "/@", " ", "temps"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"compute", " ", "R0"}], ",", " ", "T_peak", ",", " ", 
     "\[CapitalDelta]T"}], 
    "                                                  ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"phiList", " ", "=", " ", 
     RowBox[{"epsVals", " ", "*", " ", "wNorm", " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", "wNorm"}], ")"}], "^", "StotalDiag"}]}],
        ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R0Diag", "  ", "=", " ", 
     RowBox[{"Total", "[", "phiList", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Tpeak", "   ", "=", " ", 
     RowBox[{"temps", "[", 
      RowBox[{"[", 
       RowBox[{"First", "@", 
        RowBox[{"Ordering", "[", 
         RowBox[{"wNorm", ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"deltaT", "  ", "=", " ", 
     RowBox[{"Tpeak", " ", "-", " ", "muTLand"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
   "(*", " ", "plotting", 
    "                                                               ", "*)"}],
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"histT", " ", "=", " ", 
     RowBox[{"Histogram", "[", "\n", "  ", 
      RowBox[{
      "temps", ",", " ", "20", ",", " ", "\"\<PDF\>\"", ",", "\n", "  ", 
       RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<T (\[Degree]C)\>\"", ",", " ", "\"\<Density\>\""}], 
         "}"}]}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", "  ", "->", " ", "\"\<Temperature distribution\>\""}], ",",
        "\n", "  ", 
       RowBox[{"ImageSize", "  ", "->", " ", "Medium"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"epsPlot", " ", "=", " ", 
     RowBox[{"Plot", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"epsF", "[", "T", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", " ", "5", ",", " ", "45"}], "}"}], ",", "\n", "  ", 
       
       RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<T (\[Degree]C)\>\"", ",", 
          " ", "\"\<\[CurlyEpsilon](T)\>\""}], "}"}]}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", "  ", "->", 
        " ", "\"\<Mirrored log-normal \[CurlyEpsilon](T)\>\""}], ",", "\n", 
       "  ", 
       RowBox[{"PlotStyle", "  ", "->", " ", "Thick"}], ",", "\n", "  ", 
       RowBox[{"ImageSize", "  ", "->", " ", "Medium"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tempsSorted", ",", " ", "wNormSorted"}], "}"}], " ", "=", " ", 
     
     RowBox[{"Transpose", "@", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"temps", ",", " ", "wNorm"}], "}"}], "]"}], ",", " ", 
        "First"}], "]"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"wCurve", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"tempsSorted", ",", " ", "wNormSorted"}], "}"}], "]"}], ",", 
       "\n", "  ", 
       RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"PlotRange", "   ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "35"}], "}"}], ",", " ", "All"}], "}"}]}], 
       ",", "        ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"\[LeftArrow]", " ", 
          RowBox[{"x", "-", 
           RowBox[{"axis", " ", "explicitly", " ", "10"}]}]}], "\[Dash]", 
         RowBox[{"35", " ", "\[Degree]C"}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<T (\[Degree]C)\>\"", ",", 
          " ", "\"\<normalised w_i\>\""}], "}"}]}], ",", "\n", "  ", 
       RowBox[{"PlotStyle", "  ", "->", " ", "Thick"}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", "  ", "->", " ", "\"\<w_i vs temperature (curve)\>\""}], ",",
        "\n", "  ", 
       RowBox[{"ImageSize", "  ", "->", " ", "Medium"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"diagGrid", " ", "=", " ", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"histT", ",", " ", "epsPlot", ",", " ", "wCurve"}], "}"}], 
       "}"}], ",", " ", 
      RowBox[{"Spacings", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "1"}], "}"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"Export", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "figDir", ",", " ", "\"\<singleLandscape_diagnostics.png\>\""}], 
        "}"}], "]"}], ",", "\n", "  ", "diagGrid", ",", " ", "\"\<PNG\>\""}], 
     "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"console", " ", "summary"}], 
    "                                                         ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", " ", "/@", " ", 
     RowBox[{"{", "\n", "  ", 
      RowBox[{"\"\<=== diagnostic summary \
====================================\>\"", ",", "\n", "  ", 
       RowBox[{"\"\<patches (n)              : \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "nPatchesDiag", "]"}]}], ",", "\n", "  ", 
       RowBox[{"\"\<env mean T (\[Degree]C)          : \>\"", " ", "<>", " ", 
        
        RowBox[{"ToString", "[", "muTLand", "]"}]}], ",", "\n", "  ", 
       RowBox[{"\"\<env sd   T (\[Degree]C)          : \>\"", " ", "<>", " ", 
        
        RowBox[{"ToString", "[", "sdTLand", "]"}]}], ",", "\n", "  ", 
       RowBox[{"\"\<supply per patch (R)     : \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "supplyConst", "]"}]}], ",", "\n", "  ", 
       RowBox[{"\"\<total susceptibles       : \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "StotalDiag", "]"}]}], ",", "\n", "  ", 
       RowBox[{"\"\<peak w at T =            : \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "@", 
         RowBox[{"NumberForm", "[", 
          RowBox[{"Tpeak", ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}]}], ",", "\n", "  ", 
       RowBox[{"\"\<\[CapitalDelta]T  (T_peak - \[Mu]_T)       : \>\"", " ", "<>",
         " ", 
        RowBox[{"ToString", "@", 
         RowBox[{"NumberForm", "[", 
          RowBox[{"deltaT", ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}]}], ",", "\n", "  ", 
       RowBox[{"\"\<E[R0] for this landscape : \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "@", 
         RowBox[{"NumberForm", "[", 
          RowBox[{"R0Diag", ",", " ", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}], ",", "\n", "  ", 
       RowBox[{"\"\<png saved   \[RightArrow] \>\"", " ", "<>", " ", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "figDir", ",", " ", "\"\<singleLandscape_diagnostics.png\>\""}], 
          "}"}], "]"}]}], ",", "\n", 
       "  ", "\"\<===========================================================\
\>\""}], "\n", "}"}]}], ";"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.958561759858631*^9, 3.9585617835125513`*^9}, {
   3.9585618558763447`*^9, 3.958561917156299*^9}, {3.958562007746958*^9, 
   3.958562037360553*^9}, {3.958562071665771*^9, 3.9585620721816883`*^9}, {
   3.9585621115392723`*^9, 3.958562115395208*^9}, {3.958562145792984*^9, 
   3.9585621465263557`*^9}, {3.958562183221195*^9, 3.9585621836381283`*^9}, {
   3.958562253223568*^9, 3.958562254958448*^9}, {3.9585623266419153`*^9, 
   3.958562329559284*^9}, {3.958562384994074*^9, 3.958562385294574*^9}, 
   3.958562418322494*^9, {3.9585624903862658`*^9, 3.958562521835414*^9}, {
   3.95856258155299*^9, 3.958562643237094*^9}, {3.958562688009924*^9, 
   3.958562688502452*^9}, {3.958562728965222*^9, 3.958562738625154*^9}, {
   3.95856286947325*^9, 3.958562870080367*^9}, {3.958562922320053*^9, 
   3.958562922869973*^9}, {3.958563006949047*^9, 3.958563019017918*^9}},
 CellLabel->
  "In[1310]:=",ExpressionUUID->"c96716a7-7a71-4064-844c-ce735547e923"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.581], Thickness[
        Small]}], {}, 
        {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.581], Thickness[
         Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{18., 0}, {18.5, 0.002}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{45.5220367308535, 
               55.35264059916588}, {-33.01028731826868, -32.09375000000003}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.002]& ,
            TagBoxNote->"0.002"],
           StyleBox["0.002`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.002, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{19., 0}, {19.5, 0.013}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{64.18324446747832, 
               74.0138483357907}, {-35.301242568746304`, -32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.013]& ,
            TagBoxNote->"0.013"],
           StyleBox["0.013`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.013, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{19.5, 0}, {20., 0.031}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{73.5138483357907, 
               83.34445220410313}, {-39.05007843316423, -32.09375000000003}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.031]& ,
            TagBoxNote->"0.031"],
           StyleBox["0.031`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.031, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{20., 0}, {20.5, 0.092}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{82.84445220410313, 
               92.67505607241552}, {-51.75446664035832, -32.09375000000003}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.092]& ,
            TagBoxNote->"0.092"],
           StyleBox["0.092`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.092, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{20.5, 0}, {21., 0.169}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{92.17505607241552, 
               102.0056599407279}, {-67.79115339370168, -32.09375000000003}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.169]& ,
            TagBoxNote->"0.169"],
           StyleBox["0.169`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.169, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{21., 0}, {21.5, 0.316}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{101.5056599407279, 
               111.33626380904033`}, {-98.40664628644808, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.316]& ,
            TagBoxNote->"0.316"],
           StyleBox["0.316`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.316, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{21.5, 0}, {22., 0.411}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{110.83626380904033`, 
               120.66686767735271`}, {-118.19216890420935`, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.411]& ,
            TagBoxNote->"0.411"],
           StyleBox["0.411`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.411, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{22., 0}, {22.5, 0.362}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{120.16686767735271`, 
               129.99747154566515`}, {-107.98700460662722`, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.362]& ,
            TagBoxNote->"0.362"],
           StyleBox["0.362`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.362, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{22.5, 0}, {23., 0.294}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{129.49747154566515`, 
               139.32807541397753`}, {-93.82473578549283, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.294]& ,
            TagBoxNote->"0.294"],
           StyleBox["0.294`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.294, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{23., 0}, {23.5, 0.193}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{138.82807541397753`, 
               148.65867928228997`}, {-72.78960121292559, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.193]& ,
            TagBoxNote->"0.193"],
           StyleBox["0.193`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.193, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{23.5, 0}, {24., 0.077}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{148.15867928228997`, 
               157.98928315060235`}, {-48.63043675334339, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.077]& ,
            TagBoxNote->"0.077"],
           StyleBox["0.077`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.077, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{24., 0}, {24.5, 0.028}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{157.48928315060235`, 
               167.31988701891473`}, {-38.425272455761245`, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.028]& ,
            TagBoxNote->"0.028"],
           StyleBox["0.028`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.028, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{24.5, 0}, {25., 0.009}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{166.81988701891473`, 
               176.65049088722716`}, {-34.468167932208985`, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.009]& ,
            TagBoxNote->"0.009"],
           StyleBox["0.009`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.009, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{25., 0}, {25.5, 0.003}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{176.15049088722716`, 
               185.98109475553954`}, {-33.218555977403014`, \
-32.09375000000003}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.003]& ,
            TagBoxNote->"0.003"],
           StyleBox["0.003`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.003, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{17.85, 0},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{
         FormBox[
          TagBox["\"Density\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"T (\[Degree]C)\"", HoldForm], TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{34.073242187499964`, 1.5}, {32.34375000000003, 0.5}},
      ImageSize->Medium,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox["\"Temperature distribution\"", TraditionalForm],
      PlotRange->{{18., 25.5}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {181., -123.87838159402774}, 
     ImageScaled[{0.5, 0.5}], {360., 246.7567631880555},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[
      InterpretationBox[{
        TagBox[{{{}, {}, 
           TagBox[
            {RGBColor[0.24, 0.6, 0.8], Thickness[Large], Opacity[1.], 
             LineBox[CompressedData["
1:eJwtl3k4VO/7x5WUrUhkCaEiUdmZMXOee2bOsZRKtqK0SBKylaKUrBXJUtlD
ZEmSJErITvaI+oTKksgyyJ74ne91/eaPmet9Pec5515e9/s5I2vjYnJ2NQcH
hx/59b/f9TZ1WhwcwiDZymny514GchBMVwrnF4aW546teGIGqiv1l5ERF4a9
VbZfk55nIL8tiBfUhKF0bDLdvTEDzX563eNjKwyePdbFIbyZ6Jt+asBKnTBc
FsZzw29notzdN9qWI0Tg/v3lNevvPkVmC+rO/7aJQvm2a+eE8p6hEcc+rfgQ
CZjif3m+/WouepU0ZHT5rRTo+vYe/e/YK3TMq17nuaMMEGrDHsdTClCgYMV9
F0k5UDkl1D5RWYQMbp99aJy7De5PZKha0t6jvAtZ31fZ7YC9qpfvKDpWoLc2
zJeFmxQAzz1Q1RxTjax0ghTvPtkJW9VsN55aqkMp1xx/qxzZBfc5vHi+72pC
fklLh6dHlaAizc6to74VcbT/gOKru8H0bPwmH612JH/JztNs116Y6FjVu2Zb
J5pa3P8s8IQK1JxKUOCU/w+lub/GPuioQlpUp86Bwm6k4F4nIiCgBoc5WQLB
8APNnFaFgU41kB2Sj/gn04eiuUfuPX6hDut8rOoYjAEUmLSoMu6lASPxu6Pn
DAaR/pjVnJy5JviPBbFLvIbQlwrbVVbKWuBbId/hGPwbvb5ddUJmRgsUDYTe
cB8aRZn7GsRuzWtBuTl9XtdiFMXxt7WN/dWCy6En0h2sR9HN8O9671Zrg2rz
4T1FjqPIKGZxj4WgNgS+XBCTvT2K+jJUVkKUSG1f9WJd2SjaUJuQNHdaG0Is
XdetVh5Dq+6kWp44qw0PjfarPlAbQ9P7sjZV22vDsfkjbTKUMfRfc+GtSBdt
OP/hjpWi3hh60tnmsvu6Nrz44po+e3IMUQe54UyMNgzU1mLXIseQHZfHj+Zm
bTgS/iN9emoMSWz98PnvR224bN+Sf2Z+DDXrSLXs7NCGe9L3Njb9G0NaTtUl
fl3a8Pyx2qN73ONobbtIvNaQNiSYTOKNUuMoLbnAPHGVDry2axNS1h9HA7rz
9Rc0dGDny89uhx6Ooxhzo4o4bR1Q/+Z1/2/sODJySX5bS9WBFznPVR4njqP8
FINMWYYOXF8xq/ySMY4CeGIDOw7oQMyZK+Hzb8fR9s8UoJ/TAR/juFUz3ePo
jPu11/xxOhAxzy/ySoqNtNS+vVZ8pANFKX8anWXZiHcKCvSSdeD9wW+Xt+1g
o1y3tYU303WAuix7+4oyGy25RryZztOBzh6z6Q9UNopyyXjX3UDGJ6saLWTB
Ruf38hYvNOvA8IhnmJUlG9HYTsWb23TAMf6naPxxNup3Visx/kLuF/pdxnWG
jVScS0qrBnSghqpQf9OFjT44tZdn/9MBQUrZRe5bbJSgrFXxgYMCZz/tieu8
w0auozEVg5wUiOu9O5Fwl402O52olOEl1xkmIkKRbGTjOFz1YDMF3KJlYh8l
kPGeX6n13kuBhZOVNhq5bNSiaFMXq0aBAUvBKr88NkoZrqor0KRA12uLubp8
NjI8H/xhQpcCOU9fFNPekvnZizTYGlDA4vcR2fJyNtp7TqnZ6DQFoh3KTXQ+
stG381tdnttSwEmxyk+hnY3uOm0S3GBPge6k4HT+DjYadvt7uMWZvH7wZ/ab
L2yU6t3QcdibAk9lA8ajvrORic/7y3k+FBiiqs5q9LIRh98r0U3+ZDwGym/r
+tjI+la85ac7FLCe0zD/+JONRCMdeyyiKaAz07vNboSNah6cvFEYR+7/sgt/
OcpGl6JNt4olkvFTnwxNjrHRxwTd0/89oYDZlnWpphNsdDNp72pqJgX0B5yf
XZpkoz0p21LjnlFAopdTKmSKjUIy+H4ey6OAisWMTMw0G1GzVgKLX1Ng5OSq
9HszbDSU/Ude6i0FQvtiva7OshGR12X/7T15fbbIlOo8G03nt/CgSgpYjXbd
+UfqlMLKrKQasv5vp81LF9hopfjZ6KkmCnCL73bb+peNct4nhZa3UiBV5eyr
96Q+XnF/j9wnCuSvkRU0XyJ5rL7V4kcy/J/08s3vpH5be821/yt5P8HHKyf+
sZF9vctG/BsFKoNeB7aTenPTmbwnvRTQOjLOT19mo6qWI6ZcPykgGsUVFk/q
i237p88OUSAorZiLTWq5DvSwZoQCj/S7HbRX2Kj1s7qWApsCIrkaby6R+sZX
hc+3pijQ//DRr3RS7+7Z4jk0QwEuYnaqidTd3wXEDRcoIJ6749MwqYP7OIue
LlHgkJ9E4CKpdX7OWfFyUEFItWFlhdS/fo38deCkwtB6Lex/61G/vyc0rKXC
iaOnqf/bj4+105V5qfDl0LHxRlJPsWu/3V1PhfsE1SyN1I+n3vmMCVIhIEfS
zp3UxjMvZA4KU8FeU1Fag9TLc6nlOaJUKG68d/k3mV/2YrSNwBYq1JYFnH9I
6mP/QjhdpalQ+mHfpAapeTluPmmVpUKZlCL3B7J+b1ZfIlR3UGGrv2vmYVLb
cdkPRuykgoXN1cZmsv4i3MdvTSmR8X7JdAZSV/Ea7zTdS4XWOrs76WT/3Nfj
H16pUWHbhILoKlK3CCnzeVCooOPzwuM+2X/swoXheBoVfi9Gzn8h+cipzamt
QFRQ2pRuKUzqe96qAYJ6VOgNHH7iRPK13Oluo21IBdPX7kF3SP4uqObDCSMq
nCJ6NBJIPo0Gtf49M6HCn48Wv1JIfovBs6vNnAoTwvN9USTfyvFv3y4cJet3
MinuJsk/nzHtsv5JKgxf8ditOc5G9W8Z7D5HKlDGxVzkhknehf2beFyokGIS
/qXyFxtlOVc9U3Gnwr0PxT1Wg2x0Z5u+/Q1PKhy6mPjsfD8bGYQa9YoHUkE1
QfY3Tw9Zv1+h7+E2FY7qZVYf6WIjBWbLo3MhVFBhB0rH/8dGa+cOW72OoIIG
10vK6k42qj51pN04kQqHpf1fHm5mI413MS+vPKaCjT+xaX8jGz0R+RqW+IQK
GZs3dFLq2Sig/rjRaBYVLvIpuc1VsxFTw6b6ViEVPCKbkqeK2SjvXmpqThEV
9rWVPo8qIvkeHvDtKKFCpkLoKpU3bLQq8Ry2rYoKgRss3Jiv2Khs3YXC0lYq
iNg8kxzMJP3YJufhz3Yq+Ky25NNIZ6PkYvZF/s9U+NGytPNKKhv5uLmrWPVQ
YezbwM/uR2Q/u648nRmmQrqkj7g86b/vcvzilTl1wf3HsuxzTzJfI3OJ6LW6
8JnfvJXTg40ODyvEruLVhUhr4bgDbuQ8bGuK6hTUBZf9GZeKzrPRpljRyJvS
urAzfs/fefL8cPTPvv2JogshoYLy63TYqEDGZx2i64KbjZPVPXUyn9LDQU9B
FxBbPYB7LxtFz8/639DXhT8HH+R2kOdX5QWGz05zXUhV7NNtF2KjLUc7Pbxd
daHix5N6y9/jyG4mc3rwoi5oMwaiBH6Oo5eR1y4evqILnVkTjDffx5F+k4yb
/A1d8PVcUen7NI4uMh2dWkN0wbvN70RM6ThqUOY4sz1DFyprOEJCw8bRtVW7
jBt7dEHxsppFvMI4GsT5vsj36sLpmH9iTTLjyPj26EnfAV0wHLOnTImT57PA
CxetEV1wVtSJ2cw/jholNcKS53Vhq4bqTC17DEnrYM2XNtFALEw0pTl/DFU4
mxhJGdIgt/Sc7DXNMaScp/7pihG5Lp9wUnL3GIqaET7edogGf2LN9V5uH0OO
3p8db1nQ4IrRrS0Fm8aQcPDxkMkzNAjVszJSnhxFdml29dU3aJDDK8xsfjqK
eLuvGjjn02B3yRN9bqFRpHXl6fqwQhqsPf/G8SP3KDot9KXtRREN/tWHm4ev
jKA3BprWk2U0KCKmQ9mjI8juNdvtUhMNvkY+lNSoHUHl92zjrw7SYFn+ru5X
rxHkyTg4HiRGB949N/6Uf/6NfqbLPkjypsOemKO0C1eG0WhA7wLnTTrIrN9Y
2u0wjKZsHp+096dDuxtbjXliGHFslVVSDaYD3fGcHBsfRhLRMhUV0XTQduk0
ads4jIxvbZ34mUeHl3MOQnVPh1DxOSkj5WE6XBOe565p+4Ue7BRf89Ycgy1v
jTRn+AZReJxd7WkZBKp9wcoXvPqQ1QPrZv5fCJybjbuvZPUg75S2pUMnATp/
Jo14LXeg0p4WRt8pgJs8VDmu/g7EId4UdMkGYN114WfxtR3IP6xWMPYsgOPR
WdmR8A4U7F28vc8RIC66KXXz9g4Ua5FudMkTIDi5O77Q6BMq4L2aEBNB7mem
Zn/JaEOT7rK03kqAcfuRmx9FWlDyoXOHH1YDXOwrvSXV14yMlZ/bGdYCBB1h
y0fmNKOcnzoRL+uB9Pfv7Bn9ZuR01HjQ9yOA+i9ad7Z3Exqi+4TLfQdo3Ky2
iWO8Af3g7hk4swjQL2++cHqyDoX/lFsUXQIQ5tmcLVJZh1CFvUDjPwD5RFWR
uQd1KPHaNEVjFQOcXnDeZVHq0PFxvrA13Az4oLLkuTagFn1pp1LSRBhgbCz+
54BcDWpNjAkdVGHAX5tvdff9KtEphcDy62oMyFlc/bXneCWaeOE2I6zBgNcv
DM6aaFciwfJ91ixtBqwUn5V4N1qBjPuXlJPpDBg02Kxz17ICfVQ43Wi5jwG6
NdKPNXXLUVuuIl/TGfJ5a9SFU+mlyIayGdmeZcDzskKF6aUSNFW++uJfOwY4
Dp67F19cgoTau74qOjAAWkr1x2glyHQmNCvIlQEPf23sjmcUo0+UKUO4zgCX
bf9ZSB8rQh0VRbdfRTFgKnmLtWlzAbqUuKecGcOAhpGa+3axBUj4asrCx1gG
xDSu/lxvW4DMVIMdJhIYkLzu76agpdeoLcnSaHcqA9TVMzSr9r5Grd7zAhkv
GPB2q7g2K+0VatTSio6rY8BB61tHDBtykZNQVotiPQOkKS2qusm5iH9civtt
AwP6ykVNvDxy0f40Lq/PzQwYEqxI/k8mF9Vv6rAS7mBAq2fNH8PZHFQ7cVH6
Xi8DwsqLk92uZaOKrJdpvosM2J8qUHZ/KgO1KjjnqC0xQDXpV95SZgbqebKr
sP8fA3ydujS4T2Wg+cTUOmIVEwR42XprWtPR7vsPR3i4mZClzrPuRmEairnm
pRopwgTjnE6L76mpKH1ek8oSZcLD7V/VZWxT0SuPKea0GBMw867k+e2pqNnF
0cxCkgka70b1LmSmIE5b6ysS25hgntxudrjgMXI2YpSkqDDhlM2wU/HXJOT9
4V+1qRoT7ryo3eZzIQnd0StqXqPBhN7FdlHLVUnoCaj/sNNmwrq52GAj5UT0
n8YOTiWMCRIXXLesDUtAuBSP4av9TCBf7Bi2QbHocFz1YdsDTJiu+b7zu2Is
OiHqZyVyiAmHqs5JHG2OQV4b/zpeMWHCzfjaXLpEDMrhGruna8kEte2VEVkl
UUh8vPVTpR0Tiv6kPk5WfYDWimosHbFnQs+i2Jvjw/fRNIreNnqeCYHL1gnf
H99HrRHW7sIXmEDJFPLVELmPbmv+Fjh7kQk1Nw7Fz6yJRPPenPvX3mTCLdNC
pex14Wgwzc49zpcJoUp8Sk5RYehT84fYPf5M2D8qSe2XDkO5MuFDFkFMqMzq
uDGhfg/ZV0kGZdxlAu9a5Vm68130hU+r3CCWCbahylOWsndQjUbsUHccE3ia
tpfZldxG+dZLAm4JTGjpnvyXbXUbhb+oOBGbxIS7hjneXTG3kIHpoaXhNCY8
4Sso9dwWhArj7LVD8pjQ/0JK5pqLP3pS2XBiaz4TgiU6Rcak/FHk6J6gV6+Z
cCVAaMWlyQ85YzOfut4wYTFHoyFxrx+S7/N1V37PhNvflKOOcfiiKMX4500N
TAiXim+3S7mOpv7opfk3MaHTLP8fVfg6OlA6lUBpYUJ9p5S+5m1vtMZ03920
NjJfoutOwOVr6KL3gsP1/5jQ/fdD/LCjF2rWS7NR72KCq95O633jnmjXxsNW
w91M2P075VGKuyfqS8s0NP/BhOJWt//kfK8g45YjO3f/IvkMNUmqyvdA2bGc
Mv1DTGiqvHGLpeeB1tm+EI39Ta43x2qF/ncJlc6vXcc1zoS2sQF5R65LaLdc
wc/uaSYMONW1Frm5I14P4dS7q1kQ9tuxUk7FBdmhsjjmGhYsRkWt8b/ljMp5
nCLnuVgwJSYX2NZ7AXkmVvra8rCgpyNTSizJCf2qdT9FE2SBdr9Ryl5dB8SM
lD46tZEFd9YeMv+beR4lHq8/lLmJBTEF0l/Pi59HFpOySFiUBYl7AwN4V9uj
KomPUqNSLHj/vPH58cmzSOant0jKVhZY99mVwMWz6NqLneuPyrIgz2Rzn8+c
LVLDby5VbmdBtOeN2dG1tij5wt6ueCUWUJNsDz8EG3S9LDRmP4UFZobn3Ub3
nkBDPWUPFqgsOLA87px51RqZ/f0TnkEj43/K6Tpbdxzt0rK6wwks0PtdaiPo
egx1PpO/+k6PzCf8sfy7waOI8cHy8nkDFogt+J0ONDqKsgfvuovuYwHroTG/
x+sjyF/2j8PFA2S9ujr4IsItkEr0+2NKZixoXPnUZ+lghuLzp478Z84CC77b
n0Z/maK1bTvMbh0h4+H5e51hb4p6+O8a9VuxICQuOJ/DzQQF+x2lx59mwVED
abv7j43RTFIIxfAMC3R4jD+z1Y3RqZJSzTlbFrje/sA+G3EIac9v32Nqz4LR
ffSHAVMH0MCFSWk+FxZs8+3Te/97HzoUsn3LW1cWBM1uk45S34eKMo+InnNn
wXm+FYWHNw1RRH+JQKUHmZ88W6ZU3gBhlsEc17xZ4LT6Q+/TxwR6erlkaecN
FgincpTk8BBI+MHEfKcPC/rNNw7peeBopNliUs2fBUsbwh1HLFgoBt/W9/sO
Ge/m9wd3MRmI08biW0wIC6q+W4iNVQFy9rnzVS+UBXcP7ust2QeIKGK3pYSz
QLxltVdUKYam9hZXWkWzoLPjd3W3mS6yPsB+zx3LgpxD4ymTt6iozkGuuCCO
BRfeutpqllFQYtrtfKFEFkTNUhy7kA7av8U8rf4JyZdAoEGBpyaKGthTdiyd
BVv5dSKtezRQ33PurtEMFqysWlvRRmigq1AsKPCMBWNTh4S+yKqjrLPbvE1f
siB4y9O1OmtU0eyef1EDeSw4Yqw2pBmogpjznS898lkQZzMy4sijgv4LDv4V
XciCtKi3fz209iDu3EmT7hIWNPg2dEpX70JmXg0XLrxnwc0Bj5nRWUWUzEy7
vVzGgkrTn6ztexSRdsfRUpkqFjjfst1inq2A7BbfK56tJ3ley6cSMrAd5VXG
4rMN/+MpPNwB246W7148eauJBXMbTj1rStiGorYqPHzayoJDSTvzXtvJoWr8
Hsd4JwtsY9vKCWUZJLjBfovPFxa80tr9cOLgVnT8M0NL8CvJv/ardy1G0mj6
/IyjWg8L0iUkU/ROSKLtYcc/X+5nwfobMbMH28WQ61GtqXU/WfCs9mZKAYcY
KpYVXB87SPLKiPzJ1BBFpvmVzHfDLOiQMmrf/VwE+f23K2eFzYL7kvrhOn1C
qDllzYfwSRbor+imZdGEkITTt37ZPyzYe1FaQTphI3q5HCGOz5LxRNKTA88L
oqVaR42OORb0zcQ0uecIIIMI4pDdAsnvGftz3ZEb0I9tCwG3l1gwHUnLqfTg
R8pjbUniyyyYLRO913CRD3kWZBdlrbDg9vzWzmEvXiRoeGqicTUOO5Boe8gj
boSca49t5MHhYZXrkRgaF5r/MqxXxYtDocvVfxxn16A8Fr/aFX4c9CMralc9
5ETbxQ9z9wjgkGz9qPkH72r0zf/in7CNOLyrJ3QOGK9C0eMPvzE34TA0dkHI
OYED8VZ9zc/cjEPw/fbFybBlrGrPv6RjYjjo2P9tnD/wD7seuzVkgwQO9cs2
NU2iS9iEs+3pS1I4THAnm9s2LWCd4uPrYTsOFiAzYV0wg4UHCC5M7cAh5LnQ
o566acyQrTaQpoDD/ktHG5wH/mDFVVeK+JRwUHvZOxmpOYVd3huXVqqMw+a1
ht8iHCaxvXHF4W57cGA1cUpdzZjAUlxWnfusioOfxfSHYZdx7PjXbSbB6jgY
dCWNrd08hokQenS6Jg7TxzWzBz+MYLclQjal6uAADWZb11kOY87VwmXOCIcb
sR/OA/dPbKeK9jNZBg5PB6JyGwUGsN44y6hPTBx65ScK0mX7MTPXRCeqHg5R
tUYBNTa92IausiNj+jikpEv+NIv4gdUS/cxkQxw03rrtDIj4jlG37BRfewCH
24vPXn183I1NB+5b8/YgDkdi38qvZnZhzyec2I7GOCw2PbjuMPkfJlPzsvqj
KQ5SkQfmH1z7jH1V+ZQbYI7Dx0w7eZp5J3Y/fjZe+wgOHm0J/D91O7C1brru
j6zI603tRXX2tGNlXdbWxsdxME5uWTei04Z56d004DyBg2G2G//Lgx+x0S3V
0udPk/1ZV33tvHoLlh70i0fyDA5aUZI+WglN2MlJnplmWxwi8szCG0Ubsbaa
gw0a9jjkxe5j6eMfsLuqbgW/zuNwch37fcGfWoxIuP84zhGHRz1TcWte1WBv
3L5c4XDBYV+WlE3MiSrMrXvR5pUryctlXq4Ew0psl77UQTt3HFrUlzYvMCqw
R5I22xs9yPpURkhePVqG6agr7bG5ggNRUizjy/0eazOc1p73xCGMg3cu7mIJ
tvZK0P7t3jj82PBPXs+3CEsOPWRedB0HEz+hf4fl3mLUJ2InjX1w6KKVGX1v
L8ScP2a5e/vhUHTJ2qf07GuMe+iit1AADkZErG8Zno+lLNOCMgNJfjcWf05V
fYV1KrXEfrqNw5mxMqWXai8xV2ZMqkMwDtmtwelFRC7Ga3n6OcddHL5N9irU
1eVgWNCfMuUw8nkvNl6UCXyGfUkorq8Ix+HBq351ndVZmPurwE9HI3HYQx3t
eBWZiaX/EB0KeIgDw09j+PTvNAzmfkxKROOgd52ex37xBPu6PutvbgwOY8jz
SnRgKiagSxPoicfhmrOIOnHiMZZ1mEv84iMcfv/ooA+eTMZw+2Y5niQczs/t
b33ek4h5PjylpZmCQ3e2kpGFbTwmlK0IDak4HAz8ZVdRH4tlV0wZnk7DYS7d
7O1m/RjsBzvAOjSTXPcObTW4/hC7uvbguW1ZOGT9CXVQ0nyACUuJur19hsOr
J75CK8uRmMG+pwE/c3A4FssImKsKx/pOud+7lovD3y39Pr9uhGHeV3RjNubh
QF1sspGOCMVynzQ9o7/GQd0/8LPTumBs37uo1+0FOASFfVpdbn8bG/h48v35
NzhUndrr29AbhN0Y2vlh5S0OYnsXHx92C8TEVibbHr4j/Sx7rbbC5gAsT+Rd
t1IJDro82Rx7WvwwI+WAwfJSMv7iV9Lm8b6Yr+XmxbFyHC4/vTrD0XYDk3T9
zhlQicPjeidp5kdvrCAoc71ENQ78Js8PqLOvYsaP3ERza8h6MHb/3bnLC/v9
iiqrV4dDIHCeu3vzChZQz6nU/YGcN4GoN18nPDDp3kYN9wYcKHVZO554XcJM
Npw0SGwm+zu8K4LV4oaNbt9potGKg49pNX9krCsWpDt5rP4jyb/BA4gad8Zk
TIrOnmon+b5bpJrW7IQV2fu7zH7CYX2MyHPNjw6YmY+R191OkrfsakODaXts
/KGIv9wXHFojatXnNc9hcpUZUQe7cBA4ZmEsscEWa1Sef9LdjcO/zScnlDNt
sMtRBq8cvpF+2lQ4aGp5GpPhiC2f/47DQkxoi5rMKezD+eGWoF4cAjjHQ1Zm
rTH3dso34X7SL7Ouruf6dAyTpAePpgzg8PN9u7ZChyXmKqjE8/4XDrm8T49v
17XAJK5eEz0wTJ4fDOzG33gzrLK/YUfXb/J+bZKFA2KmmNMBSY3zozgMDshf
lcs9jG0udGLOjZF+HhaiKnjKGCuTKTEOZOMQSX/FyTx4EHMIXn9y0yQO/ib8
miXrjLAS65xre6fJ/nmNPO+d1MfsapfvlMyQ8xS8U8VHSg8TVD0Us38OB82z
0ZlWDjhWFJeU/t88DtHY+XKDTiZmu2Yi/9wiDtrv2ZzoJAPb4AyVM39x4HP0
kDLhBKzwc/hH/384iNt5utr70jHeZ6rjSRwEiHP2G7uuomD5wn5Lu1cTUBHa
+O0WhzZ24kYbbzEnATEdk/Hfd2iS/iEnvo+LvD5yjUGnszr28vBFhS9rCXgR
+aR6+osqZvWuUtOOmwC1xzmlI6dVsDU7hPFpHoL8P/KzQU5gD3Z0Pv+U4HoC
jBqi+XoZithqGy6XxA0E3MyMrFuWVcCyG8yvKwsSkMUWmatV3oFZaKaHFG0k
YKP2abftJ7dhK4mzsQabCKhP/RasUiCLZXLrZ3YKE7B8JGyCslcGM3GPLrDd
TICGv52dV5gUlk7otN8UJ8C0etWLkXgxzPjF7d4NW8j16OjYX86bsQWx/9gJ
kgTMjvpX/XYRxlL8FJd3SRNADW7pdI4XwoxGvfjfbiWgKrWtUXlcEJs1r5fQ
lyXA71rtsGr9Biz5vYRihxwBl5ZX7S9d5MP2KTpqn9lOgBDXBbNSex7sT+Q7
YnIHAcne9A8mAuuwhCU+Mx8FMh/aEH1ueA2mZ3fcZr0iAbknbm/xnl6NTbRk
u8bvIsCm/OsSh9IqLI7y74aiMkG+3z4u+7ZphY6nHggt3E1AJ1eb+ciWJfoY
f2I8sZeAOC8b9hr7BXrU5fGn7Spk/L39J29OzdLhB/bmtBoBXXf8WmULpum/
DcNq2OoEfJ/K+iecM0V/8Or7p+uaBFzVpbN/dkzQMSmVfj5tAj5aG++fNhmn
/wq6ORmrQ8DuKFlH4X0j9PCJ1hUFKgGvB39FawcP0alWshsKdAmYFxtTnOcf
pA9UuknidALU775ZudTYT7+3u2JXG0YAp2Hpa/3KXnq6zjEePyDAZXO+pWno
d3oJa/qXKpMAXa6ZnG0rXfRPB0NrelkErA189s/r4xf6qKV8WgRBwPiwjlL1
Yged8+x7f4Y+ATs2hS2bubfTJVyP2kwakPv9vLT1VT7S1a5NwuN9BDgZn1Qc
tWqmGwYFbz1sRPKp4XWqtaaefipi2zLHQQK8U020/GNq6Z4Jxd25hwjQkzMm
nKqr6GEZ5u9OHSYAP+RvtsCqoKfnjccKmhIg9sJN4BZfGb205JZnmRkBshMz
lOidxfSOOpkjrhYEaEX4DgbmvKGPtr/VlDlKAMuXL4KS8Jq+5ruJcKslAc1m
Q1xHB/PoW36PTPkcI/vjTt38wi+XrjYT8HGvNcnD3V3xqq3Z9H0c0rnfTxBg
L1i4vkryKf00X+G9sFME7L9sYGvXnUb33Gx8AdmQ9aXOw+yqVHq47PB+9hkC
aoUuWhX6JtMzlP12JZ0lgLBmXj+VkkAv1d7Cc+gcAVtt424IN8fQO5n5v5bt
CTCMY4QNeTykjx04UJPjQMB9dsk7wZBI+hrLwScnnAhQDJJTO8cRTpe09fHf
4EzA8f4MS98HIXR1FzGbUhcCfrZnzd0pvkXfd/UlOLsR4CNXmxZlF0C3Cdy3
VfoiAbv2PxO65OdL9wrv/9d0iYC/n0SX0jhv0MPjvbuvXybgsnT4dYVcL3pm
usi73Z4EHPq1n2vPtAf9/cuc2B4vAt6onkuUL3andxbre4ZeI/1Gv9D03ZgL
fbz2hwX9OlmfCM53l3Y50rnavTTHbhCwSWtb+Wrhc3TJb0LCj26S8Z7peKV7
/wxdY/jZlJEfAQuGSWk/7p+i75/GPy75EzA1e84zhPs43Wal50V2IOkn/Sqr
uLOO0K/yXrl3/BYB8k3uvucmTekRIoIX+O+Q83Y976B1rTE9U+bp/uJgAu7x
6fKd2WtEL1Ni7nK6S/ZX94Lw+8f69M9aXdyS98h5WMVl41PLoo8zLv1qCCP7
IaTX6BEE9LUH1tdciyDn8VDpeqlwXbrU0fQnSvcJcD771DdvUouucQb5dz0g
/UbYeREE1elGzl9Oh0QRIMMjZqaVuJd+xssNdGMICNk0PHRSaRf9agDv1pFY
Ah4aYz8WHu2gR4al/ouLJ/2ozUFrR5ss/WkcrXvfIwI4Eq6PJZtI0cvSOooW
E8n8fbtNZoXE6F9ynWOzkgmYfuBwZNvbTXT2u3WeVikEJJrcESjZKkhfW5ts
wfuEnLdKopF6kJcu3UbRLEojgCvBPUT8PBdds6dtk0MGAcKDrNSNZ1bRjYYc
p8SfEnDOy3RnpPISzfbPmo8fskhe46/4LVbP0o5n4c3Hswlorynxef54imZ2
OqCB/ZyA9wsSimzHcZqRWFWd3wsC+JddXM/VDdHwFs4akZcEfFF0vyq3Y4BG
C2JVZuaR54f8xzeFFj9oGnT/Mt18AhR4Y7M83L7SlKcrSppfE1A6rXT/iGUH
bfuz1e9OF5L14ly8u0XtI03Shvlm+g0BI6JRPD4pDTRhcb/Xt4rIee+delwn
X0Pjby3PkygmoOjI0xqLgnLamlurcp+XkH78dMv1FSimLdEZz+E9AS08YluE
rxbQpqdvZrWXkbxHDPyI7HhJG31WlmFXQUB/UjC9gZJN67fhSFuoJKCccqXO
Wy+d9lUcUu5WE+BZftaw69ZjWlurT9LWWnI/vvH9lH88rQJbiSXqSR73Jhkl
N4bTUiSW70W0kus/pZKH5D1pNm1/PRV7CAiwPtN7kknQrO7oXi7+Rs5T2nOt
kBJEM4FrFw/9IOBk4LPrC7HaNGbO4gWPfnKeuC55JdQp0uSCF2zKh0l/nTM1
/a67ntbLmDOynCX9ALs5Ru1t0j31ckrmjoAe1BaqZasdVNd18DNd2rdRD9qs
z3pcC5DXvWia/5l/kx4UK/pkr5sT1w2a8bgXvlkPeMQ0VJPSOXSzKQt/o6X0
YAefV16iXS11vnylM11JD+Y36isIxRDUsDb+0Cp9PZB5E5PBxtp1YlIv2AcZ
6kGh6nE1SSJfJ+VSM8tgvx68qnZzFVV7oJO/OXyx4aAeaNp4oJUcY52vVpvs
2831gFJC2Hp8yNOW7xdn9Z3RgwmpLofQmDlNlfyr0k/Okvc7VL13ZmuOJiWw
a+HsOT1w+XNk8CXDWtNI4VHusIMezPTE7Vkn8UTD3VFGetJND8IFvgkeqH+s
5k3zXci7qAcZO3j4NoWyVQPX93265EE+f/V0mcclCdWYF6kh85564Ls+99xP
n9Y9KTfXnCu6qgejXo9+xzuI7H52+CzT21sP5EvUc9I/+e3Kl6uRwm7oQeUv
kDh5pWhH6R/5hRUfPeD4/8//AWEMpu8=
              "]]},
            Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2], 
                  Thickness[Large]], 
                 Line[CompressedData["
1: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
kDh5pWhH6R/5hRUfPeD4/8//AWEMpu8=
                  "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{5, 45}, {0., 0.9999999996157689}}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {5.000000000000011, 0}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2], 
                  Thickness[Large]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{5, 45}, {0., 0.9999999996157689}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {5.000000000000011, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2], 
                 Thickness[Large]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1: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
kDh5pWhH6R/5hRUfPeD4/8//AWEMpu8=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{5, 45}, {0., 0.9999999996157689}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {5.000000000000011, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{5.000000000000011, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox["\"\[CurlyEpsilon](T)\"", HoldForm], TraditionalForm], 
         None}, {
         FormBox[
          TagBox["\"T (\[Degree]C)\"", HoldForm], TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{34.0732421875, 1.5}, {32.34375000000003, 0.5}},
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"Mirrored log-normal \[CurlyEpsilon](T)\"", TraditionalForm],
      PlotRange->{{5, 45}, {0., 0.9999999996157689}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {543., -123.87838159402774}, 
     ImageScaled[{0.5, 0.5}], {360., 246.75676318805546},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{{}, 
       InterpretationBox[{
         TagBox[{{}, {}, 
           TagBox[
            {RGBColor[0.24, 0.6, 0.8], PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
             LineBox[CompressedData["
1:eJwc3Hk4VV8XB/CIyJyUKKKEjOFeQ8ndMouUJlM/c5I5RaJkSGWulDlTUmQM
ZU4olaiUQimVkCkzje/3vH/1fJ773HvO2Xvttdc650jcwcvcmXnJkiUv2JYs
of6N4MiXOMWlTO5UB+tLbNZkuH+q+5h9Spl4XC9X/7d7O8PGu5eXY5kK2Xjo
Zt/idS0GR1Nzxk2Yn7X17b5MLYZWXtNelU0q5ORy4lb7WYvxfqeiroeUCvG+
IBsQMKjFCEt06nPVUiHBput3XhVkMFSU788mmqgQ5+0s60NpDAYt9esuo70q
5HjL2p2z2gyGp+ur/LX2KiR8pq50zyEGQ9d439SAswqJDW4IKDjMYJDvnIrH
PVUI36X/jqj44/dswlPsvHD8d8W9CycZjLfrO652e6uQq+c3RT8NZDAiBCXJ
YIAKkdly8c7PaAZD2VvN/E+ICmGEPBwRTWMw9JKujP2IUiEC3yL4AosYjBr7
1h/bY1SI7AS9qLcEn9NEpKNTVcj7pC9rbz1lMB582jU4lKVC5O/d6Rh9w2BU
+a6O8spWIUd4Z190dzEYuW5ZvTK5KmTUPkM9t5fBeBG7x+Jfvgq5ca8hvm2A
wUg5M5soX6RCbMqPLN85wmBsbPy6w7tEhWwLMrssP8FgCCy4CuyuVCGtpyev
KS8yGMyi+wXYa1VIpNRGTXcmwjgfc4xZDGa4CJmdheOH/HjPPVAhX/c//yvL
Shi3k2vOVL5VIctNX35hXUMY1tnCZlt6VEjfwP3SX0KE8fymaNMLuM1AaM8p
YcLwcl7z6GmfCqnziX+eLEIYb7+WLDv0VYVk5O9JGBfH8TJl59UHVIiQ56h9
0gZ8v47jvd13FVJS2fwwWpIwLBuPv2+AP/7T3fIGTvvgk/1wRIVoje6VS5Ei
DMmGBxJdsHdnLNNteM9PEYbBDxXylGNUk1WWMF7ubHASn8L8aHx3c5UjDBPv
1MqAORVSauevkKdIGFOWTDa9iypkC5uJjpQyYehufvdW7I8KEctlfhJDI4w3
h7kV7WF1+fvPa+Hz/2ZreP+qkJtyxeqadMJIKPvRT2eiEd4RA54INcLw4/V1
sWOhkWgT1tJ2DcLw8Ch5XADruFp1sWwljA0SP/RK4S+eEq3s8PoBe3sRVhq5
7Jb03wG44qag8+xyGmn0eVzxdDthOFzRsV3LQSMVMolZA/DM9ZbbXdw0MuFr
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
C29FNMHpspdy9pmokvfetRu94S1LrJsvwcK8poJ74FxFHn8jU+S3L1yXp6Ow
/mS4DHR3qZJH7DI2vjDTwXdcDnDqVJuQE/yc8c/WE7bPW9F6CJZanZZBefO/
Y3mUq7b0WJfB+85ODmyFXSbHLKfhZh+JUCG44gC38VYzVbKqNpZlNpIwzO2d
Ek/AB0RaA7rgdzNcH1bvViXnNKa1wuAXQQO1DLjUJnGdJ8y37Km5GaxWHcF1
GOYI3+d5Ea4zfT5vAN+td0zyMkf8Pypj3XkR/WyC4+4kWEumu4YO3/SoTGDb
i3qzbObUrwuIT+Wy9XzwXaOKJfNwb8+B9Ha4dWbo52XYzy2bXWc/1m+Tl3v7
ecJYXPEvbPMB1M+SJ9ftg48+3jTTD1duj/owGUEYQRN+4r0H0V+Le6S7wxZr
enysLVRJ4vqiJik4+W1KpbSlKukcaTSuOof8MJjS/xaWGG8vs4LF6ov4dayw
n795ny8Gly4umjvBb2Uf3OCBHSQERjzgXVJD3svh86X/fTgNS5bVP10Cqx14
sr8T5g8PcXoVjn7i5lXv3/CvqEvctbB/9FJJHmvks25f9zJ4XlkzWwKWLDRT
ugkX03mq9OFw5uGcK7D1y8epvvAr3QmlQDiW1hDMaqNKgjadSpWF3UNLJ/fD
LzfYZ/8LI4zlyUWBHIewnk/53U+DjwrHRxvDaWKHowJgRTOF5KPwbqaWcRfY
TqR9byjMWfr7sxWcmvcrKhk+cuuKyC5YvP/X4Tm4rL/pjzA8NaFuKPGfKjm7
VOMuE/xcf1XcXth7Quj6YChhhNQfbR2D1Ysm7S/D7y61RHbYqhKj0XvKq+D/
VXTf8VR+cRzAk0gqKiGlISOjFHKfa91zqIhEtuykrOzKiJBSKZSUyMiIsoVo
qEg06FeJkAalaYcmfp/+fL+47vM853y/389pXP8FdlgYOSFfTNUVPolEHpra
fcYWznZfs7URDtp0zNMenvaYrdsA63TWND2Aa5P83GPgn0fXuH2BX/VrsYLg
+QnOKjN2oH5u1BB3+HDFUuoOz/fZV7sOPu5xoSsYLlt2cd8qeLHtiHiBM9ZP
Z2hVaAQlxjs2vp2zk0VPX6tYvAkuji5bYAAf77uXtBK2Go5PMIRnrr+tKAEL
e1kfmueCeX+2ye9qOPLpw84txvD7247dcTCfSUqRHbzMvGTLUXh6o95RzV0s
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
/4tVjHQ=
              "]]},
            Annotation[#, "Charting`Private`Tag#1"]& ]},
          {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[1, 120]], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2], 
                  Thickness[Large]], 
                 Line[CompressedData["
1:eJwc3Hk4VV8XB/CIyJyUKKKEjOFeQ8ndMouUJlM/c5I5RaJkSGWulDlTUmQM
ZU4olaiUQimVkCkzje/3vH/1fJ773HvO2Xvttdc650jcwcvcmXnJkiUv2JYs
of6N4MiXOMWlTO5UB+tLbNZkuH+q+5h9Spl4XC9X/7d7O8PGu5eXY5kK2Xjo
Zt/idS0GR1Nzxk2Yn7X17b5MLYZWXtNelU0q5ORy4lb7WYvxfqeiroeUCvG+
IBsQMKjFCEt06nPVUiHBput3XhVkMFSU788mmqgQ5+0s60NpDAYt9esuo70q
5HjL2p2z2gyGp+ur/LX2KiR8pq50zyEGQ9d439SAswqJDW4IKDjMYJDvnIrH
PVUI36X/jqj44/dswlPsvHD8d8W9CycZjLfrO652e6uQq+c3RT8NZDAiBCXJ
YIAKkdly8c7PaAZD2VvN/E+ICmGEPBwRTWMw9JKujP2IUiEC3yL4AosYjBr7
1h/bY1SI7AS9qLcEn9NEpKNTVcj7pC9rbz1lMB582jU4lKVC5O/d6Rh9w2BU
+a6O8spWIUd4Z190dzEYuW5ZvTK5KmTUPkM9t5fBeBG7x+Jfvgq5ca8hvm2A
wUg5M5soX6RCbMqPLN85wmBsbPy6w7tEhWwLMrssP8FgCCy4CuyuVCGtpyev
KS8yGMyi+wXYa1VIpNRGTXcmwjgfc4xZDGa4CJmdheOH/HjPPVAhX/c//yvL
Shi3k2vOVL5VIctNX35hXUMY1tnCZlt6VEjfwP3SX0KE8fymaNMLuM1AaM8p
YcLwcl7z6GmfCqnziX+eLEIYb7+WLDv0VYVk5O9JGBfH8TJl59UHVIiQ56h9
0gZ8v47jvd13FVJS2fwwWpIwLBuPv2+AP/7T3fIGTvvgk/1wRIVoje6VS5Ei
DMmGBxJdsHdnLNNteM9PEYbBDxXylGNUk1WWMF7ubHASn8L8aHx3c5UjDBPv
1MqAORVSauevkKdIGFOWTDa9iypkC5uJjpQyYehufvdW7I8KEctlfhJDI4w3
h7kV7WF1+fvPa+Hz/2ZreP+qkJtyxeqadMJIKPvRT2eiEd4RA54INcLw4/V1
sWOhkWgT1tJ2DcLw8Ch5XADruFp1sWwljA0SP/RK4S+eEq3s8PoBe3sRVhq5
7Jb03wG44qag8+xyGmn0eVzxdDthOFzRsV3LQSMVMolZA/DM9ZbbXdw0MuFr
cP08wfWVfXGYhFVNGA4psMANTgYHH42su7DSmn8HYfRHtV4aXUEjIh/5Ahx0
CGMoMD9dg59GdLlqWJJg6ZwsVvXVNKKQ+q3RSh/fD/MIToavbLVtTod5D7Z1
cQni/CavLo7Ccms77iUL08iGT/qzlkaEYS+fryWylkZiirZa34Xt7HJeh66j
kT3RSh25xoThb3jr1YX1NHJecTCl2ATX4yjA0wyvvGDw31u4t/FmwgoxGmmv
VrXjNMX8e/8Zc4ZXfvw1rAPXvLdR5NtII0GC3zw4zQijfeVWThYJGjmtKHuy
EA5rfRrbD6dF1+4iuwlj2ZTcv6DNNFJZvfK44V7CuNn5eIZZhkYKU+hLMuFv
hfKce+RpRDJmbtWj/VimW9SNLyvQyCBHbe7VA4RBZ5MrklSikUj+a6u1LHA9
B9miGDQa+XYuo0DNijBurLRIVKPTSEHZ08nXcPXmPxaiGjRyX2ThvdEhwmDc
j2+NhnkvKf+Mhfda8LRnwLbSAR9T4E1hMVXe2+B7dl21/yF+eO7pvoRrv9u8
X4BFhJbc3q1JI8cepc4Z2BJGJOe72C+6NLLv2fDiBSfCsCk+bpC0k0ZS3YXM
Yo4QhveUWPc1Uxpx+DIkWuOKeNt4LaEaflsdIvcCrpFvmvoAr37au2QAHjoX
FZ62i0bUq2NW7T+K8deXXXgNG+e7aPrBn9/sqx4xo5GLqyJShdww35L/XVu1
h0b6lKTiH8PrntuqnIXlvcLvsLoThtoGh9CP8O5JG/Ht8AGjniHpvTSivFfO
5DfMVWpZpgYHO/m8Z/EgjOXTO0KM99GI46M7VTnw0aqSH9sO0IjTi5/fGz0J
g9ywSUiBN77vlFmAm46qX+45SCPPWq6LFnthfCJmlMZgXfaH9VUww/VecZ8F
4o/Ly0THmzBaeypvrrGiEYlmEjoLtxTK6Oy3phH++PMht3wIo8vD4oupLT7v
t3D+7Iv8dbgg0Rz+vn85ywCcuHbQT8eeRvYPfupcOE4Y6Weqf/o40IjiRHN/
xgl8nlBiexP+vi64oRbuclVclQfLuB3fWAe/WbU1nTjSyJonqmkr/HD9/+kW
CzthfNqPmlyEvQ07C4/CF3kFRCvgNWziWszONFK6N3wpuz98oX/2BHx44ICS
ASytfeRrpAuNmP2WHD5ykjA+LX2/6TosK7vuoC8ctuaRSCOsp7NUPwLWTL26
rM0N8fmAN6XsFGG05RcPfnKnkc5z79brBxKGcTwb96QHjdjV8l7tgltYjq7W
9aKR1nKuZxeDkI9q/jOpgreUccU+hqMDaIt/KavdUh+F51rGkyq9aSTMkavY
5DRhXKnzXVPoQyPNamufPoe7+9onvsOvBzesG4dP5qc8W36MRjwOKWz9C5v7
G+o886URdwN+5aEziFe+N0GefjQyJO44pHuWMIInLH4eCMB83rKMaAwhjDOX
2QVpQTQym5VlRQvDerpyNbgcDvoX9e04PHzQdq/oaRqx/mbJlA/LD3vm5MIX
5lWfjMHSDm3FXGdoxPV1+G7xcMLYGV6+tSWYRuJeq1T9hgU6x7y7ztIIk27C
yvBzhKHtUV//Ee68t6rwAhy5+5EaIwTzFZzTdQ+OESw54wLrP5+ofAZnGxff
KIXP6hvr/4Cvdt2OGIdPfHHX4YkgjIBbzSl/whA/nXV1fOcJQ/GHjyZvBPI1
924X/gsYn5RE5jqYd/HF6cOw46GoLZ7nkW/u7/hXAzMFOltchR9/vfO+HX4b
4XtqyQUaea59yo35ImFwPtP5UQw7HJEtPACXGmjtXLyI/H29Vm0Gvj89+dU/
kkbm9M7HbYkkDH2R/mm7KBrx5S/enwHfmcwspWOjI0MXh4KiCOOHi8s3+1ga
uZ61anZ5NGH0aAyVOsM+4161nLBsXZX0PZgjquCrElwePWB+JI5G5MQjy8Ph
Ds0Qi0fwygT+uBJ4T2eEwXA8jdg/ruhSiyGM6y2vOzgv0cjaiKQeA3ikjDn7
FGybGrYlEP4sesaI/zLWj1yFcSOs9DDsRzJ8vFig5x88dmtJVDnceqJDmCsW
+9vyJ68lr9JI0lt/Ntk4wnh8/4Gu/zUaMRGtmG6Ckwu6152CjRuqt7fARfFu
a7ITaST+ys0VO+OR/4I/iFfAe6uO5u2FOe38tbmTaIT2mNkmEB6NsXNcB6dJ
zsuGwlrHdK9/gxUjFjk/wGK6CWX+yTQy7yfNLXqJMCZozzXOpdDIq9EO52vw
FKPJ7RY8dvUc/004vVCyZQq+ExUg9RimTRwytkmnkVOEac+7y8iH5MgKpQwa
ORlm2Jx7hTBktvOwXMnE/mtu8YyRgPpr8+2a5dkY77nS1/3w2elHX4/n0Mjd
iI+9p68Sxr9zxtLdsFdd1cNbMP+T+LKfN7AfuOZrSFxD/plLZK3IpZGi90EH
fWGP5m2L9fAGyf/i/OGjSnv28N9CvXFpbfSxRMI4SA8ZDyjAfvHhgfSHJMI4
HLBFKwW+r5N4+jtceGXVL4c7iK+Wxxu2JyPeAvOvOxUiXu7pP7wJVyyXr7sE
37QwolXBmsYOpzPg9+2pr+rhp9+/TugUI9+tlh1xTcH68sxyGYQbuuJX3oG5
03cKBpZiP7gzlrArlTCE2TtffoRbpJ5N+MH/kesaAWU0Ymm4hVEOD94zGT90
F+t7mese3jTCYDvsppYJr8/1ztkM3796L12qHPnM0tTEFt6vWLlDtIJGXFxI
8QM4PSXY5S7cHvzP4hd8+kTyjs5KrK+B76vd0wmDL/W9lMs95C+u6OZc2EBm
8/vR+zTyUjNkSvM6Ydw16JNnr8L8NrifNYDldJVctWGDEaakQ/BVkQvue2FB
/YpIJ3hw41h0JHzm1NanAbDmsNPtRTjrdXvUDdimuvqzaB2N5K0IvPQ2gzCO
MX5/GIBvXDpRsCET85kR/GugAfXDjkOxn+Fla72ztjRif9Kdtj2Uhfi4QFi0
mrG+H5foBmUjP7ZZXHgPF25++bUC3nFi9Ih9C/JBRRLXN7gxoMzEC9a9RV85
Am8yz5Lwh/O3XRseg8sr2QpOwVPOfxUn4Oiu59W1jzD/bFb6jjmEkfGs4ulf
2Fu97/epHKp+PD5q8ZhGNjtpGKXCaifdfSvhIwEctbWwRc5g0Z6nNPJOLsvp
9g3CGB/brVkOG2fr8bTBvWVvr8/Cr172MX+Bo5Npy1mfYb0Hi7sNwVJbj+iV
wkpDChUSuajH9MquDMNjdT8PqcPH/2QLzrdhPFS6xK7B/kX9Zw60o94NPX+e
9yby+8eXcZc7aCSgeORbIKyjM3qhGF6VuqHtHPz4wPQ6gxdYP2f6TlTBcvYj
UqwvaeTQDPevRXhCPatz0ysayW70OWadh3jfZu0pBXNuuPWbcpmewsYVnchn
iglH8+H6lI2W8vDZvS967sI7ujcqF3QhH20IKem9hXxYGH1myVvUQ/JCSfMw
R8diPSfszdij94vyNb3P/HBkhUHKH1iye6lf4zvE1/if8xdvI99lbpuldaMe
eBT6sgjefVIp/XAP+g82gb98+dhfhTSvpvbSyKipf5AvLGDVX/wJTvEucb0I
n5RsOvgF1iMa2pFw2sPs5ave04ipUf6/ZHjSm5VTF16zze3jLXj5gOGBBPjC
lrPbH8KbLCamRj/QyBuWtZEKBYRRO+Lf49ZHI/91JCsegP1nwq/c/Yj69Y7w
7xp4MWCZ7DPYovixQRPc+8vylMEnzI/VkZvDsEmkRY0XHFcQxDUHd8c/Uo6F
r9zPdf8H8ycv6QrvR370muTeeQfrRTRpzOIz9vtTOyuiYOdtJg8tYcaHmVnK
DcERtj/g7ZMmt6rgztYdP8u+0MjBlWleM7DRnMGvLvhU0SaDf7Bw+Iez1l+R
P2Ty10gVYn+VTJbW+4b9aOMASxW8Ptgp1mMQ43mszoOvCN//ZGQQPoT6KnD0
jz1svclfJB32lf621RWeOBft//A7jSRohwqwF6OfiJ1JH4dvuW+oF4AVTdw9
zUZoJFet+PgWOMbqcZ3kKI3s2Oz8ygNWOPvAUA3ueHbu3DG4lqOK+IwhH186
uusZnONcr2UwTiP9k8y2bCXY75YrTGb8QH6XHWcvgqOdeP5jn6SRHzGc957C
F15pp2vCzAfk2LvhX/K3koNh33Ui1iPweZ0HB5ymaGSFRMCtzaWEEfh35ncD
/NdhacgOWE2hSWYBTpc4encP/DPzzdSVaayPmzcqAmHpyKvvLs3QyIehNU0N
8Kq1m90vzdIIva67fmkZ4p/f2iMFbruZLL4MDg36+rR+jkZsjkds3ws3pVYF
9cKhquEtVnD3sgnVCbh+B+uULXxrMWzdJNxZvM/HDjZzzZheO4/8UVib7wYH
DL4QOAafkNmzJRTmNDx8Mwr+HvLr/QW4bnVapPYCjQgnxSjdhzk21HepLyJ+
jIJFF+CFxkweWzhF1HOG6S5huAzXrwyGq9LKFDngp+6aV6J+0kjmjMKXXfCe
9lH3L3DXUOJ2Z7h+KqHw6S9qf9v7JANOEGn8Lf2HRmrKzW/Nw2cdlbli/tEI
+/TIq9hy9Gf/tk6eXEInviHbDVvh42XBHv1MdFJafFBjfQXW51C4zC5mOrnL
GaelAVuZ/Xi+FxYq2pm4Fd5jyGg7DgcHafnvgMeFA7OvLKWTkSc/YiPg7Lu8
uqVwTjFbbAyc/KrboQ223f1w+gqc3zeRIcwCHx+yvVlBxW9fkysrnXzvYqqZ
gX9VzW9tWkYn3HIhMbqViKf+pKV+7HRiSZu8kQf/p5rZXgLfcNEcK4ffvpiS
KoPncmW2VcDpN1TL+ZfTyZPubb+ewnYqbhvk4Ps2N8pewOO5cWtq4RdbGmZ/
wEd4Zo3YOeiEyz5lnuke4rs4ca8IXGKclbcMpjuo15yCj5+OdV8Lr9qWIN0O
P5bW/i4PH3rxc/QrfKr88rQybKO25HsAJ51oHrZt30t9v+3k1iC4TOH27n3w
1Hbh7f2w9M99QUep4+VOfanhohObhkalFHjdhkclb+D03TZtGfCFL1mfDnLT
SSuL6d8a2DNb5oA1zPotpa4WDv+xNLMe3kZfJ/kKNtUr9x+Eq18mjvfA+bxb
Bfl46EQpLz7vC3X8kcUDsXBeyqHCv/DvXRPel+EVC1Ex/2DzZrabd2He5kM5
y+4ThoNVpS83L50UcnI3CsHNtd/CsuGIoeUHNeDufW8/5sDjJTGZlLVlRa/m
wg+2//hNmbfXobER9iCdEwx455n9RHIFnSwkteRFwnou9NwwfjrR/Wj5+RXs
evsxcxFsry91pRceNzR23S2A+RHMvL6lijCSKutW3IBp/FzHteHkAcNfM6vo
ZE/EtYJwOLPHJXjrGjq5qagfNgdzvuhX1oOJ6HzCAjy4VM1nhRDG32j66/pq
7E9XPh5yglsbNj5UhCuzdj7yFaaToeRGI0e4XWa9+mP4hOI1Zl9YJ1rWV2At
nZh03g8NgUeSLc8pw6oh1RLn4YjjBaqJcOG70Olk2PqicFYG/LNuLjwV9jm5
S49PlE5is4RMeGpQD4/uFLVaTyeDEi7XjWCfNjFmG/hv6cMZyvq6XL9fitHJ
15Xm4tHwtB2zrYY4ncT3tqlfh/eLse0tgfvC+8bK4N3NxnbhG+ik20o09i18
Y/LhuUQJxPOH6TtKtYQhWuzBtmwTncj1WG3QhWNPen7IgU9KrNj7H/zRn004
SJJOBAWOfwyBOddqa5yGNc2O8oTCJxr7RN2l8H2aa/8teGhRwaYI1rswFncX
FlvfufAQdraZ+lQJ11+nV3bBg6o07mq4c3W1/zppOnmrN6vZAnfIyx2Mga0P
CGu/haXXsznfg/m3ZP74ANPuhDCZbKaTRpfJY7OwmWB1/T4ZOinuyP8kWkcY
8Ss9XW/AQ3mMbbLw0RK2FUOw+ODxIjocUDShNAd33R7qVYPVlyr2Zsji/DYJ
9u+Br71eXlQES8jTJPbBGdtkklbL0UnLYOuUI5zZsXhDEi5d32R/GLZMnOS4
Ap8KmXnoB4e9/iivJU8nan+C3ePhNJExo13w08f3Oy/DXc8PPEyB1UUzaddh
tdfPh64qwHsPazbBUSJJli3w+W0Cck/h8MGopc/g2bbGf5SZrLNGBBQx3o4F
TW/gVw3Z0jJw/frT3e/g34mhf+PgvDvmiYPw896WLKktyCcqnA5/qOvdwm93
Hv7P7wAnZz36cePlinEw65IKKS5YcPj5iSIlOjm7frqABk/WcZSyKNMJi6jm
XQL/SnALWg6nPf95SBt2CmF/fww2OHLwpxnMojZnyalCJ2vUI2ad4CzJfto2
2NJ88qwbrDuhtiQPHuPmkD8FDzzaICNKo5NlL5INI+GrPVt8jtDpRCNw3qwS
Zpf61hmpSieS9n767+Ed2mU/bsIJMs+HP8JlNdObWuG3656ofIVdVPc+Y1Gj
k9qWEeZROLhwwegJPDfrJczaQBjiQ+vPzMKJRzaXc8BilZYjpep0cvgZu/MG
eEP2mp3fYF76f2PSMFvbtRZ2DTrxNBFSk4d5l3nRTWD9+HeX6bDm5psxprCK
vGsd5cC0s2ftYYG+EzR1+NRvPu0O2ENWtkIPvqlk9Xv7VjpZvv/e1r0wt9/h
5W3wWNYKDyfYslwvgGkb8uFe1p6j8OSdqfIL8BOVcqZA2PrnKv2LsPzjWX7K
yWYRUeOwtM4h/vPweePswll42rB/mPLTBK1+ZU2sn9kzonGwqRa7kh18JozD
KwH+JHSBfQ7uF+P6kgv3pRY2/IELDDoe34Q/m7PfEd9OJ8abdCbyqfOj+e+p
h61l94/WwlGr75NZeEPiZ4UmWDtl6stGLToRWzhwqhWOqVU7k8xA/Px8qzkF
f2vLX14Pj3pG7piDPTXsDVQJnYRGHjy69AHqb8/akPvwSYvfEStgOf3g1mY4
z+9ONz8s38TiXKaN+OgKpsvBLzYG75yGqz/f4FaBw/PdVx7bgfw96mxO4Dvr
DsuegK0ze25QTrs5yherQydShzVjD8F9jLtsyfD48rsF/8GrT3wpCdXFeERs
VvaDDf999SmEw2N8fU89oO4veGcI6mG/S66YDocdWqVH6DCH9Z7x87D/yIuF
P/C4a96RVNhyvWJptz7qE++tR0tg+7W0QpoB1kNN2d/71PH5/iYqGOL7N8/S
XsCHvg5e3QbfO3TP+SUcvzfdRp+yf4rDKzj1++aLtnD2qFPJa7hNx9C/Bg5d
e53nA7yKXXB/iBGd9Cx51TkOv3VtPCpojPlr3b36N3xw3PtzDryn1mUveyPW
T0XalgfwK9a0Fg74rYrsOeOddFJRtS5rNcybezjoMcwmOqEiDg+Lea4xMqGT
XqFXbHLwpb9LJGPhd8zddUqwcuaPz2/h9kPVz9Tge5d2ya02RX7wefJRE/75
YN+wH/xey7pMF9Zcl3/iEyw8aiRhCncaeMeb7aKTJearx/fD5+PL2FnN6GTd
/GleJ9iJ/uuXDPyhgfnXYZhxUfa0Dxx5IMzWHXY78o6zEG6/uGvAG1Zd9tdq
127s9yMVf4NgB1eFa6dgBp+q/ll49nQivR5uNQvTPgfXShq+noHF4hzIRfi/
t+ezT+2hk4aU6fHL8ADLI4UCeC/PnSPXYGfaxcurzZHvywuXXYfv1jw4Zgm/
/el5P5v6/vc/DTZw/aOwacpPos5EnIVfb5U7lgtvVh6eDIUXjuimU2bpmXsT
DdutNTG9CT+oyXiquJdOAl+xhpXChsoNeRpwfu5nhTLYaMzVwgQ23Tbrexf2
bP3Y4QDbr7q3WA4fW39adgSOlOpbXw9Lmi4r7N+H/a7/i047Nb8eHcK/4Uj9
NfMdsKzeecOD+5FPOsda38CcMiI54bBby868d/Dz7ulb0gfo5NzH2f7P8Pjc
1Odt8EdW4RVf4evalY4+cPT2ExaDcOrPs2fTYdnO12zfYQ/hn0cuHkS9Y8RY
twBfHgzTuQNfK4mS/An/uyEneB++bSf/lvJXkZV3D1jSSdVcogH/Q8KoeaQ5
5w9LFL1aIwD7zcc3zcO+0cx/heGxtKuCG61Q37IdMRGBnRmdVRrwi/3KwaIw
Y/V7myvwwQ07VDbCbOrjR5Pg/cM5fpR9et59HIKVLXIzpOA3z052cVvTiV+E
WvhmeLI5lC4CC6j1mMjAXFaVLSrw3LznMVn4+n+TLQE2dMLzuOrCNri1etOa
eLjsN0nRhHVFlwc/gUNEyvYx4FPdb2K+wx3JhV8IfCPsfJHFf3SicDv9/B64
bEtAh6ItncyzpT+yggO9U8xvwayfIltt4aob7r4+dqj/BuI+uMAG94uZLsHT
zArCrvDPlP6qTDhiQvAe5ec/yPMc+IpPzRvKRqbPP/+Cj9X6bPWABdJu/tR3
oBOmplCnADicMO4fhje3BoWeoj7fsflrBGx8Szg7EM6hrzveANcfMr12Gq7t
HZgydER/mLRWIxT2kB95YQQbBvgRytyTv+ysYdEk7jeUtzy8X+cCx2Zs3x4G
s64Wd3GHFSx9nCh7WPTwxsBzxQ9OhFPzafxCOQlO/Hb0FeXvd/r0LzuhPmbM
FkTDIUG3WRphc6MjArGwXG2ErqMz1s/qy68uw82REbt8DtNJWPELtRT429/8
ACsXOrkaaSqcCdP/mzDIh/+rTmXOhpcn/hQQdUX8MXfK51PnL77CuROWeNpd
UwgX074mdB+lE4fNnnZl8ICX3EEJNzp5drE28S7M7PmTyQaOyr7qXw5Xbt/W
4AM77pN+TlnC8SWLgDvywU552XvU/KZsNpf3oJOJTf211XCc51SQInw4Q6uJ
strGpvepcM6uIzM18L9gKSniSSeZK3ou1cGCNKunqTBTUOV/9bD5pS2LjbCr
clYR5df3RA5+hIX8vg9TvrLFxW69F+I/IcOpgbreb1ICCvBV9Yhgyj4H9L64
w6rHhcYoiyZ6GnN6Y38omux5AJ/bF0QXgL1GS79RNsux/XwEvqYXa9oISyV8
vBUGS4s/P0o5hqeDvsYH/ek7tx+Ua14GtB6C3x/YLfqQOn+X+yeOwS8ivm2m
vKRtgJyErwX8lKM8/n00Iwz2YWlXpiw1vtq/BDb/zGRAWb8opXoMHrY4YU15
f8Q3K+ZjGD+jIDvKjyu/dMjAS09kulB+MGW59Amc5Dz//881mo4NbfPF/uKX
qEGZ63H+uYOwTukzWcqh97Q/noDVxMuEKQs1L2X6BNdETLVT12PjNHDE7zj6
vUIhDcot/u57EmE6f8EKytxLXKuETiAeZScPUeO1al5xJgXO390bQY3v1k8C
/s3w2JIZDcoSSoX31PzopHlJ+G5qvrYvu22lDbufKdhGOWvh59pzcDe7eQ41
/9vTk1Z1w7zLjr2rhX9INkh9gLfzq7VT3ihct4XHn05m4kV2U+5zznY5AKtw
NkRT8dTouNX63Elc/8nSXioevbwO2FMu+S/t/74QJ9WQB2c8SnGkfCBd97tS
AJ3EGbcdrqDyVavviDe8Sa7Vm4pvoYq28Ww48QMjj1oPn03VC6+dQr3xbTyk
mBpfFjGvZPjMV7kTlNexLKjWwqO/O14VwfnVV/lm4ZOO+U3UehvSfHT7D7zx
LHsK5Z/pr0aWB2K8Vh3+j7IU+67/VsP3/pwVp3yTda+BJLxtiWznHZj2SNAj
CD4fZCReAHMMXm/bEEQntJFPd/Ko8dtnnxoEv29ircyFn0oo6l8+jfHoslLO
oK4vx9o6He54xBi9Dh9zFOuSPIP8pvLTK5WKr4DQ9TR44kyEIOUj5q7Pc6jP
CxLFkqj8E9veyhyMfC1qf+4qXP6KO1/h/3Y0ToDjc3sL0uHCYT/hS/DwRFrn
KBxSvNBE5TP2gutxP+CaE055lEsnLP9wnkX80y++joGfXGtdbQlHPfx2Kgo+
abWNvxTWMdCsvQD38C0z6IfVemdUzlPjIyL841UInaR33FMLpuJ7okJ+Co54
8nvTGfiw0pboX3C8WkAnld9bmLao+ofSyWkvwbPU/iCbKX3iIpzD97r7JJzd
Vz/5BB6dN7jgB/9lU+5cH4Z+0u2Uoy/1e5s8uj3h9De+3t7U/mO8SzAnHPXf
r+ajTjBTe2dqJ7z1tJCvA5Vf00wLv8I62fkP7OH5rMrG8HOIt8+5gtbwtSce
BdHwYfcvjdT+GLd965ku+K7V6tSD1PVJx3VznEf9t55p3AheGme87QusK9/Z
Re2/wW/Fcg0v0MnDQu2FrdR81YY0a19E/cz3KFMBtvsldkofjn9T6Uj5vFnP
jufwj2tagVR9EHTpDrt2JJ0sevS7icPVKwoy62ASNtJM1SOiZ3cbdMDTuz68
EIJ9Hb/elYtCf+B8sYqqX1jL2Nv14I6OZRYr4ZJ9a4R94GPei1N81P5oNezo
FkMnA2nNNdNUPZ1p6DQJi/w6nDkCX5kbVnKOxflMx52h6q/RwdOtYnHYj3JM
Sql6jRjaPKyBMyLHKqh673NL4e638LDGj+E2eHu15q4eOPDm93uUP96+fEMh
HvXXyKzcY6qefm4opg83C7FltMAWNyyEhuBN4VXN1VS/YNy01vwy5tdpqCgL
Xhudy/EAvrWioCsZFpevsJyG76QKSVD1ckjXExauK6gH84asEuAz5vS8tfDR
l97qV+CNQe9Tz8OTCx17o+B1BwPPRcN3mrfPR8LJxxOG0+HomDXFVH0eks25
ogfeeLVrK1W/W4eNb/8Gxwbw7g2n+geddEOJBDpx+fy6JBhetXtwuRN8PaDn
6yn4j3DZ909wUYu8sw+cXnSuftNV7HcCf4WofqKe891PP3j/yMs250bqfqR0
bD78H99Msz3Vf/RvVOmCn5sKHfwPztOSsZiH2RwSqqzhI5t2sF1KRP2mbJ2y
lRqP35p++bDJxQvB6nD/SmmFN/COpWSaBo99vJggmEQnKfpmLorwfMjlx9vh
skc/lKh+S++KezRHMuajneexMKzGdOiZJPx0bYrFGjj/QV/dhhQ6kU/isWSm
rkd0rq8fVmovMppE/0ffJ/dzET7DyywyAUeYXXwkn4p6INTT/Tu86XAenxe8
4WvMqa+wbN7TQwWwipHHTB/8rvPsrkr4tcyfKarftCvqlKqFr3IwXCk7iv49
3gGHKElm98LPnJ08p+BlqnYu72BP/lNHNNLo5Agz90uqvx03F3U7B+sPx1Y+
hcO23wgZhB9euHGyEb75kHvlvXQ6SV5+KbsQ9jghfr4LHvBPTsp/QN3vGS9c
fh3ne/FWdi7MffTSMU/4+ausZ1T//SBlcjlLBurTpK+sMfCHtNddOzNRv570
n3ODY6Ii9M/DMemjH5xhX76Aj32wXs3xThvq+PPBDJks9GepPH/3wZlVHb0m
cEz9qN0eWGCVVv8ZuHu34EYTmCas6LE+m04uKdJltsHSo/QDV+BAM/EWhQdU
/9He1wmrhFq+lKLOP1Xj5NIcxNuOy/kb4MNS3P4v4OieQMIFS7AcDQu/gXpd
aN+OhQbsB4wygyRY0WSOk7p/0jo637Y8F/XDO2X9Ybhmr/WR8zfppFPt29k6
uMleZKgN1owvcqqAA857nRqAnXctDS+DPZ5+i2fJo5PPV5b1FVH3d9hm2Ptg
qR6dtVfhqfd+kwO30F+VmxqegOP0LkkY3KaTxzfHXFxhn5Gr7gfhnfxxR1zg
Y8OLLH7wlz2/cx3hw+/bgrrggSSeuoPwOZNrptL5dKL9ufiyKbx79E2zO9zX
qsdK3R97bpvI1QaPsRRxaVD314osdwgUoL+95jyqSF0f1/ak+zC33X+/hOGJ
wYZN7bDK0Xtqa2BmDmnpSfiT+J97K+Exxc88u+7QyRs2nWo26n7aIUlGMRwZ
/1XoVz1hOJCCFu5CxL9sWN04PO4ezmIKB1T9cP8GhzY6+afA4cPzStT9x4uj
y0gVTBpVRd7BlU3X+Gbhsd3sm1/AiYcczm4qQv2tp1b2BD5YqfwpGb4kHSVQ
DY/svtv9Cb68dk9wCRw0vXjbo5hOWq7RrNIpH5CpPw4P7c1ySIMVtBn6KiXo
v67LbQmF58/sY6+G63j/+nnB77xWGnTCnnonflD3VwvOP/OchEl74H0XuEHE
aP0cfG7Iko8yfTh9qVwpnaz/cvGsLfxHZrSiAxaMn7M1hLXKPnRsK8P8j5Yu
qMMxb67s1ocFaZtPqlG/z73y9TzstXZwXAS2CB49Z3UX+dRqWzovvLb4yIwv
HL9hxTB1f1khNTUlF+451XCbBX59pVeqAs7kP+bIDDftE2czLsd+N3YgZLSO
MExa0nT84MfFi3MD1P34igelSysQ78s6J17AX9JPhF6A7xWzsdXB6er6K5dV
ol7IduPNh79Xld84Cl+KCm1OgUX0Mt0vwXaVhe8SYEHrTM6l9+gkN7LNLQxO
tlspsBN2TffefRJmf3I0zhLe6/HfSup+voAri5sVfD31yOQJeKn8pQ+F8IvG
eiZX+BGHsaTFfdSTpXFHd8G3FzZMPoMlSnsVNWHhy/wXn1ch3o+b0FZSzx/8
Rpcsq0b9ob1eggMuifvIcIG9Iw75/6wljIfbX/3thtnrb78fhK3an3YY1dCJ
8oPL199Qz0f+ZQTbw92cKXUvYT+dzBh32DWzbqwDlnx98+lx+J3MxyvtcCFv
7+hl2KvhRNYTOIg9sV+glk5shDhp5TCTSGegKazh9ehVPuwfp6mwB9ZfW0yn
7FBiFFoMf4vsDU2BX7TL1IjU0YnMZ54VF+Dj/7m8c6xHPXboVu9u+HCkpn4Z
XHNR31sHtt+ZeIvygSBXW8p65RVKdfDS0rfx2rCl/vreNQ100u+d/5x6HrUw
YLLFHT752PPIRnjflZ3ni2Chu8aDgnBJpFp4PRw28m/9KrjJTp1jDPYK+7iM
m/p+xq6HUQ8wfupdZLIG/YdWL38OnH8oVmoM1v6kd+MjfF66O/AzHMqZcEOy
kU726fWNv4FFT2z9pgNPSFxpeAGPJ4w+12uk8omAK+VOgcLF3fD36UqPdjjG
/vlwNfzhyeSVGpgzZ0p/Dg4ipxdK4Oy1S7LWP8T+d1s2/jbMf6i9Tx3Oj6xk
z4WX10f1HoZfykY2p8GvIrqXNsOvFvrmomDW4oQsys8vWvVQrtRS3/a1CeO1
tyPwINycy7PpYDOdWG+esNwBW8bcfv8MLqzkaZaD1YOzskbg+tiLfZLw4PM2
+rYWrCdZWd41sD/rn2Jb+HelK1kB085e9beDp7eIr6U8Wntq1hv2UZVfRj2f
DI9Y/OQLJ867n+KG5yoExYJhCYl5W07q+aWRdSzTI/QP+gsDU9X4PdVcd3ZY
/vtoyiR8eu8t5g0w34PG1lHq+WhQTFYZrNMa5P4SZlmy7OkT+JqS+7LncFaF
dvMCzK1qsboZtrMoWrnmMerPkvOi9fCpBRXdOHhz0+CePHhqYZg7GeZ6LOGT
Cz9vl76SDzfZLhPIhj3TP3v9g5+MCjdcgpU6eCxlW+mk4OdWvYswv/2Kn5SP
7xOVpPwhTqpIA7bKXnY2AtZ76N6x8gmdKPQsrLWBG3P+vqEsalkiTPl82MfN
NrC92qYZU/jnWiPNS/B8kHWkDqzWsaby4lM6Kb4k5MsPh/mN3c6GTXJVTnPD
aYna3rfguvVrD3LBa7RqRzrgTA/DUyzwVnaZuD5YwEQojglOmLAW+wG3zDZz
/63C9Q98nJF8hn4z++Saabh3+FKdNbxTwOzcEHz1ccLHcnhjt2lqF7zM+nzH
8jY6MSoSPtkCh1znUyyEd1eVmN+AW+p0FC48R/1iHxfmD+/5mjtRBm+8LHjP
Ew5yqFvxEe4VS0t3htW5lFuvdeB6zB3/Loc5vLu2sb+gE7kNAvxT9wnDuNW3
Ngae1NVreQMfGPx+uhd+/6pQtQXWddTZv+Ql1qP+Ocs62EDB6hsf3Cqr3lEF
3x79yScNl/m095RT7w+Eb9h+HC7Yefz8Ddh8Y8PfE/C67+OSlAUOvsjjfkUn
N2PlT4fBX0d6rY7Cabf/uXnBtJMrbifCRYzl15zhw9wcm6fg0kfcn/fAH/ar
rFjWifpShSnSFJbysg3mg5lrF3bshFt2P5IsgP95J9ttpt6PuHadqxPmTnuc
LAZfcBh/Nww7ZuokrIU30B37/sBqZvtkBOG4nH8rXV+j/4n/7U+9b/HBM6ud
4w3qAx+jiF64wf3VhDh8KcPyUBf8Q9Cb8zQ8yCv8txE2qlblPQMr8A81US59
teToZdjMfCWtDrZ321+zsotO1hiLb8iEBZkie1fDD3Y3e1Dvk4yfPLZ2Gpab
X4jzoI43vNN0y1s6KV8QzrKF3bZLF8fBsYT+zgjOeB2tXAxXybFm7YA358x/
aYWr/xnWacLvJ453f4a5sh1bVeEvDu8lWN+hX7LwHlSAh9LcZVbDEbT9f2Tg
vcLPp7Rgk7HMZHF4O/kmfQyWSmx7sgq+XNnKHgtnDFpZ8sJzks++T8Mbh3se
zFcSRi79VYJQN/rp+hKmCdjBMsvRCk5oXzP2Ed51WjfXCxaXqlnogX+eltWd
gR+xxs3XwL9es5bs70H/PbW4Ohe+4LxM7BB8r23mQA68uvh33hPY3i+7/iLs
G3OlZlkvnVy02rYzEF4YaWbThpnKuE96wNpxC4pWsFiL9RkXOO30hyQHWFO6
4IwzHDLyyDUOPvmK740VvP0NO38jzD0k8W8XLC9rzDoG+xjfPku97+T7PJ/z
NxxmpDFM4KCzQe7/vUd9pb3CYjNc8doqvwZu9Fo/xg+/CS3oH4EFuiNM2WDb
bC/2X7Ctr3XuUliqQGky8APmP7Lx2NcKwvhrl+F5A05MoF3vgUMWk47c7aOj
8OI5lkS972VRrzAF73M1Z70I/1DsubvqI/KJ1pD+Wbh0zdv8WNj1WaerAzwV
G7j67SfsJ7N7b/PBKxLKVn+DvyQ7D3LBTEdem7H0o5+uq93LCtPNJxal4ak/
net/l6O+0FRc5Qs/uhcQNAxLaLbqVcMScW8vvIXneBaiJD6jfmuwuFkL/1nD
F6sNT81s2lkBV61JYzOGVZmTJe7CG6OPff8E+747WR8NG2s4Ng/Cv/q7/0bC
5fQDXrQvqL/qXQ77w7xFs/lusO6SWYYrHNi4pusyHCTzSNkWti+4/Zj2lU44
WV+eplOfm7tzucN882MqUrBz6A2dcbjC7qIHK/yl5euOKTjq1FlHFvi2Q4Pg
qgHk9zNZe3/dRb47O3zeAvaVZXowDK8+9iTbF37Xf/bOZ/ifrpVeDMz3/PZi
LyzjGfmqD57cIZz5CD6qKTP6CTYhkispr2Kf+bHiG53sSaCpVsHXrN60voGz
Pg8mn4O7xXzzPsAj0aLnwuCAvqd5+oN0MmfqX+YCP/tdct8cLl6374wTzMfE
0Z8Of1ghHrobHhpzVnMYQv+ud5pnHbxjdIelEyx2TiZoLewoLBc4AefdDBCa
K0N9mGc+IzeMernPKWKAep/SiBj6wRszzlS8hOk3PL1iYH5BMZ9n8HdbFd/t
31EvXTbMSYWV7kzY7oa32coFXoN/heZcDIDN2MdIFJzNdehECSzr8IYRBKfr
f39RCyuuudp3knqf8lY1p9EI+h2dmaPmMC3024pLcEW7crIWzHApmssepRPJ
3qRnU6Wo15fce6Exhv7w0skHrbD35JWNB+FVXDyxD2Drp/LTtrCn0SbBevi3
wMtNOTA90luvAI685Ha8DeaULivKgC3v6NzOH8f1aFfy28PVpYuzRbCLkGev
LXzxGeemJ/CHVe+PWcAciyac72Bx9omt++C3nEnvZuC93e9XmMDLVkndMZlA
vWSYsFEF3nJ3iHMMNn0Q48kKFz7QUFD6QSdrV22anCwhDJt8m9MpsGzrfE0n
7DNzfc0tuMn726sO2CgiR38E5vs1fLoWDrg/ka87ifzyaXN5Nnz73bVJE7hl
E8vuTLhwR+OUE9xhf8k2GY5QOLXCDb4g65OSCB//EbbSDz52b4tbAqzSeku+
F/4try7qD3spDf1xmKKT4FDhNDM4MGLqijOsILumdxccZa8SVQQbmY/EalDn
b6VL1k9jvxyKjl8Dn1I385eDzb8zSgRg4YuM9DZ4c7j6tYFi5PvCx6e3zlD1
974NLdT7yswKuw7ChYELKbXF1N/XNLCVw3z+cWuzYOEa4+538C2WJzLX4DNi
9xRZZ+nEIq9t8QLce07Abw982dp/O/X+c8RdBWs72Gyt/jPq/eixI4GGz2C2
dvGXpjBHTU/9R/jKwJliA+r9aP1Cu79weuhwsBbcs24kh2WOTpz0PlzXhBeY
zuy+B5Pe5N5l8JXn9/4bhD3ZOCwXigjDZZ3yrsvzqC+U+eOb4aTjTwRT4Ciz
k8oP4Xy7D8xV8Pfft9vuw0r3Q982wRdm7EIqYPk7KbKZC3TS0GW64xj8KdPm
7CvYVqPojQNswGoZOwRXXo1aYQNHW+8zXbGI81t5ONYMptsqjZfChzI6BUTh
Vi9Zt5+w3mu5QjaY6UvHav6fyO+NMZZLYPtzrr/Own+sB2c+FKL++tv/r/8X
9u9TpZVecMDbio/Sv3G+CcI+lvAIb9S+RHjJxtQcVXiT1FBJO1xgYya1CRZZ
qM16BTc9dh7aCJv5/nwo8wf12edqZnZYe5XDBB3ewbTgzwL3qnlFOMJFi+JM
c3cIo9jZJn0Ofio8R3sMX2eKWlz/l04CdDiWVsPBmi/3bIO7sy8alMKmrueu
lML/bF29qPf3a9z3qX+HXQZldQLuUP2yuLPGP5xfQ1GHLdwc85bzOvyv2seW
Af+xDmV9C68051uQg+vUMkL/wh81ZZTF4KPxHExuS1TJC96tbH8KCKP/5eBV
FiZVMr1JmfcZ/M3h9X0f+PtyIbc8+Ejq4tF4+Ldoo206fDpfPiQNFpjMO5oM
X7OfM2RiViVuv3sPnYSVJwuCguAv35Z0mcEyvwXpU/Cp0/I/pWGXBTktvqWq
5FjMc4718Jnm5aZ34TvZfbND+ai3Rns3LmdRJc0xQk5tcPi+dAFZeCfNZ2Uj
rMSY/ZwH77DcZ5cIG99ZmdgAJ70s846Dm8tEPK6yqpLJfbFpBvDTpSGHC2FD
NvoFBlybzP6rCt61cY/xNni8cu7StmWqZGYmOZQXzvPdOqUL6zJLH+CCI1/c
r7zIrkqEPz2U0b+NesqvRTwB3rnJ6eoO2HJATmzpclXSGNp5cB18cN+qcgl4
7vC5B3xwYs2jbXawoYSS/O9byNcSPUdc4JUXC0oX4S+HDCTi4Irw6h8jcED8
SboPhyq5lvTBJR1muHVP+cPMTmk8qXDKNZtVkfCKQZ3aBHhPgqVZGpwdPWUX
C5PYnE3buFSJTr7Gh995yO9Zm5jDYPO4qDNfYIvCS0bRsOoudrVPsHbX44WD
3KpkvkiYLQmWqrmRqs2jSsIuzzXo5lHvIwi/2QO/sbk9pQUPX86/yMurSvbo
ioz9vEkYsrHa6kJw/9OVx+bhfytWaVZS5q36VA+XDz2tfADf4BJfUwMzDCzb
XsJzimdGy+Fu4e0qInyqhDvD7lYyrNilZKsG/4jzUoiHQ3NzPdLhSZGPMm6w
fyN3eCW8hb2V2wEmEix6t1YgntJkxpfDhse3aRzgVyVL53kUn+YSxr3k8Ro7
2GvLffNHcP2t+pqjcLi76s2HcLF63bvb8Invbt4F8EP6FqUH8P4xd9Uc+GyZ
Xz9liduhs9mweOWxydKVquRgX/ewUS71PKDaUEtAlZR5PXm1Ck659fXgDrgu
3X63AKy70uVtMSyVrho5cgP1fey82iCcIbL/Uxdc84xn7cFVqqS45+/yQvgI
t+iHJthpPnBHOCz8eSSNbzXO5+XRoy5w0t33ASHw2C+Nb5pwodH64XWCmP9t
eZLMsKuuRsoYrKTDPVKWQxjblCfduNeoEmMz8vwmzJizVtCC/723U0uA70wf
KzKHiz8bOkfDNplnYstgbuP0Zhe461vr5jn4hbLzF1N410PxGCEhXM+iyF4C
6yyYL5WED7jcjtpGHe9QFdtBWDr/To00LKnO638GVuf5mSAEaxyeNt0hjPh4
eG19ezZhbI1LcwyC7VhC79yDT2r/KCiE9dL/JN+A76QFO7TBXGqa5Ulwhct/
vZ1wiOVA+1W46vmQ/7W1WE9u11WM4eSjl+cU16mSdMG4PTzwExPaFKFc/qOQ
DebUblpnArPsX7F7Kaz7hB7/HjZk77n3NAv9mWTgR5qIKvlU0Mt6C1a339pv
DcsN3rmTBD/Y9anEH3ZZtbQqBh64QE9mElUlV8z+7ToI89wfV18K7zlfmn8g
i3q+tuONAqzi9d1ND/Y4uPD5EvxRIFFRFF6zYsx1AWYWop+azUT/H8JhzbRe
lXiYiYxOwjabju7cD/u8jwh7ATtwpH8+DruJWo82wTzhTqv94Smly5yUk2eV
43/DsiY/6mLg7uLTZjxiqmS5js2NCLhc+M1DQ1hTs0PTC7beULnmJLyBpO6w
gbfL9m1ugivF5NZrwU9qH1h/gBcf3UpUgXNFgxRGqN8riGVXgI0rDgz8gr/G
qphJwT0O5Xx84qrkGbeo0npYcdePBjH47W+LgDWw5/cY60q4Pf+k6PsMwmjq
Wn7s2AZVIt+5aTIOLt9YnFkPKyWq/PWGS9xfurTB/iwvHN3gJde0U/vhwzXV
TQ5wgY7WBv2NGC9hng4NygGlX5pgyWVfvZfBg59mD07DLx88YJm+ThiqL/zN
+CRUSUojs9QgrBUs/lMbThBrffKK+nvWH41pLvD0Xb+DTfCWTz5O0bC4ZcW2
cvgbXYQzERbz4+wthi8wNMUzYTnvp6J34KaTzEsfwhZ+porX4QMF14tMN6mS
qsT5DOrvXxVOsKawSKmSW5mJUUXpiK+BkNMS8I6+31pZ8JjHwK2l0hi/1shB
Hfh9guvrbpiD9f7n4TTkg4ctNZybVQn7I4nu1zDXeh5XATj9mtiWlzC/+BC7
IPyXXiTwApZWDk5ThxdkXw81wht5BIbC4f9WqRdkwX5N21/egLcKTMkkwJFb
VK90wDOrfvOGwm77/zSullElNqyT/Y7wy8MZhXvg3qxLH4xhoWX7wwLg4Im5
cQ3Yp3pjZqAs4ie2rPdZKmE8dq/WaYDnUrOHimCStuzSGjlVovxnZcYF2G9A
qIgBR4gvee0P2818FFKRx36z/tUfHthI3PyPJiziE32fAw5cbXQjEC4xUrkx
kYL8frrhbIwCxoM3ousknKF3uf0q/OlPkMYJOFu3q6MadmbVEnGGi73fW7yB
ff++iLGEV3Lf3H1EEfVO/pCLECwicfvgBFzLIW7cl0wY00JfO5crIZ7OJfA4
wPZ3j8lyw+IFm6/awZkccRfuw5rXst8JwF73j+9vgrW+6/LxwQoVOluXKKsS
7Q0fVs4mYf8N2mLAAh83YzGchh+2+bQ6w2+yXP4+hrWyd4e5wxopRUta4Fmp
zQNecMDNl8FNsFSa/upH8HhSnmQ6XN4WaPgNLnk71h4LH9P6qLtURZV08Ut/
CYH9suoZNnCp8gE5K5hXsrPvE/zzmcdbUfiDPUN1FU2VjH4RtmeDS+wWl8bC
DYo08ZeJ+L1HbAt18M7oqNiaROp9Vy8bLboqEb0TVBICn5YWM3OE3YPnmXzg
XrsrUoWqquRPznRo7zXCmFTaGiihpkrOfKuTy4X/pbJPScMvDhdtzIGZ1vlZ
ZcJxxmsy3eGvNKmUApjVPzPQBS7Jmx4tgZnXhnI5w1L/uEa/wzovvMOM4RvX
r43S1FVJUVVrqjQsLTC8wRmeMew+zQ9b/zb3PQy3Wfh8WQFznt9zLBTeGzvH
zgprWes8vgjnfBrOZ4Kn6x5k5mlgv+x494v6/wV8e9bHvoEH3/95cATesnfl
OqFtqE8yHDNeJaBfoW9iMYDvPanaXgffWsqhGw07tXBNp8GsyUvSVDVVyQPD
ZHNT+K/a6OIAnPVjG++vKzjexycbwrerknXyLNdL4Ax651oRLezHnzocj8Dn
SjaNWsE6ojwSO+Hy+KzhI7Cb9cpwXdjgfXx4K7x0n7uSICxnKHTfkIH16Ddp
0HMZ+bnqEtsBuPrO7alOWHaDsYcgUSUFZqJ1/vCHCta8SJh7RV4WgYeyspRr
4HYRe7vNcEdiq+gjQtVf4hIScOorBe4puOz6ZX5euFddVIRDG/PJ6RSxFHa6
YdoQD3+Iedvx8BL260fjy+R2IJ9Jv5/1h/d0J64q0kG9pi/fVxuPelxh5omp
riqJ3aHG4wWfOM+8uxe2zewf2AxHHuKSFdNDvvE8pcAO08rXSVyAR9b9VngT
h/mcXkzPhS1Ef5U/grkFazZ1wPXabTvL4IBxY5cJWDYw2jMbtvmj6kPTx/jp
JPichWN3V+gdgXedbB44DGeElQgFwhEXjqcdghP3sh58CgfqvzytCqscXSc2
DdN/KuzfAPvSwhrZDLBfDGuKr4GrNnCriMHLPm9ZzgWLcb05cQje6el4dywW
9Z0+5xtb+Jp+RMQovPKxcs5LeN3mLv5yeNMHLtfLhqinynlk98GHsxlxikZY
Hy1cVaywf4D5OwLX7PIT+BNDGPedQhoMYFWz3MxFWC1FJtTRGOvfZvUeNzju
sDbbTVj/ncw7I3ifwc1c652qZN8K0+3j0YQR1UBPiIO/7x393QnbvnUWLYEd
C29FNMHpspdy9pmokvfetRu94S1LrJsvwcK8poJ74FxFHn8jU+S3L1yXp6Ow
/mS4DHR3qZJH7DI2vjDTwXdcDnDqVJuQE/yc8c/WE7bPW9F6CJZanZZBefO/
Y3mUq7b0WJfB+85ODmyFXSbHLKfhZh+JUCG44gC38VYzVbKqNpZlNpIwzO2d
Ek/AB0RaA7rgdzNcH1bvViXnNKa1wuAXQQO1DLjUJnGdJ8y37Km5GaxWHcF1
GOYI3+d5Ea4zfT5vAN+td0zyMkf8Pypj3XkR/WyC4+4kWEumu4YO3/SoTGDb
i3qzbObUrwuIT+Wy9XzwXaOKJfNwb8+B9Ha4dWbo52XYzy2bXWc/1m+Tl3v7
ecJYXPEvbPMB1M+SJ9ftg48+3jTTD1duj/owGUEYQRN+4r0H0V+Le6S7wxZr
enysLVRJ4vqiJik4+W1KpbSlKukcaTSuOof8MJjS/xaWGG8vs4LF6ov4dayw
n795ny8Gly4umjvBb2Uf3OCBHSQERjzgXVJD3svh86X/fTgNS5bVP10Cqx14
sr8T5g8PcXoVjn7i5lXv3/CvqEvctbB/9FJJHmvks25f9zJ4XlkzWwKWLDRT
ugkX03mq9OFw5uGcK7D1y8epvvAr3QmlQDiW1hDMaqNKgjadSpWF3UNLJ/fD
LzfYZ/8LI4zlyUWBHIewnk/53U+DjwrHRxvDaWKHowJgRTOF5KPwbqaWcRfY
TqR9byjMWfr7sxWcmvcrKhk+cuuKyC5YvP/X4Tm4rL/pjzA8NaFuKPGfKjm7
VOMuE/xcf1XcXth7Quj6YChhhNQfbR2D1Ysm7S/D7y61RHbYqhKj0XvKq+D/
VXTf8VR+cRzAk0gqKiGlISOjFHKfa91zqIhEtuykrOzKiJBSKZSUyMiIsoVo
qEg06FeJkAalaYcmfp/+fL+47vM853y/389pXP8FdlgYOSFfTNUVPolEHpra
fcYWznZfs7URDtp0zNMenvaYrdsA63TWND2Aa5P83GPgn0fXuH2BX/VrsYLg
+QnOKjN2oH5u1BB3+HDFUuoOz/fZV7sOPu5xoSsYLlt2cd8qeLHtiHiBM9ZP
Z2hVaAQlxjs2vp2zk0VPX6tYvAkuji5bYAAf77uXtBK2Go5PMIRnrr+tKAEL
e1kfmueCeX+2ye9qOPLpw84txvD7247dcTCfSUqRHbzMvGTLUXh6o95RzV0s
qvdzvxwfrHpetek8HLN1dnrLQfT7HWbz02FjkRVpT2HN5c++S+1G/5i/9VIU
rP5MSIAN3zmgcDMIXq1qLWcBi2fzLnKD467nm69wQz1c4DrpFIb6i2TpS7pj
v8+/x/04lJKJmC89m+DhDvO/1+CwaTE0GfaSkiuOhm84bh7OhXcNX685COee
+bDgJjy/k84LgGtDG59NwCk+riaGsLpoa1iKB4t2PPRSGT5AicNUpp+AJ+af
ZnVqEZy0/I+PDjzTYMOGeNhGumqFASzBH3U/Bt7Yzn+rBnau/bNWD1ZuljXr
hFseLNzLgjUV67m592C9r1VkLIN502bMXwDzys15IgyLzUkOToafPHJzaAih
pOdPxyjxQn4JbNjnAgccP7h6EK7ghCyfCMZ52ePh0jF4/O9A6i+4LO19lbw3
i+bsXDDU8c9KSzYchnkKucdz4NfSWk6pMCtqV/E5WLfO+919uLw4VvQgbJqm
LCvkw6LS07V0tsECL5dbS8Ka6iW5ujCVGNAqgrOswspHg5A3zHrua/miXy42
TU2HjzlsuhAHXzty0tEb5qRa1Sj5sWj+r/AXc+Cg8KfC1vD+b9qvxwJRjwpS
aW9hCR6zxBz4aPmzAIkA3F/qmrae/ZSYJXfP5dvLoqY2Bbus4Ng417zYfSwq
YhCS7bEP837nqqeJsPHDNbq7YRtt7kqyH/k8I2V4Yi/2u8NH9zD4dv5NlXZY
4aqRSSZs7nRBrQ5+PUlPvoW5F8YsToX3BrwUfxjIok6z1EvnwFOjI0qPYTO/
TW6z4Sfvr6qPwkLCD1aNBGB+npasXBTEohZbDpa9gr0KIweb4W03V3/2hAXE
r3d2wia7Bft3wvquIV1vYa9b4q1OsLrUmaKpYPS3JYJJxf64ntl1pX4hqN/n
fnWuMHeDqvyyA3gelhoOf/0osT+/1I4FH92VrdcPC89ND70Hz/Y0lD0Ln7k3
+qkXLra/nxUOqxyXbuEOZdF5HuTbHrij1unZTpjOrXiyDm5fF7jcMwz9/CRr
/wlf9E+JTwUBcEzgHOFo+CdHNvQybFf99IULPNS4aqQQNvgYweMMF0YOySH5
0C2SmSpb/n2+4KLzHmUHWVR0LV9GjQ+eV2zhzXr494lFrmXwCp6u+l/w4E9O
Wzxc/0shTDmcRVUuVXz2hFPkd3+LgZ+tnXyhAld+Y6Sq4dNG0itE4aknYf6C
ESxaN9p36a03+mHI33nmsGT7oslyePo5p7FkuCWhOeQo3JkolFQBS10/Grkf
FnPteasUyaKnFs84JQNfm0i5fAT2O32De9iLkp0mM2c2w5fF31rfgwcT5D4t
OsSisVX3axLgOxvz22RgKc+uJ8fhQN8vGy7AGQdDxAj82oYdWA2LfdlttRo+
sXHBzFq4W+pnmwz8y5I5NicK/SPgpMH4HuQnW3a0IvxRNMnjHXyw7dIWO9hx
fuxwHXwsMa46E7Z9pa1yDta3zGmqgRM6tUQPw0c23DaZhHl5P/nbwOUveKd3
HGbR7VWa05o98fNyTYduHcH5r9lfSA02iJloFItG/1OYV/TX418+NI32gPOE
RBc+gCu0dgpfgRe4OGzOgIdETt6tgTem3X58Gl7sa6U7AnstXx3pA5e/ttAQ
Ocqij97bcVvDGk3pMTZwZULadgW45fOEfga8Xfq2zaQ76mVeCr0LC+p43vsM
57vUyygdw/0+K7mZDq/K0wuPgVcUcgm6wJcvFLhVw5kTSe82wYeCh2XFjmMe
mkqq8sLOXJvfN8Gz6nVK490oCW8YTPgFp+r2K/jDZcsVdExjWHTR9NJjDCzE
Muy2hHMmXwevhz9+6vpyF57n0KYz4Ip5sPyHa9gJFn2js0XBD3Z63hxUB9t1
LScb4I8n7k2+hRdlL0pZ6/rv81nVsi+dxPmzcvhNwW6cD8b/uD6H04JO/I6F
T3n+6lkUy6L8JQPvHODDkfFvlsEftr18ZwMrmumqWcDFgoWHWbCAvqWzYByL
Vj/bXn99F/K9hOyHMdjzO9OyDD69pWaBbDzqf90m3gkX7N/fBeK28Nnz8zI6
YW335iC1Uyx6qIjx3QhX+ecM+MJ9Pw5+WgYzd5RuJMO8vzJ0ueHdX7Wab8He
reqHvu3EemyMdrlwmkU3iz1yMYez0uYM5ML3z+ucNIQHVObTm3B0eNt1DlxR
qXN7ZgKLGsrnXuaHw3PUbwqcwfNZoadq5UzJV7XIm02JLHrJKM5EegfygcRA
4OyzLNojzVr52wn9PPVb3FLYRS6xsB8eDDkxdASOLiupugRXG/EXf4ANxFy2
ucCkJaJv9jnkzUKWsj58yDKtOw8O36as99qRkk9GlzJKkrAfHt9Ql4GPVkiZ
TpzH+fxAe46WAyVfXlS3Lk3G9eRv7pOB79oafg2Ch+/rsz/ZUyJSlsW7OYVF
5UmLgCUs/EJ0liHckmfCMYPnycTJ34e9JyKlJu0okTpsfsQqFXlmW8OeHlv0
A0dHd+E0zNPylh+28LelS6eJwXd73fZshzeLN6xbDEeG70y0hsVGRQtEMvD9
1x/WDmxH/+14560N847kqz7d/u/zPprPuP37etEJjQqYS7rexwvOuaRUVwr7
Ci4QPw07PLQlSfAdh+dGl+ESqbTcaPjvc76y+7BsgUCGH/zo8ZFy2YssOnnn
7lV52CbfsDwDdkp+b9ZqTYmSyiVxm0zMN0WxbcZwj1BXdhjsudH+pip82eqV
SCU8NqD3YC683r3xkUAW9kfSZ5FmK5zf6zdNlcBBn4UyreEtbas6OuBBCyUb
dXjr+PavDtk4L21z+dlhiXwb0l8rkIN6FRS1tIEFrqv+aYV1giXsHlrg/j/5
8HNfQj9a0x11Gb4ZuYWfwnH132eEwhf1/j7ZC2t/3htuAd9SeeoSD/894rdQ
B25T6bmXB9sZP920Dq4t0+4agJlHfQZ/zdFfmaWGNrnYHyNxl4pgVxl5tb2w
yfbK3BS4Xve5z/Q85I3b9y2U4XW+b9sj4NXlq/xazSiZKZH4MTbv33l/9cvH
cFlg3cdrsE1sf0ERXHDYVVnvCov+3DxMok0pKfot45yWj/PojB/+x0yQdwfG
j80uwPyz2h7Bgg+q7qrcBc+7d8bs+zZKDLfWzT4D7/qQcOQZnLz/bnJ8EYve
a/PtNzem5GWn68tv8MiXonRBWO8Dv/wf2MZJWWwGXKbICdQtZtG9hpV+j42w
P4p6eV3gV+lL11XCXVw1w3NKkKdtLNtV4R9qsluM4Hc+7yJmwBfHrj9vhC8N
a2de3or+Uz3zWBvs28BEpMGlB98/21mK8/qZwQPKcNVI08VWuPauiGSXIc7/
+f0rXsEsid6xf59v7REQ2jcK5+6771APS579jzewjEXXai7dvwMW3zvLvgmu
a7Y+uAIOjkw93ALPzV08ewncssju2CB8bjLlKg+co3msQPAq+oH7PpX+LcgL
XMaql+C5544uPAC3Sq/cVQDPY5232Q93fLdWLoV/p4aV+MNnnm7J4ilHvfPf
cVSCDR6dOCMO83i1Pl8OJ/6Kz9CHU1QVtk8YULLk5USpK6zHZWj2EZZZKrGx
FL77qr2qGG4SfTowswLz64FciKfBv88X9erVr8TPf/rfmwB9StJfzG8wgv3O
Roj7wrGVx0pC4dm1+lWG8Oitle/D4UQFNWIAW12VnyqFjeck2EnBvjty5ryD
ZUMs+afBWooxEfbXcL/WEaIZm3F+VXLedx/+6tieZQRvVQp1SKzCfH14f02x
HurHx29JKnxa2VvhMvz5sZJNN3zeMMvBHw6dWmf/HtbuMn3iCy+31RWZVo1+
43Q+2AY26jW3OQ2Hrply+6JLSXcPOZILG/k3fG2H9c/mDw7Bfnv0PqbDG4Iz
VX7Aiayl3CmweufGbtnr2D+ETQJ0//1/bl0jOXjePomv/vC+M85hN+D/Fhoc
4IJDHkxM+d7E+XnjrKQrG/HzmYOPJG+x6ATX3BZxePnfBaui4N3+M9OebcB6
Sk3xdsECGnd9TsC8y29ay9bgPGC6SdwYHpdXKJh3G/VmL7A0SQfnQdMwXnFY
rmJgcRycaa9VNQhvcxj+3quNeX8mZNMIPLck7tt7+Mx6vbU8d1i0cPfLty/g
zvKiayvh/qTdTjUw93SPPXZw8o4cr3i4+oGY2Tf4z4YvkUvhG4ccOmbXsujU
j99vkMLJh1uHDZXhgLlxCxbBkw88S+1g/rWVYuOEku8Ks+Vr4AqrqKrLsJBq
V9DhOhblCuyM5YOvneT+mggP97WZ/uGgHisWVPyGbVq4ba/A37Ov8RTcY9Ez
+98tXwJ/+CTmHVSP+xV+xrdPC/VhWKBzBG5/bnPJA/b4lJq29z7ybZplzGVN
SnYI3/3MaWBRte/B/DPg7j31wWmN6DfltZO96pQsXGKebf0Q+a9B9GKIGiXy
q2e034UNX4r1SsFJ7/ptv8Hrq1/0cMEK1kynwGNcz2oFh/lsSvqFNfbtgrtb
RG8/ZCjxc1udcxcOaOwhB+Hcywtlfj7+9+c9OXQbbO36/a1UE/KDaZ28AvyG
78k6Bq6b4/FrCbzY7pGlNTy1UDloGjw4U/3GIHxy+8g1xHCS6Oz3N60Z9b+S
p2hYFfVhp215FRY4UVz1Dl4l82L4NuwecUG1DTb5UdN9D7brn7foOWx9tFOE
PGHRzmyvbZ6wBe9GSe3/WNSttST2zHpKIvMaeg1h/TVeFcfh4XSrjDJ4RvIt
A1WYGfJ99QceGgrn/qGCPKAQtJbrKea3TXrMCJwze4+9MMzK+5ncDasvEBiX
gY/wZbQ8hz0kPgvWw4HR3xqMYIPe7h3Vz1g0Xvr+twhlnA8npFpewfZBy6fv
hB8rWzhbP8d5pJF58EuJkuy563YXwOVbL54qh2PnlnZ0vmDR92XbT7SvRR4I
NRgqaGPRppJQzS2K6Gcbt/1d8JJF17yW/zKyhpLenuALrvA4r65hPrxMRb61
Aq7O+/7DFR7b7mH9A9Y7VPNIERYZM13yG+ZV/s9jNZxff3hoYTvy1C9HS2H4
wR3rrFK4U8hbN341vv+IbcH5DuwHex7eRgVKZjT6fH/SyaI+kZIuN+Qxzzvf
jX2AF/JEG+bBZSf0Th3vQl7V8ItQk8N68zwKGoSHb2umvJOlhGci+dUPeNEM
3c0dsFuLp4nFaxa9MTqUexQuHi9a7go/WyMiGgQ3F23sewJLCGYYLYVdE4al
O+Ba1WLbhbBZ6ibf8df//n62ser3KsyTvIq+Wahki/t1eV9gV7+VvUvfsqiz
8fTzP2Qoua7rnKkPj63bIvcMjgqtkyqCP4vo5ATDz8svevW9Y1GrtiJZJ2k8
34GDf1O7WbRVw1qwXgrnRU+lKyXw45ruo+VS/z6fPMVdowd5M/BdNQN/8rrr
YwJrLN6qJAWvLDKJa4al93+YdU0Sz3uS5/fR9ywaFX/KcB7cKsn3pxl2uGPy
89lKnP8vyCx+B+e/udFSC0eVT5Xpf0B9jbtc3QnvWSUvVA47bnudwwNHRJ5L
fwMn71tz540EJdIb7D3P9OL8esVvlhbcFndlv8ZH7JfFAr65K5A3Lq9yToD5
g694Wa/49+9b17vcgCuNRw+uh+8Gz3U98AnnkyNfv0Yvx3xxf9gaDXvkPskI
hRMu+uxY8hn1NGReN76MkvthmicV4KRdIms+wzXnps84Bg/6P6xKhGcNCQrd
/oLzasi4RuhS7Gfdpw/kvrJoyNCV04vh3AhGNxLulKyQeSxOCcvf+GPdN+TX
rqCjuUuwHrOn1qX1sSifqJnp28XIn4fLHZvhC18Y/XJYOFWaURxg0aLsZaK+
YpTst2evnTbEoqt4OGb3RCl5p6VaOhc+q/bk9TU4NVjuRecw8m6nuuEcEUo2
TcsZ5h7B+fDVS9mPwpTYJmVVGn5H/+1MPVOxkBJBXbmiYPhvz/OyGPiWiK/P
HfjEPLVifVi/aGF79CjWPy06Pl4IrzcPunURtrNRsw/85zWu3cWwuk+xlAf8
3xOButvw28d1hrbwZm8d4juG83fIH6XKBTgvTpvddxhmHzBtyYQ1h4RUmuCp
pBRuR9hyZNFxuR+Y15mJT0XmU/JnKNxy5U+s55ofW1fPo2SpgYroll/IR/3j
9UKClKzxPCZzDu6yli1oEqBEzm1JUSvMb/DM/9Q/z5s+6zccPXlw3AuWnPqk
MgGffc0a84D1l1pclfuNvLs+8RaFrx0qMaiDE8rnPyiZi7w8Z+mlUThIKqM3
HJ6Z7C/45y/2T9xn59OzKQlrCNt0dgL1Fju/doIf76eaMO/lJPLQG61PD2b9
+30hdxj5KfTH7r/fgmDdhk1bE+FtRl8aF8D36+fHm2Bw8L06tsmOD/Vzr0//
LWwVl2XTMhP9Sq2NW4eLoa/P578KgFd9zbSZNp2h9kPP9t/kRf/OjODowIXf
k08cgFN3BTe8gtecW+/zkYcSDWPhBctmMHS/vEZm4Qz0D8ePFvI8DP2wckV6
LjfyncLtcB84VIWMOMMmwu1mL+ADxe7rp8HZgVUmA3D35r6bH6fj/G1umabM
y1Czwi0N2fCe1OdXPeD3ooF398BrHvjca4FXtgec44Etds/1NZzJUHbgy9E4
LkomlsTzc/Ex1CjeUeL1NDz/qIBoObhv/gK1SlgoQOyGGRxwrzDlBDz55UW3
FVxq6Rx5FO4Yq1x/Fp6vbT1pAGf45selwwJOrHva8J/88CftcIeTIocPjuxY
ksWaxdC/40azrKYIeSj+9bcOzIyEpHPgKO2nysnw8oKTvImThOzP/Zk3CE/n
nfXk8wQhSo+kRZ/wM3TH8fBza/8S4iyloDxvNkMv7vi+ofAPIVR6yH8Y7u7e
Jd73i5D2JK6YRXMYav1qr0Y6PD7XU1cCnuR/8PwkvNVRV2E3fCpzawg3rHR9
zqNYmCUR7V/xk5CuZSdXXBHA9/t9dQsbJaTA9RLvAUEGeZLT8XKEELa2rUEo
bFu9y6gVnj3Lv/A7HLO6dkXvMCHanD1JMfMZ6ieftrF0gBCRiP9Oqyxg6PpH
j3ba9BNSmVN7pRZ2sCv2V+8jxI1qaiwRYqiGev+Nw98Iyapxi+TAjjmly7Rg
3xIzUyNhhn4W/3SE/xMhj141/faGM3MXtzd+JKRP2rs4Fs7eVCN5HBacLhu/
XATrb2w56NBLyOoVa732izJ0Wf9c44s9hIieX/n0Luzwt/bkTPilRcHwF1jt
Sg9feTch64SiPC+IYf/bTK5nvSFETaX7zV24N13p/efXhPSuj0qvWMzQmsjR
oaFXhBy3OWN6DRYbMfDohzuLGmN+wNPuLbPfDT/h0/62BUFt6rdIVFUnIU1G
THsW7J3lqcYNX//hm5gDc8sXZEx1EMIa47Fvgj10swSK4IzZ52tnLWPouJr4
Lu5WQra4R3E3wsZ7ln0JbCEkILL+wCAsOvGXIwlP8ezLjlyJeoxPv5n5mJBD
Ka/jWmHTg42BQ48I8Vsr4DMK644psErgdsftKdMkGTp87lToWbgp87PaRvhx
+oYQXjindUIxS4qhL138365oJGTJx4Bjd+HL3hzfdw1YL7c7PG/hyiLe0gx4
IR8vb7w0Q0/yZh6Tu0/IG6/QW+XwtbXcbq/qCdH5OPGEyGB9eePnld3D/nuj
v243vCLXiDjCLkn7lILhs2IT1Sy488O1iauwfdMq75t1hFy88pa7B47Tz59v
BU/w659mr2Lo2xEztfRaQroVHT6egvNCyjy67xIydqFx+CGsYWu92xXuSZBf
KSPLUCcJvvlZdwjp8JpwOCrH0Ehesq3wFiE7N1bxCssz9HZxReWBm4S4t+WW
pcErS3V8LG5gv97Qy/RGEP/yZmNTQjUh0h6b3y9bw9Cy3h8XvlUQctb0eA8L
noh6eaYKTry9yIhXkaH1p/dbjl0l5OnBB2Jl8KaEY32RZagPzUhnjXW4XpOi
tTLFhKiPFamEwmms6zHniwjh5B0ZiYbjhGTnRsI/F+gPn4Uf6+pudIKbznG7
b1Bm6B3pcqPyK4Q8/9vS7A8/tffS2AJnz1R02KfCUK6L2RcW5BFiza859ng9
QxOM42cvz0H9sMMv26kyVPKUlOLbLEKYrq9Xo2CPxsHmY7DgIM+JJBZD6yyP
pUhfJERr6KD/V3g4RiTZK4OQspG2k7Fshl5wX6ny8AIhxnbehWVwWcPxK0Hw
wUtfUh/CltprdDfAceFj7j/gRldpsdcpWF8vMm+2GkOp1yNSBqdeObHZHc51
NO9+k4z+9ay5Nkqdoclq64Vck/C8pvPHCWkwNGltaLPUOdRn0QeuK/CePaO7
WhMJeVYuQyI52N87shz3xBGyOKLLW4ugPxSsiKw7ifUcSzSMgpW0Z6pKwXLu
EmGWFP36or3Iphi8H49VtT88aSr4cwb8fufPxCZt9A+hO4tGogkZnvemSW0D
Q5sLBPeXRhEyUKmT2wS3ZceEOB0iRHl0z5Lbm9APZbaPfQ0jxMGvclONLkPv
Whi5Zxwg5MjWYeYtbM2+JGUCbxnr7VXUY+jz1BKL5BBCuOl48EnYwER0S20w
Iea60x7Gw490ruZeh80ONATs24x+46uamRuI61/R2hgM+4pGpqbCPj7r1g/p
oz9y6xxg70W/qz90QGkL9lusH3urHyEJjd9FemGvI9nR+T6EJJdWStUYMnQs
dORHmRchVqlVuilGDDVp/Y9t7k7I+pKK4DZjhmozVi/37CbkQLqFkw4Opl/0
dpd478L8usX16RCcqmSV2OZCyKYNpdtOmqA/7bbkcnHGfskT7EiGHY6lz9gI
n68iZeamuP/+t7+POxHyZ775qD987vMsEx245c3hnY5meD09dHe+A+ZJZfi5
n/C0BRkfL9kRkuTiE/4HXlu36m867Oi9tHmJOUPFB5qUTeFAvrSdkfDKQ2fP
ONnieS4K862wYOhsubSRw9aEbLQ8cbPZkqFL+LuHP1igXt0Oln6E9dzkOVfg
VD7FW7OsMN/FTJwtYEOXBeOPYceEVXKHzQjxWifWVWHN0P6cCG0LE9RnvEhG
zXaGzqyMONhuhH7s+MBc1Qb196tPrHorIZLZW1s14LLOCq/LsMUn7eGD8HiH
fBovHJt3fCTGlqH6t7z8ww3Qr7k7ftTCv4Wv7fqtj/UOSo/JtcP9HbL881QP
82rY+vFee4a6Oty93LWJkGUHFU7ucUT//DytZ4E2IXubyiQvO+H5SEuy53EI
4eI6IiO7g6H+Zfw8LzXRrwafNSx0Zuh1ZXu5M+qENOS3imyGl1yV3yAMSzgo
qovvZGj4lPPqOWxCnHbn3VDehXplDk3/pEyIXebkDFc4M/JAyy44dkJm31l4
V5Lu3O9KhPBF+1U1wBMLQ7SD4TLVzdL/7cZ8e3gu7qsiIWkXDg8982SoeZfu
Hq+VhMi+Yl+u3cPQRX2VogtX4PkNesQK+yKP7HipXiZKyDXH3+PqcKHw0yRT
2F/k2U4OnDXHo18fNhoVX58LV12TldsgQkiQrBLfLD+GKp7LaNosjPc/X1rn
Ar/d26/ptBDzJ0/yQQLcJtsT9k0I82Lo6m/uAOQ3vczN2vMI+TwQ/tthH+bZ
BccyDj/y1YsbEmv2M1Rm5rRPinyE5CfwS1TBI/FDi5p5Uc8GV6T/g3/py4bE
w7b32eaWgeiP60O91vNgnhddFEyFhVeM0sgZmOd9yyVKYPOfEVrb4PjTQlG3
4DvHmLY1sPF76Zgu2D/OO/QVN/p5WW2PbRBDOTHcrWemY374hc0+CZtZvXwh
Chf3nr7bD/9KHxIT50Le0dq88XwwQxe7rDJymeIQc6HQAnYIQ91O1vA0THDI
lk8Fa36FYb6JzaqfNcohmutm6m8NxzwxOROXMMQhgxtXjIZFYD+IVpft6+cQ
ya/KPMfht1Pq16zhyzvswu7HIg9L9u1SecQhAba3uA0ScH1SXdJ/azhkykXy
T/EZ9NvlU4uVbnDIj4dH2H/hK4v7Mh2ucwiLGp4eT2SooEVHQvk1DjkUe3ut
QBLyV8yM7F+lHPJ2RnxHOzzrxyHb5mIO4QrYHuOWgrwaL3zsTh6HnE88rCGa
ylAFy5kWi7I55P0tw48qsOl/Op8eZHEIOyAmd2UaQ+fwppQrX+SQJeMihdMz
GOopyEr6k8IhRqrHLorCz5ueKdXC4l+mSR2C3y2OY59P5hDD/675Kl1kqE2B
4EBxEoeU7vd72ZCF/J2Q987/FIdsq79kMzMb89Iv8npNPIcYe35dKwYLp8/J
OgGLOV9VZMHFJ81Wq8P9A9+u5eUw9Fuim7v8CQ5JP3GybgS2zf31wTKGQ3TO
XZvUvcRQu8Z6c/fjHNLIz8gF5GI+tS8/IRbNIbHKl93q4GgRVRe1I7geSdfB
LXlYn+X5QhVRHOKzWm59Osw7X3jy0SEOcfm+5MT+y7j/qju2uyI4JGeniYVp
PkMtXEeI+AEOedq/tcq/gKGnb1+60RvIIWatPdxiRf/y0lcuxQAO+e41sZgN
2wl0DL3wh3VI8udS7KeZeSpqbhwi/SvWalMZ9pvM7bA1rhzSkKMY6wp3jMpd
fbSbQ86tWuqfcZWhZODKo407OSTuXZolq4Khq349nn7FgUO4a7V1vOEF8n3n
eGGhb6KDiZUMvSpjcrbIhkM+G3ssUqxmqA/nqtwiMw6RHXrvFw4P+pH58qYc
Urmhd+Uo3JUotPnFNg6xydeRkLuO+jE//4MNd60r1Dp6g6HKAYpmqoZ4vSH7
sdZN1Ev3dD9xAw7JLtPeEwLzRPH/ctfnkPYtH2Ylwf1bhK8JwzvqI3Qfw09H
YzoObOaQ17cWBujdRr18cNkgrc0h+z9kLc28i/4swHtgtfq/31fse+N6A+b7
4Du7kVUccq/x6phVI0MjHv8wFJHhEK/T3LXSD9D/JQpN8yXxftTw844mhha9
lxxpF+GQ2V8VZsx8ztAS7iGlCzz4+qj+1dAWnD/ixwOWcXHIaOxVrgx4Us6/
pWIahwS+en/01guGtlS/fLpxQos07fdb8Qc2LX2SG/VXi1jxut6w72Bozvc7
b/sGtFBPtYrBcKHKgYAkeO3uIIfjbxj6Z2D8yr03WqT19jfZ6m5cb/tAW80L
LRLZlNIx1YPnLZnyrOypFpnUFu9z/sDQI9M3nTZs0iLfn0m0S/YyVH7pK57P
D/F+N+yv7/zI0PvuWmcG7msRyaMZCjVf0C9W3lPSvKlFCrQLOzW/oh8OLZ+V
fV2LzAnVvj7xjaGx9UnNXBVaJL6E+cI9gPWTuH4wtEiLLHtzZa3fMNbXkGvY
JUuLDHl2+YeNIA96r6QT6fh5D546VX1HnjRXlp1K0SJuDdfk1caQbySjJBae
0yI9yn6B68eRd78akTcJWmTvOsV4Sz42ja54EXLWUousP22YEAlrWf3QngGv
/bj2FluATZ86zWrM0NEiIklRh+g8fN35dUOphhaxbd3g5S3Eph+MTTc8XKdF
ujd/OM4RZVPHK+8XZklqEVnWf6uTxdi02TimMGiJFikJzXmrtIRNC70sF34T
1iJBGguj3cTZ9OdR4zml85FEHyvXdEuwqZP3x40Rk5rEuyH7d5kkm361WLd1
yU9NssZtelaFNJvyiHSMTQ5pkqNL9HusV7HpAYVe6dXfNIkxk7Jrpiqb7n/3
gYf/hibRjjGpusOwaUBWR6NUqSaJujx0dIiw6bZ9Rr9EEjSJg6vvUK4um9oq
NXBWB2uS9E/q32YZs+kvqZLkou2apHPIZkYhrGQhl7/ZSpN8zl83v82MTZ9p
5g+F6GmSCp6gGUrWbPoibcbWdhZeXzvrVtsuNp0UPnZk+nRN4vKgYkG0G+5n
ut2KsB8aZLbGTedhXzbdrPBBUb1Ng1ib8uuKBbDpK74PP3OaNci6XT63Zgaz
KUdIludDpQbxvDto2nSATX0Kfh28la9BYowLB6TDcL3ZWql6lzSIqcUcWf5D
bKrfv6fY87QGeTVonil0hE1nZCzYxnNEg2z97W6pBtfdnzbd87AGiarWvu10
ik1T9uj5uFlqENHqo9+jzrFpU7ykwgNNDbJkk0BM4EU2zVku8OLeAg1Sfcpp
atkVNh0JMTxV269OwkpjrD8Us+nwzvvHW1+oEwvewpKmGja1l5k8G4vA1LVs
YvPYNDW6bVh2zyZ7NZI3ot28aKEaXeP0eNWvKTYpslPbet9LjeZ5D/K1rmHI
/4tVjHQ=
                  "]]}, "Charting`Private`Tag#1"]}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{10., 35.}, {0.000344916490703387, 
                 0.0005114983789586139}}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {10.000000000000021`, 0.000344916490703387}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[
                    Rational[1, 120]], 
                   RGBColor[0.24, 0.6, 0.8], 
                   AbsoluteThickness[2], 
                   Thickness[Large]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListLinePlot, "GroupHighlight" -> 
                False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{10., 35.}, {0.000344916490703387, 
                0.0005114983789586139}}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {10.000000000000021`, 0.000344916490703387}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  PointSize[
                   Rational[1, 120]], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2], 
                  Thickness[Large]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>],
           
           ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}],
          Selectable->False]},
        Annotation[{{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJwc3Hk4VV8XB/CIyJyUKKKEjOFeQ8ndMouUJlM/c5I5RaJkSGWulDlTUmQM
ZU4olaiUQimVkCkzje/3vH/1fJ773HvO2Xvttdc650jcwcvcmXnJkiUv2JYs
of6N4MiXOMWlTO5UB+tLbNZkuH+q+5h9Spl4XC9X/7d7O8PGu5eXY5kK2Xjo
Zt/idS0GR1Nzxk2Yn7X17b5MLYZWXtNelU0q5ORy4lb7WYvxfqeiroeUCvG+
IBsQMKjFCEt06nPVUiHBput3XhVkMFSU788mmqgQ5+0s60NpDAYt9esuo70q
5HjL2p2z2gyGp+ur/LX2KiR8pq50zyEGQ9d439SAswqJDW4IKDjMYJDvnIrH
PVUI36X/jqj44/dswlPsvHD8d8W9CycZjLfrO652e6uQq+c3RT8NZDAiBCXJ
YIAKkdly8c7PaAZD2VvN/E+ICmGEPBwRTWMw9JKujP2IUiEC3yL4AosYjBr7
1h/bY1SI7AS9qLcEn9NEpKNTVcj7pC9rbz1lMB582jU4lKVC5O/d6Rh9w2BU
+a6O8spWIUd4Z190dzEYuW5ZvTK5KmTUPkM9t5fBeBG7x+Jfvgq5ca8hvm2A
wUg5M5soX6RCbMqPLN85wmBsbPy6w7tEhWwLMrssP8FgCCy4CuyuVCGtpyev
KS8yGMyi+wXYa1VIpNRGTXcmwjgfc4xZDGa4CJmdheOH/HjPPVAhX/c//yvL
Shi3k2vOVL5VIctNX35hXUMY1tnCZlt6VEjfwP3SX0KE8fymaNMLuM1AaM8p
YcLwcl7z6GmfCqnziX+eLEIYb7+WLDv0VYVk5O9JGBfH8TJl59UHVIiQ56h9
0gZ8v47jvd13FVJS2fwwWpIwLBuPv2+AP/7T3fIGTvvgk/1wRIVoje6VS5Ei
DMmGBxJdsHdnLNNteM9PEYbBDxXylGNUk1WWMF7ubHASn8L8aHx3c5UjDBPv
1MqAORVSauevkKdIGFOWTDa9iypkC5uJjpQyYehufvdW7I8KEctlfhJDI4w3
h7kV7WF1+fvPa+Hz/2ZreP+qkJtyxeqadMJIKPvRT2eiEd4RA54INcLw4/V1
sWOhkWgT1tJ2DcLw8Ch5XADruFp1sWwljA0SP/RK4S+eEq3s8PoBe3sRVhq5
7Jb03wG44qag8+xyGmn0eVzxdDthOFzRsV3LQSMVMolZA/DM9ZbbXdw0MuFr
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
C29FNMHpspdy9pmokvfetRu94S1LrJsvwcK8poJ74FxFHn8jU+S3L1yXp6Ow
/mS4DHR3qZJH7DI2vjDTwXdcDnDqVJuQE/yc8c/WE7bPW9F6CJZanZZBefO/
Y3mUq7b0WJfB+85ODmyFXSbHLKfhZh+JUCG44gC38VYzVbKqNpZlNpIwzO2d
Ek/AB0RaA7rgdzNcH1bvViXnNKa1wuAXQQO1DLjUJnGdJ8y37Km5GaxWHcF1
GOYI3+d5Ea4zfT5vAN+td0zyMkf8Pypj3XkR/WyC4+4kWEumu4YO3/SoTGDb
i3qzbObUrwuIT+Wy9XzwXaOKJfNwb8+B9Ha4dWbo52XYzy2bXWc/1m+Tl3v7
ecJYXPEvbPMB1M+SJ9ftg48+3jTTD1duj/owGUEYQRN+4r0H0V+Le6S7wxZr
enysLVRJ4vqiJik4+W1KpbSlKukcaTSuOof8MJjS/xaWGG8vs4LF6ov4dayw
n795ny8Gly4umjvBb2Uf3OCBHSQERjzgXVJD3svh86X/fTgNS5bVP10Cqx14
sr8T5g8PcXoVjn7i5lXv3/CvqEvctbB/9FJJHmvks25f9zJ4XlkzWwKWLDRT
ugkX03mq9OFw5uGcK7D1y8epvvAr3QmlQDiW1hDMaqNKgjadSpWF3UNLJ/fD
LzfYZ/8LI4zlyUWBHIewnk/53U+DjwrHRxvDaWKHowJgRTOF5KPwbqaWcRfY
TqR9byjMWfr7sxWcmvcrKhk+cuuKyC5YvP/X4Tm4rL/pjzA8NaFuKPGfKjm7
VOMuE/xcf1XcXth7Quj6YChhhNQfbR2D1Ysm7S/D7y61RHbYqhKj0XvKq+D/
VXTf8VR+cRzAk0gqKiGlISOjFHKfa91zqIhEtuykrOzKiJBSKZSUyMiIsoVo
qEg06FeJkAalaYcmfp/+fL+47vM853y/389pXP8FdlgYOSFfTNUVPolEHpra
fcYWznZfs7URDtp0zNMenvaYrdsA63TWND2Aa5P83GPgn0fXuH2BX/VrsYLg
+QnOKjN2oH5u1BB3+HDFUuoOz/fZV7sOPu5xoSsYLlt2cd8qeLHtiHiBM9ZP
Z2hVaAQlxjs2vp2zk0VPX6tYvAkuji5bYAAf77uXtBK2Go5PMIRnrr+tKAEL
e1kfmueCeX+2ye9qOPLpw84txvD7247dcTCfSUqRHbzMvGTLUXh6o95RzV0s
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
/4tVjHQ=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{10., 35.}, {0.000344916490703387, 
             0.0005114983789586139}}, "Frame" -> {{True, True}, {True, True}},
             "AxesOrigin" -> {10.000000000000021`, 0.000344916490703387}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{10.000000000000021`, 0.000344916490703387},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox["\"normalised w_i\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"T (\[Degree]C)\"", HoldForm], TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{56.3193359375, 6.5615234375}, {32.34375000000003, 0.5}},
      
      ImageSize->Medium,
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.95, 0.627, 0.1425], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.455, 0.7, 0.21], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.578, 0.51, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.4, 0.64, 1.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1., 0.75, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.8, 0.4, 0.76], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.637, 0.65, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
        "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"w_i vs temperature (curve)\"", TraditionalForm],
      PlotRange->{{10., 35.}, {0.000344916490703387, 0.0005114983789586139}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {905., -123.87838159402774}, 
     ImageScaled[{0.5, 0.5}], {360., 229.87972761440972},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[247]},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{{3.958561867621653*^9, 3.9585619117885*^9}, {
   3.958562017862451*^9, 3.958562038217226*^9}, 3.958562073094179*^9, 
   3.958562121179018*^9, 3.958562162448957*^9, {3.958562248721727*^9, 
   3.958562262104046*^9}, 3.958562331178339*^9, 3.958562387938493*^9, 
   3.958562419354409*^9, 3.958562608190205*^9, 3.958562646128847*^9, 
   3.958562689527025*^9, 3.958562739167789*^9, 3.9585628718582563`*^9, 
   3.958562923635255*^9, {3.958563003507805*^9, 3.95856300849398*^9}, 
   3.95856309278899*^9},
 CellLabel->
  "Out[1330]=",ExpressionUUID->"4071c4ea-0e68-49ad-ba4b-83d140626b40"],

Cell[CellGroupData[{

Cell[BoxData["\<\"=== diagnostic summary ====================================\
\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.9585630929633427`*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"11f18673-0ed3-407d-8fdc-3b71701c3884"],

Cell[BoxData["\<\"patches (n)              : 2000\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092964422*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"01e5e982-c56c-46cd-b793-a582b792b74b"],

Cell[BoxData["\<\"env mean T (\[Degree]C)          : 22\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.95856309296518*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"2c295be0-a6b9-4261-80b5-7a0779b17c40"],

Cell[BoxData["\<\"env sd   T (\[Degree]C)          : 1\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092965686*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"cb89bdcb-7682-4010-bf53-800e0a242d6f"],

Cell[BoxData["\<\"supply per patch (R)     : 5\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.9585630929661493`*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"e83c6465-877d-4ae8-a034-f666a95ba46f"],

Cell[BoxData["\<\"total susceptibles       : 3000\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.9585630929665947`*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"6968ccb4-e7ec-4823-bf13-f0dd16b8575b"],

Cell[BoxData["\<\"peak w at T =            : 21.4\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.9585630929670343`*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"93777f0c-0520-4a0f-9369-4d2b3df8e030"],

Cell[BoxData["\<\"\[CapitalDelta]T  (T_peak - \[Mu]_T)       : -0.6\"\>"], \
"Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092967476*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"811e92e1-9551-48ca-88f7-ab7960008f4d"],

Cell[BoxData["\<\"E[R0] for this landscape : 0.63\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092967928*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"25334e55-6f92-48be-bf1a-9159c47a6a93"],

Cell[BoxData["\<\"png saved   \[RightArrow] \
/Users/colebrookson/github/theRmal-landscape/src/mathematica/../../figs/si/s-\
vs-t-variability/singleLandscape_diagnostics.png\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092968398*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"f40defaa-1348-4315-a934-1110ef40ed23"],

Cell[BoxData["\<\"===========================================================\
\"\>"], "Print",
 CellChangeTimes->{{3.958562017974859*^9, 3.958562038323107*^9}, 
   3.958562073201538*^9, 3.9585621214771137`*^9, 3.958562162611093*^9, {
   3.958562249085322*^9, 3.9585622624281073`*^9}, 3.9585623313075857`*^9, 
   3.958562388083538*^9, 3.958562419479184*^9, 3.958562608334339*^9, 
   3.95856264627501*^9, 3.9585626896699142`*^9, 3.958562739603262*^9, 
   3.95856287227715*^9, 3.958562924016026*^9, {3.9585630039156017`*^9, 
   3.958563008900511*^9}, 3.958563092968904*^9},
 CellLabel->
  "During evaluation of \
In[1310]:=",ExpressionUUID->"d248a47d-8e65-462d-a611-ec638cf58b26"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"10", "  ", "\[CapitalDelta]T", " ", 
     RowBox[{"sweep", ":", " ", 
      RowBox[{"vary", " ", "landscape", " ", "mean", " ", "temp"}]}]}], ",", 
    " ", 
    RowBox[{"record", " ", "R0", " ", "and", " ", "\[CapitalDelta]T"}]}], 
   "                ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"user", " ", "knobs"}], 
   "                                                              ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"muRange", "        ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"20", ",", " ", "30", ",", " ", "0.25"}], "]"}]}], ";"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{"env", " ", "means", " ", "to", " ", "test"}], "                ",
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"nRepsPerMu", "     ", "=", " ", "10"}], ";"}], 
   "                  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Monte", "-", 
     RowBox[{"Carlo", " ", "reps", " ", "per", " ", "\[Mu]_T"}]}], 
    "         ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"seedBase", "       ", "=", " ", "123"}], ";"}], 
   "                ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "reproducibility"}], ";", " ", 
     RowBox[{"change", "/", "omit"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "supplyConst", ",", " ", "nPatchesDiag", ",", " ", "StotalDiag", ",", " ", 
     RowBox[{"sdTLand", " ", "already", " ", "in", " ", "memory"}]}], 
    "       ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"helper", " ", "to", " ", "produce", " ", "one", " ", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]T", ",", " ", "R0"}], "}"}], " ", "for", " ", 
     "a", " ", "given", " ", "\[Mu]_T"}], "                          ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "R0forMu", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R0forMu", "[", 
      RowBox[{"mu_", ",", " ", "repID_"}], "]"}], " ", ":=", "\n", " ", 
     RowBox[{"BlockRandom", "[", "                               ", 
      RowBox[{"(*", " ", 
       RowBox[{"reproducible", " ", "RNG", " ", "per", " ", "rep"}], " ", 
       "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{"RandomSeed", "[", 
        RowBox[{"seedBase", " ", "+", " ", "repID"}], "]"}], ";", 
       "             ", 
       RowBox[{"(*", " ", 
        RowBox[{"different", " ", "seed", " ", "each", " ", "loop"}], " ", 
        "*)"}], "\n", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "temps", ",", " ", "supply", ",", " ", "wRaw", ",", " ", "wNorm", ",",
            " ", "epsVals", ",", "\n", "          ", "phiList", ",", " ", 
           "R0", ",", " ", "Tpeak", ",", " ", "deltaT"}], "}"}], ",", "\n", 
         "    ", 
         RowBox[{
          RowBox[{"temps", "   ", "=", " ", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"mu", ",", " ", "sdTLand"}], "]"}], ",", " ", 
             "nPatchesDiag"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"supply", "  ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"supplyConst", ",", " ", "nPatchesDiag"}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"wRaw", "    ", "=", " ", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SuitabilityFunc", "[", 
               RowBox[{"#1", ",", " ", "#2", ",", " ", "suitParams"}], "]"}], 
              " ", "&"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"temps", ",", " ", "supply"}], "}"}]}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"wNorm", "   ", "=", " ", 
           RowBox[{"wRaw", "/", 
            RowBox[{"Total", "[", "wRaw", "]"}]}]}], ";", "\n", "    ", 
          RowBox[{"epsVals", " ", "=", " ", 
           RowBox[{"epsMirrorLogNorm", " ", "/@", " ", "temps"}]}], ";", "\n",
           "\n", "    ", 
          RowBox[{"phiList", " ", "=", " ", 
           RowBox[{"epsVals", "*", "wNorm", "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", "wNorm"}], ")"}], "^", 
               "StotalDiag"}]}], ")"}]}]}], ";", "\n", "    ", 
          RowBox[{"R0", "      ", "=", " ", 
           RowBox[{"Total", "[", "phiList", "]"}]}], ";", "\n", "\n", "    ", 
          
          RowBox[{"Tpeak", "   ", "=", " ", 
           RowBox[{"temps", "[", 
            RowBox[{"[", 
             RowBox[{"First", "@", 
              RowBox[{"Ordering", "[", 
               RowBox[{"wNorm", ",", " ", 
                RowBox[{"-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
          "    ", 
          RowBox[{"deltaT", "  ", "=", " ", 
           RowBox[{"Tpeak", " ", "-", " ", "mu"}]}], ";", "\n", "\n", "    ", 
          
          RowBox[{"{", 
           RowBox[{"deltaT", ",", " ", "R0"}], "}"}]}]}], "\n", "  ", "]"}]}],
       "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", "sweep"}], 
    "                                                               ", "*)"}],
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"results", " ", "=", " ", 
     RowBox[{"Table", "[", "\n", "   ", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"R0forMu", "[", 
           RowBox[{"mu", ",", " ", "r"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"r", ",", " ", "nRepsPerMu"}], "}"}]}], "]"}], "]"}], ",", 
       "     ", 
       RowBox[{"(*", " ", 
        RowBox[{"mean", " ", "over", " ", "reps"}], " ", "*)"}], "\n", "   ", 
       
       RowBox[{"{", 
        RowBox[{"mu", ",", " ", "muRange"}], "}"}]}], "\n", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"deltaTvals", " ", "=", " ", 
     RowBox[{"results", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R0vals", "     ", "=", " ", 
     RowBox[{"results", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"save", " ", "numeric", " ", "table"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Export", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dataDir", ",", " ", "\"\<R0_vs_deltaT_table.mx\>\""}], "}"}],
        "]"}], ",", "\n", "  ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"muRange", ",", " ", "deltaTvals", ",", " ", "R0vals"}], 
        "}"}], "]"}], ",", " ", "\"\<MX\>\""}], "\n", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
   "(*", " ", "plot", 
    "                                                                    ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"deltaPlot", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"deltaTvals", ",", " ", "R0vals"}], "}"}], "]"}], ",", "\n", 
      "  ", 
      RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
      RowBox[{"FrameLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<\[CapitalDelta]T (T_peak \[Minus] \[Mu]_T)\>\"", ",", 
         " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "  ", 
      RowBox[{"Joined", "     ", "->", " ", "True"}], ",", "\n", "  ", 
      RowBox[{"PlotStyle", "  ", "->", " ", "Thick"}], ",", "\n", "  ", 
      RowBox[{
      "PlotLabel", "  ", "->", 
       " ", "\"\<R0 vs \[CapitalDelta]T across landscape means\>\""}], ",", 
      "\n", "  ", 
      RowBox[{"ImageSize", "  ", "->", " ", "Medium"}]}], "\n", "]"}]}], "\n",
    "\n", 
   RowBox[{
    RowBox[{"Export", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"figDir", ",", " ", "\"\<R0_vs_deltaT_sweep.png\>\""}], "}"}],
        "]"}], ",", "\n", "  ", "deltaPlot", ",", " ", "\"\<PNG\>\""}], "\n", 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{
   "Print", "[", "\"\<### \[CapitalDelta]T sweep complete \[Dash] plot & \
table saved to figDir/dataDir.\>\"", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.958563133303238*^9, 3.958563170554741*^9}},
 CellLabel->
  "In[1357]:=",ExpressionUUID->"573a614e-d948-4077-a386-5dc1b9052cc6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzXDlS10hz3f7z8l6yZXVD+w/LIjz8Vb6bB/8skro
6OcH9g4zatce9X5nH6Fcd+hL9kP7Bcud8518ntnPrOKauP3xQ/uG06KT90y+
Y+/5/Nb57VGP7Bt+Ci6brXPSXnYvh83sC4/sGTY9ezrn2Or9CR0xfsyuj+0d
AoUNLYMv7zcuWrGyd/tj+wfHX5v9XvNwP+/0c2uvqD+xb9gWtEt0y8v9Aa/U
LAqmAvl2GW5lNz/sr2T9Nefb/yf2E3ruHFx47sv+nQ/sXv1Ne2pfcH/qydLP
P/bf/Te1S/bUU/sLt5R+znvyZ//cHsGsDxrP7CesnhT9NZvhwMUU6/Pizc/s
Kzaa/F2SynRA+WOhmf2NZ/YvZnFv+zCH5QDb+Zg1ihrP7QskdTxnJbEdEKjt
LJ1Y9Nxe4VcM46RwjgONPy1Smrcj+EYfXIIUviP4hmJzOJMNX8D5VY2xN+rS
EfxfCvyPFWYj+Fx/2yIXnkPwfZMXP1zP/BLO7/jV5dNtheBf+tFpXlyF4Aus
tH7ocBrBr2M95NVh+ArOF3I2Ue1ZgeCLtedOMDJ4DeczFXQo/9uN4P+7bxvf
GvgGYd8xDp7suwi+0Oyy2TmVbxHyszcIHnqK4CvpbpaOUXkH50862POh0B7B
v72rJcAgGsG/FD/xdH4cgp9kuEKi1v2dPQCBPkIb
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzXDlS10hz3f7z8l6yZXVD+w/LIjz8Vb6bB/8skro
6OcH9g4zatce9X5nH6Fcd+hL9kP7Bcud8518ntnPrOKauP3xQ/uG06KT90y+
Y+/5/Nb57VGP7Bt+Ci6brXPSXnYvh83sC4/sGTY9ezrn2Or9CR0xfsyuj+0d
AoUNLYMv7zcuWrGyd/tj+wfHX5v9XvNwP+/0c2uvqD+xb9gWtEt0y8v9Aa/U
LAqmAvl2GW5lNz/sr2T9Nefb/yf2E3ruHFx47sv+nQ/sXv1Ne2pfcH/qydLP
P/bf/Te1S/bUU/sLt5R+znvyZ//cHsGsDxrP7CesnhT9NZvhwMUU6/Pizc/s
Kzaa/F2SynRA+WOhmf2NZ/YvZnFv+zCH5QDb+Zg1ihrP7QskdTxnJbEdEKjt
LJ1Y9Nxe4VcM46RwjgONPy1Smrcj+EYfXIIUviP4hmJzOJMNX8D5VY2xN+rS
EfxfCvyPFWYj+Fx/2yIXnkPwfZMXP1zP/BLO7/jV5dNtheBf+tFpXlyF4Aus
tH7ocBrBr2M95NVh+ArOF3I2Ue1ZgeCLtedOMDJ4DeczFXQo/9uN4P+7bxvf
GvgGYd8xDp7suwi+0Oyy2TmVbxHyszcIHnqK4CvpbpaOUXkH50862POh0B7B
v72rJcAgGsG/FD/xdH4cgp9kuEKi1v2dPQCBPkIb
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-3.0427589518069595`, 1.4405379256470496`}, {
             0.4909638978618698, 0.9490279174742631}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {0, 0.4909638978618698}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3.0427589518069595`, 1.4405379256470496`}, {
            0.4909638978618698, 0.9490279174742631}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0.4909638978618698}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[7, 360]], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzXDlS10hz3f7z8l6yZXVD+w/LIjz8Vb6bB/8skro
6OcH9g4zatce9X5nH6Fcd+hL9kP7Bcud8518ntnPrOKauP3xQ/uG06KT90y+
Y+/5/Nb57VGP7Bt+Ci6brXPSXnYvh83sC4/sGTY9ezrn2Or9CR0xfsyuj+0d
AoUNLYMv7zcuWrGyd/tj+wfHX5v9XvNwP+/0c2uvqD+xb9gWtEt0y8v9Aa/U
LAqmAvl2GW5lNz/sr2T9Nefb/yf2E3ruHFx47sv+nQ/sXv1Ne2pfcH/qydLP
P/bf/Te1S/bUU/sLt5R+znvyZ//cHsGsDxrP7CesnhT9NZvhwMUU6/Pizc/s
Kzaa/F2SynRA+WOhmf2NZ/YvZnFv+zCH5QDb+Zg1ihrP7QskdTxnJbEdEKjt
LJ1Y9Nxe4VcM46RwjgONPy1Smrcj+EYfXIIUviP4hmJzOJMNX8D5VY2xN+rS
EfxfCvyPFWYj+Fx/2yIXnkPwfZMXP1zP/BLO7/jV5dNtheBf+tFpXlyF4Aus
tH7ocBrBr2M95NVh+ArOF3I2Ue1ZgeCLtedOMDJ4DeczFXQo/9uN4P+7bxvf
GvgGYd8xDp7suwi+0Oyy2TmVbxHyszcIHnqK4CvpbpaOUXkH50862POh0B7B
v72rJcAgGsG/FD/xdH4cgp9kuEKi1v2dPQCBPkIb
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-3.0427589518069595`, 1.4405379256470496`}, {
         0.4909638978618698, 0.9490279174742631}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {0, 0.4909638978618698}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.4909638978618698},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"E[R0]\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[CapitalDelta]T (T_peak \[Minus] \[Mu]_T)\"", HoldForm], 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"R0 vs \[CapitalDelta]T across landscape means\"", TraditionalForm],
  PlotRange->{{-3.0427589518069595`, 1.4405379256470496`}, {
   0.4909638978618698, 0.9490279174742631}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.958563141097752*^9, {3.9585631711033773`*^9, 3.9585631928374157`*^9}},
 CellLabel->
  "Out[1366]=",ExpressionUUID->"0bf57b53-370b-4dcb-bbe1-c5354a07bef2"],

Cell[BoxData["\<\"### \[CapitalDelta]T sweep complete \[Dash] plot & table \
saved to figDir/dataDir.\"\>"], "Print",
 CellChangeTimes->{
  3.9585631411550493`*^9, {3.958563171155171*^9, 3.958563192909017*^9}},
 CellLabel->
  "During evaluation of \
In[1357]:=",ExpressionUUID->"2d8614d3-6f87-4fbb-bcc0-ba1676577f58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"08", "  ", "Mismatch", " ", 
     RowBox[{"experiment", ":", " ", 
      RowBox[{"fixed", " ", "\[Sigma]_T"}]}]}], ",", " ", 
    RowBox[{"sweeping", " ", "\[Mu]_T"}]}], "                        ", 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "=="}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"8.1", "  ", "experiment"}], "-", 
    RowBox[{"specific", " ", "parameters"}]}], 
   "                                     ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Topt", "        ", "=", " ", "25"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", "species", "\[CloseCurlyQuote]"}], " ", "thermal", " ", 
     "optimum"}], "                   ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmaTPC", "    ", "=", " ", "5"}], ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{"breadth", " ", "of", " ", "TPC"}], 
    "                             ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmaT_fixed", " ", "=", " ", "1"}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{"SD", " ", "of", " ", "environmental", " ", "temperature"}], 
    "            ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"muTList", "     ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", " ", "40", ",", " ", "1"}], "]"}]}], ";"}], "    ", 
   RowBox[{"(*", " ", 
    RowBox[{"env", " ", "means", " ", "to", " ", "sweep"}], 
    "                 ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"gaussian", " ", 
      RowBox[{"TPC", ":", " ", "peak"}]}], " ", "=", " ", 
     RowBox[{"1", " ", "at", " ", "Topt"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"epsTPC", " ", "=", " ", 
     RowBox[{"MakeEpsilonFunc", "[", "\n", "   ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "T", "}"}], ",", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"T", " ", "-", " ", "Topt"}], ")"}], "^", "2"}], 
            ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"sigmaTPC", "^", "2"}]}], ")"}]}], "]"}]}], "]"}], "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"8.2", "  ", 
     RowBox[{"helper", ":", " ", 
      RowBox[{
      "constant", " ", "\[CurlyEpsilon]", " ", "that", " ", "matches", " ", 
       "mean", " ", "of", " ", "gaussian", " ", "under", " ", "env", " ", 
       "distro"}]}]}], "  ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "meanTPCunderEnv", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"meanTPCunderEnv", "[", "mu_", "]"}], " ", ":=", "\n", "  ", 
     RowBox[{"NExpectation", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"epsTPC", "[", "TT", "]"}], ",", 
       "                                 ", 
       RowBox[{"(*", " ", "integrand", "   ", "*)"}], "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"TT", ",", " ", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"mu", ",", " ", "sigmaT_fixed"}], "]"}]}], "}"}]}], "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"variable", " ", "&"}], " ", "dist"}], " ", "*)"}], "\n", 
      "  ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "8.3", "  ", "compute", " ", "R0", " ", "curves", " ", "for", " ", "TPC", 
     " ", "vs", " ", "constant"}], "                              ", "*)"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "R0_mismatch", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R0_mismatch", "[", 
      RowBox[{"epsF_", ",", " ", "mu_"}], "]"}], " ", ":=", "\n", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "land", "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"land", " ", "=", " ", 
         RowBox[{"MakeLandscape", "[", 
          RowBox[{
          "nPatches", ",", " ", "mu", ",", " ", "sigmaT_fixed", ",", " ", 
           "meanS", ",", " ", "varS", ",", " ", "suitParams"}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"PhiFromLandscape", "[", 
         RowBox[{"land", ",", " ", "Stotal", ",", " ", "epsF"}], "]"}]}]}], 
      "\n", " ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", " ", "build"}]}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"vectors", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
              "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
       "--"}]}], "-"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"deltaT", "      ", "=", " ", 
     RowBox[{"muTList", " ", "-", " ", "Topt"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R0_TPC", "      ", "=", " ", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"R0_mismatch", "[", 
         RowBox[{"epsTPC", ",", " ", "#"}], "]"}], " ", "&"}], ",", " ", 
       "muTList"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"epsConstVec", " ", "=", " ", 
     RowBox[{"meanTPCunderEnv", " ", "/@", " ", "muTList"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"epsConstFun", "[", "epsc_", "]"}], " ", ":=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "T", "}"}], ",", " ", "epsc"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"R0_const", " ", "=", " ", 
     RowBox[{"MapThread", "[", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"R0_mismatch", "[", 
         RowBox[{
          RowBox[{"epsConstFun", "[", "#2", "]"}], ",", " ", "#1"}], "]"}], 
        " ", "&"}], ",", "          ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"#1", " ", "=", " ", "\[Mu]_T"}], ",", " ", 
         RowBox[{"#2", " ", "=", " ", "\[CurlyEpsilon]_const"}]}], " ", 
        "*)"}], "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"muTList", ",", " ", "epsConstVec"}], "}"}]}], "\n", "]"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"save", " ", "data", " ", "for", " ", "later"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dataDir", ",", " ", "\"\<R0_mismatch_curves.mx\>\""}], "}"}],
        "]"}], ",", "\n", "       ", 
      RowBox[{"{", 
       RowBox[{"deltaT", ",", " ", "R0_TPC", ",", " ", "R0_const"}], "}"}], ",",
       " ", "\"\<MX\>\""}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"8.4", "  ", "plotting"}], 
    "                                                           ", "*)"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "Panel"}], " ", 
     RowBox[{"A", ":", " ", 
      RowBox[{"TPC", " ", "curve", " ", "and", " ", "env", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"means", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
             "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"tpcPlot", " ", "=", " ", 
     RowBox[{"Plot", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"epsTPC", "[", "T", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", " ", "10", ",", " ", "40"}], "}"}], ",", "\n", "  ", 
       RowBox[{"PlotStyle", " ", "->", " ", "Thick"}], ",", "\n", "  ", 
       RowBox[{"AxesLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Temperature (\[Degree]C)\>\"", ",", 
          " ", "\"\<\[CurlyEpsilon]_TPC\>\""}], "}"}]}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", " ", "->", 
        " ", "\"\<Thermal performance curve & env means\>\""}]}], "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"meanLines", " ", "=", " ", 
     RowBox[{"Graphics", "[", "\n", "  ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", " ", "Dashed", ",", " ", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mu", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"mu", ",", " ", 
               RowBox[{"epsTPC", "[", "mu", "]"}]}], "}"}]}], "}"}], "]"}]}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"mu", ",", " ", "muTList"}], "}"}]}], "]"}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"tpcPanel", " ", "=", " ", 
     RowBox[{"Show", "[", 
      RowBox[{"tpcPlot", ",", " ", "meanLines", ",", " ", 
       RowBox[{"ImageSize", " ", "->", " ", "Medium"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"figDir", ",", " ", "\"\<tpc_with_means.png\>\""}], "}"}], 
       "]"}], ",", " ", "tpcPanel", ",", " ", "\"\<PNG\>\""}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "Panel"}], " ", 
     RowBox[{"B", ":", " ", 
      RowBox[{
      "R0", " ", "vs", " ", "\[CapitalDelta]T", " ", "for", " ", "TPC", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"kernel", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
             "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plotTPC", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"deltaT", ",", " ", "R0_TPC"}], "}"}], "]"}], ",", "\n", 
       "  ", 
       RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<\[CapitalDelta]T = \[Mu]_T - T_opt\>\"", ",", 
          " ", "\"\<E[R0]\>\""}], "}"}]}], ",", "\n", "  ", 
       RowBox[{"Joined", "     ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"PlotStyle", "  ", "->", " ", "Blue"}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", "  ", "->", 
        " ", "\"\<R0 vs \[CapitalDelta]T (Gaussian \[CurlyEpsilon])\>\""}]}], 
      "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "Panel"}], " ", 
     RowBox[{"C", ":", " ", 
      RowBox[{
       RowBox[{
       "R0", " ", "vs", " ", "\[CapitalDelta]T", " ", "for", " ", "constant", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"kernel", " ", "--"}], "--"}], "--"}], "--"}], 
                  "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
           "--"}], "--"}], "--"}]}], "-"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"plotConst", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"deltaT", ",", " ", "R0_const"}], "}"}], "]"}], ",", "\n", 
       "  ", 
       RowBox[{"Frame", "      ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<\[CapitalDelta]T\>\"", ",", " ", "\"\<E[R0]\>\""}], 
         "}"}]}], ",", "\n", "  ", 
       RowBox[{"Joined", "     ", "->", " ", "True"}], ",", "\n", "  ", 
       RowBox[{"PlotStyle", "  ", "->", " ", "Red"}], ",", "\n", "  ", 
       RowBox[{
       "PlotLabel", "  ", "->", 
        " ", "\"\<R0 vs \[CapitalDelta]T (Constant \[CurlyEpsilon])\>\""}]}], 
      "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"mismatchGrid", " ", "=", " ", 
     RowBox[{"GraphicsGrid", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"plotTPC", ",", " ", "plotConst"}], "}"}], "}"}], ",", "\n", 
       "  ", 
       RowBox[{"Spacings", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "1"}], "}"}]}]}], "\n", "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"figDir", ",", " ", "\"\<R0_mismatch_curves.png\>\""}], "}"}],
        "]"}], ",", "\n", "       ", "mismatchGrid", ",", 
      " ", "\"\<PNG\>\""}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<###  mismatch experiment finished \[Dash] outputs \
saved to figDir/dataDir.\>\"", "]"}], ";"}], "\n"}]}]], "Code",
 CellChangeTimes->{
  3.9585208706511583`*^9, {3.958520988041938*^9, 3.958521012934079*^9}, {
   3.95852112031844*^9, 3.9585211700534277`*^9}},
 CellLabel->
  "In[687]:=",ExpressionUUID->"19110f22-5e08-4c15-aa5b-51b232a21b37"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_TPC\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\
\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\
\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], RowBox[{\\\"Times\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"10\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"11\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"12\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"26\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"39\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 
   697, 3712, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202223441*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"0624ad08-d152-4391-bc68-fbb1fb56e77c"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_TPC\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\
\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\
\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], RowBox[{\\\"Times\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"10\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"11\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"12\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"26\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"39\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 
   697, 3713, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202274488*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"e2417bed-d585-4232-a5be-18f7f2937e41"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_TPC\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\
\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\
\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], RowBox[{\\\"Times\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"10\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"11\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Exp\\\", \\\"[\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\
\\\", \\\"12\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"26\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"39\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"T\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 
   697, 3714, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202329523*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"0c102427-8386-4c78-ab9b-85bf8ee7d2e8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"rhs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 697, 3715, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202388096*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"70453c14-f253-4bbc-b034-c65e95425aa2"],

Cell[BoxData[
 TemplateBox[{
  "NExpectation", "input", "\"Invalid input.\"", 2, 698, 3716, 
   24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202447135*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"7583b90d-5cd5-4ed5-9797-176cf46f7b16"],

Cell[BoxData[
 TemplateBox[{
  "NExpectation", "input", "\"Invalid input.\"", 2, 698, 3717, 
   24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212025039263`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"83f41504-c0dd-4e25-b2f2-2abe597bdc26"],

Cell[BoxData[
 TemplateBox[{
  "NExpectation", "input", "\"Invalid input.\"", 2, 698, 3718, 
   24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202565467*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"ee98a050-fab2-4ed9-8111-4d895f49ccca"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NExpectation\\\", \
\\\"::\\\", \\\"input\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 698, 3719, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202616447*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"450a8cfe-6a41-4a50-92c2-500ed5a049bd"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_const\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"10\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"10\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"11\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"11\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"28\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"40\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 700, 3720, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212026702337`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"8649d3b7-ffa9-4f7b-ba61-ea486301f47c"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_const\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"10\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"10\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"11\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"11\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"28\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"40\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 700, 3721, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202726791*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"f1a44ee5-4e60-4cea-9949-b42858ff0b8b"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_mismatch\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{\\\"R0_const\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"10\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"10\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"11\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"11\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"28\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"R0_mismatch\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"T$\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"50\\\"]}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"TT\\\", \\\",\\\", \
RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", RowBox[{\\\"40\\\", \\\",\\\", \
RowBox[{\\\"Pattern\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"40\\\"}], \
\\\"]\\\"}]}], \\\"}\\\"}]}]\\).\"", 2, 700, 3722, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212027839327`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"c1c69474-d4a2-48b8-a015-36e261980ba6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"rhs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 700, 3723, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521202836628*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"b2a08629-091d-4258-b351-0f9a3b96453d"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"13\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"11\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"8\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"7\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"6\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"3\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"12\\\", \\\",\\\", \\\"13\\\", \\\",\\\", \\\"14\\\", \\\",\\\", \\\"15\\\
\"}], \\\"}\\\"}], \\\",\\\", \\\"R0_TPC\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"", 2, 706, 3724, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212029664497`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"45ed83d8-adba-4e7b-8e6e-19870417e71d"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15.`16.\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"14.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"13.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"12.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"11.`16.\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"10.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"8.`16.\
\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"7.`16.\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"6.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`16.\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"4.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"3.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"2.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.`16.\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \\\",\\\", \\\"3.`16.\\\", \\\",\\\
\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\", \\\",\\\", \\\"6.`16.\\\", \
\\\",\\\", \\\"7.`16.\\\", \\\",\\\", \\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\
\", \\\",\\\", \\\"10.`16.\\\", \\\",\\\", \\\"11.`16.\\\", \\\",\\\", \
\\\"12.`16.\\\", \\\",\\\", \\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \
\\\",\\\", \\\"15.`16.\\\"}], \\\"}\\\"}], \\\",\\\", \\\"R0_TPC\\\"}], \\\"}\
\\\"}]\\) cannot be transposed.\"", 2, 706, 3725, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.95852120298531*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"1bbb18f7-81f1-4bb6-9d94-a4dbe52b1448"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15.`\\\"}], \\\",\\\
\", RowBox[{\\\"-\\\", \\\"14.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"13.`\
\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"12.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"10.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"9.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"8.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"7.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"6.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"5.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"4.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"3.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \
\\\"2.`\\\", \\\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \
\\\"8.`\\\", \\\",\\\", \\\"9.`\\\", \\\",\\\", \\\"10.`\\\", \\\",\\\", \
\\\"11.`\\\", \\\",\\\", \\\"12.`\\\", \\\",\\\", \\\"13.`\\\", \\\",\\\", \\\
\"14.`\\\", \\\",\\\", \\\"15.`\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"R0_TPC\\\"}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 706, 3726, 
   24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212029895906`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"f1c38b8c-b0c1-4038-b9ff-376c688ca1e0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 706, 3727, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212029924917`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"9472787e-231c-46a7-a508-dc03deb3ef6c"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_TPC\\\"}]\\) appears on the right-hand \
side of rule \\!\\(\\*RowBox[{RowBox[{\\\"System`ListPlotsDump`modelData\\\", \
\\\"[\\\", RowBox[{\\\"\\\\\\\"WrappedValues\\\\\\\"\\\", \\\",\\\", \
TemplateBox[List[RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[RowBox[List[\\\"-\\\", \\\"15.`16.\\\"]], \\\",\\\", RowBox[List[\
\\\"-\\\", \\\"14.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"13.`16.\\\
\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"12.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"11.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"10.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"9.`16.\\\"]], \
\\\",\\\", RowBox[List[\\\"-\\\", \\\"8.`16.\\\"]], \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"7.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"6.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"5.`16.\\\"]], \\\",\\\
\", RowBox[List[\\\"-\\\", \\\"4.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"3.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\
\"2.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"1.`16.\\\"]], \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \
\\\",\\\", \\\"3.`16.\\\", \\\",\\\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\
\", \\\",\\\", \\\"6.`16.\\\", \\\",\\\", \\\"7.`16.\\\", \\\",\\\", \
\\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\", \\\",\\\", \\\"10.`16.\\\", \
\\\",\\\", \\\"11.`16.\\\", \\\",\\\", \\\"12.`16.\\\", \\\",\\\", \
\\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \\\",\\\", \\\"15.`16.\\\"]], \\\
\"}\\\"]], \\\",\\\", \\\"R0_TPC\\\"]], \\\"}\\\"]]], \\\"Transpose\\\", \
Rule[SyntaxForm, SuperscriptBox]], \\\",\\\", \\\"Charting`Private`Tag\\\"}], \
\\\"]\\\"}], \\\"\[Rule]\\\", SuperscriptBox[RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], StyleBox[\\\"T\\\", \
Rule[FontFamily, \\\"Helvetica\\\"], Rule[SingleLetterItalics, False], \
Rule[ShowSyntaxStyles, False]], Rule[BaseStyle, \
List[Rule[ScriptSizeMultipliers, List[0.6`]], Rule[ScriptMinSize, 1]]]]}]\\).\
\"", 2, 706, 3728, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203001217*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"f200372b-2052-4747-b255-48a36a2b57bf"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*TemplateBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"-\\\", \
\\\"15.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"14.`16.\\\"]], \\\",\
\\\", RowBox[List[\\\"-\\\", \\\"13.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"12.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"11.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"10.`16.\\\"]], \\\",\
\\\", RowBox[List[\\\"-\\\", \\\"9.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\
\", \\\"8.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"7.`16.\\\"]], \
\\\",\\\", RowBox[List[\\\"-\\\", \\\"6.`16.\\\"]], \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"5.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"4.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"3.`16.\\\"]], \\\",\\\
\", RowBox[List[\\\"-\\\", \\\"2.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"1.`16.\\\"]], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \\\",\\\", \\\"3.`16.\\\", \\\",\\\
\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\", \\\",\\\", \\\"6.`16.\\\", \
\\\",\\\", \\\"7.`16.\\\", \\\",\\\", \\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\
\", \\\",\\\", \\\"10.`16.\\\", \\\",\\\", \\\"11.`16.\\\", \\\",\\\", \
\\\"12.`16.\\\", \\\",\\\", \\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \
\\\",\\\", \\\"15.`16.\\\"]], \\\"}\\\"]], \\\",\\\", \\\"R0_TPC\\\"]], \\\"}\
\\\"]]], \\\"Transpose\\\", Rule[SyntaxForm, SuperscriptBox]]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 706, 3729, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212030068617`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"b201e968-c423-41ca-a3f5-7bc78a5318e8"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"13\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"11\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"8\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"7\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"6\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"3\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"12\\\", \\\",\\\", \\\"13\\\", \\\",\\\", \\\"14\\\", \\\",\\\", \\\"15\\\
\"}], \\\"}\\\"}], \\\",\\\", \\\"R0_const\\\"}], \\\"}\\\"}]\\) cannot be \
transposed.\"", 2, 707, 3730, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203062963*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"3a86c978-ae5b-4865-9a07-ef057510f2ff"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15.`16.\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"14.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"13.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"12.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"11.`16.\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"10.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"8.`16.\
\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"7.`16.\\\"}], \\\",\\\", RowBox[{\\\
\"-\\\", \\\"6.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`16.\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"4.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"3.`16.\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"2.`16.\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.`16.\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \\\",\\\", \\\"3.`16.\\\", \\\",\\\
\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\", \\\",\\\", \\\"6.`16.\\\", \
\\\",\\\", \\\"7.`16.\\\", \\\",\\\", \\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\
\", \\\",\\\", \\\"10.`16.\\\", \\\",\\\", \\\"11.`16.\\\", \\\",\\\", \
\\\"12.`16.\\\", \\\",\\\", \\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \
\\\",\\\", \\\"15.`16.\\\"}], \\\"}\\\"}], \\\",\\\", \\\"R0_const\\\"}], \
\\\"}\\\"}]\\) cannot be transposed.\"", 2, 707, 3731, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203075307*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"d243e6ed-d36b-4d5d-a376-998bc5b54de6"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"15.`\\\"}], \\\",\\\
\", RowBox[{\\\"-\\\", \\\"14.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"13.`\
\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"12.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"10.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"9.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"8.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"7.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"6.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"5.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"4.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"3.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \
\\\"2.`\\\", \\\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \
\\\"8.`\\\", \\\",\\\", \\\"9.`\\\", \\\",\\\", \\\"10.`\\\", \\\",\\\", \
\\\"11.`\\\", \\\",\\\", \\\"12.`\\\", \\\",\\\", \\\"13.`\\\", \\\",\\\", \\\
\"14.`\\\", \\\",\\\", \\\"15.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"R0_const\\\
\"}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 707, 3732, 
   24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.9585212030808153`*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"32a13fc1-858b-4813-86a0-d9daf1626619"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 707, 3733, 24571155966216252704, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203137673*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"e67fb8d6-c3a7-4e44-bcad-9a75750321dd"],

Cell[BoxData[
 TemplateBox[{
  "Rule", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"R0_const\\\"}]\\) appears on the \
right-hand side of rule \
\\!\\(\\*RowBox[{RowBox[{\\\"System`ListPlotsDump`modelData\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"WrappedValues\\\\\\\"\\\", \\\",\\\", \
TemplateBox[List[RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[RowBox[List[\\\"-\\\", \\\"15.`16.\\\"]], \\\",\\\", RowBox[List[\
\\\"-\\\", \\\"14.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"13.`16.\\\
\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"12.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"11.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"10.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"9.`16.\\\"]], \
\\\",\\\", RowBox[List[\\\"-\\\", \\\"8.`16.\\\"]], \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"7.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"6.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"5.`16.\\\"]], \\\",\\\
\", RowBox[List[\\\"-\\\", \\\"4.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"3.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\
\"2.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"1.`16.\\\"]], \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \
\\\",\\\", \\\"3.`16.\\\", \\\",\\\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\
\", \\\",\\\", \\\"6.`16.\\\", \\\",\\\", \\\"7.`16.\\\", \\\",\\\", \
\\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\", \\\",\\\", \\\"10.`16.\\\", \
\\\",\\\", \\\"11.`16.\\\", \\\",\\\", \\\"12.`16.\\\", \\\",\\\", \
\\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \\\",\\\", \\\"15.`16.\\\"]], \\\
\"}\\\"]], \\\",\\\", \\\"R0_const\\\"]], \\\"}\\\"]]], \\\"Transpose\\\", \
Rule[SyntaxForm, SuperscriptBox]], \\\",\\\", \\\"Charting`Private`Tag\\\"}], \
\\\"]\\\"}], \\\"\[Rule]\\\", SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], StyleBox[\\\"T\\\", Rule[FontFamily, \
\\\"Helvetica\\\"], Rule[SingleLetterItalics, False], Rule[ShowSyntaxStyles, \
False]], Rule[BaseStyle, List[Rule[ScriptSizeMultipliers, List[0.6`]], \
Rule[ScriptMinSize, 1]]]]}]\\).\"", 2, 707, 3734, 24571155966216252704, 
   "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203144351*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"f3df2eff-15d7-4f62-8fce-27b4b0c61e76"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*TemplateBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"-\\\", \
\\\"15.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"14.`16.\\\"]], \\\",\
\\\", RowBox[List[\\\"-\\\", \\\"13.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"12.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"11.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"10.`16.\\\"]], \\\",\
\\\", RowBox[List[\\\"-\\\", \\\"9.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\
\", \\\"8.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"7.`16.\\\"]], \
\\\",\\\", RowBox[List[\\\"-\\\", \\\"6.`16.\\\"]], \\\",\\\", RowBox[List[\\\
\"-\\\", \\\"5.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \
\\\"4.`16.\\\"]], \\\",\\\", RowBox[List[\\\"-\\\", \\\"3.`16.\\\"]], \\\",\\\
\", RowBox[List[\\\"-\\\", \\\"2.`16.\\\"]], \\\",\\\", \
RowBox[List[\\\"-\\\", \\\"1.`16.\\\"]], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \\\",\\\", \\\"3.`16.\\\", \\\",\\\
\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\", \\\",\\\", \\\"6.`16.\\\", \
\\\",\\\", \\\"7.`16.\\\", \\\",\\\", \\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\
\", \\\",\\\", \\\"10.`16.\\\", \\\",\\\", \\\"11.`16.\\\", \\\",\\\", \
\\\"12.`16.\\\", \\\",\\\", \\\"13.`16.\\\", \\\",\\\", \\\"14.`16.\\\", \
\\\",\\\", \\\"15.`16.\\\"]], \\\"}\\\"]], \\\",\\\", \\\"R0_const\\\"]], \
\\\"}\\\"]]], \\\"Transpose\\\", Rule[SyntaxForm, SuperscriptBox]]\\) is not \
a list of numbers or pairs of numbers.\"", 2, 707, 3735, 24571155966216252704,
    "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958520902065371*^9, 3.958521020812257*^9, 
  3.9585210594112062`*^9, 3.958521203148035*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"1939fc08-2fe1-4183-ae7e-5edcb3cde42b"],

Cell[BoxData["\<\"###  mismatch experiment finished \[Dash] outputs saved to \
figDir/dataDir.\"\>"], "Print",
 CellChangeTimes->{3.95852090237147*^9, 3.958521021866005*^9, 
  3.958521060594911*^9, 3.958521203284403*^9},
 CellLabel->
  "During evaluation of \
In[687]:=",ExpressionUUID->"4679159f-8e13-4cf7-b2bc-f5ee8e61a656"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Is the gradient steeper along the temperature or resource axis?\
\>", "Subtitle",
 CellChangeTimes->{{3.9585117961823378`*^9, 
  3.958511828545377*^9}},ExpressionUUID->"9fbf4547-e807-457d-aaa2-\
63b60377835d"],

Cell["\<\
Given a fixed recovery rate \[Gamma], how does epidemic peak size vary with \
R0R0\:200b when heterogeneity is present? *TODO*\
\>", "Subtitle",
 CellChangeTimes->{{3.958511831979415*^9, 3.958511841676157*^9}, {
  3.958520434855597*^9, 
  3.958520437774857*^9}},ExpressionUUID->"46213ff4-243d-48b2-ad9b-\
0219ffde60c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EXTRA CODE", "Title",
 CellChangeTimes->{{3.9585181589226*^9, 
  3.9585181691522417`*^9}},ExpressionUUID->"526a8287-1657-4056-ac61-\
a5475af6b0eb"],

Cell[CellGroupData[{

Cell["\<\
Some code I tried to write to make the one part faster but it doesn\
\[CloseCurlyQuote]t work\
\>", "Subsection",
 CellChangeTimes->{{3.9585181730349703`*^9, 
  3.9585181899128847`*^9}},ExpressionUUID->"f318182c-26a2-4013-8a00-\
257721d67aa2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "munfl"}], "]"}], ";"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{"silence", " ", "benign", " ", "underflow", " ", "warnings"}], 
   "      ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nReplicates", "    ", "=", " ", "10"}], ";"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
     RowBox[{"\[UpArrow]", " ", "for"}], " ", "smoother", " ", "means"}]}], 
   "             ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nPatches", "       ", "=", " ", 
    RowBox[{"20", "_", "000"}]}], ";"}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"keep", " ", "high"}], " ", "\[Dash]", " ", 
    RowBox[{"code", " ", "is", " ", "vectorised", " ", "now"}]}], "     ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Stotal", "         ", "=", " ", 
    RowBox[{"15", "_", "000"}]}], ";"}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "total", " ", "susceptible", " ", "hosts", " ", "on", " ", "landscape"}], 
   "   ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", " ", 
    RowBox[{"6.1", "  ", "compiled", " ", "suitability"}], "  ", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
    "==="}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TI", "    ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<TI\>\"", "]"}]}], ",", "\n", "      ", 
       RowBox[{"\[Gamma]", "     ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<gamma\>\"", "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"Shalf", " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<Shalf\>\"", "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ma", ",", " ", "mb", ",", " ", "mc"}], "}"}], " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<mParams\>\"", "]"}]}]}], "}"}], ",", 
     "\n", "\n", "  ", 
     RowBox[{
      RowBox[{"ClearAll", "[", "SuitabilityVec", "]"}], ";", "\n", "\n", "  ", 
      RowBox[{"SuitabilityVec", " ", "=", " ", 
       RowBox[{"Compile", "[", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
           
           RowBox[{"{", 
            RowBox[{"s", ",", " ", "_Real", ",", " ", "1"}], "}"}]}], "}"}], ",",
          "                 ", 
         RowBox[{"(*", " ", 
          RowBox[{"argument", " ", "patterns"}], "  ", "*)"}], "\n", "    ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"imax", ",", " ", "m"}], "}"}], ",", 
           "                               ", 
           RowBox[{"(*", " ", "body", "               ", "*)"}], "\n", 
           "      ", 
           RowBox[{
            RowBox[{"imax", " ", "=", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"t", " ", "-", " ", "TI"}], ")"}], "^", "2"}], 
                 ")"}]}], "/", "\[Gamma]"}], "]"}]}], ";", "\n", "      ", 
            RowBox[{"m", "    ", "=", " ", 
             RowBox[{
              RowBox[{"ma", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"mb", "*", "t"}], "]"}]}], " ", "+", " ", "mc"}]}], ";",
             "\n", "      ", 
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"imax", "*", "s"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"s", " ", "+", " ", "Shalf"}], ")"}]}], " ", "-", 
               " ", "m"}]}], "]"}]}]}], "\n", "    ", "]"}], ",", "\n", 
         "    ", 
         RowBox[{"RuntimeAttributes", " ", "->", " ", 
          RowBox[{"{", "Listable", "}"}]}]}], "                 ", 
        RowBox[{"(*", " ", 
         RowBox[{"<", 
          RowBox[{
           RowBox[{"--", " ", "options"}], " ", "here"}]}], "   ", "*)"}], 
        "\n", "  ", "]"}]}], ";"}]}], 
    "                                                ", 
    RowBox[{"(*", 
     RowBox[{" ", 
      RowBox[{"<", 
       RowBox[{"--", " ", "closing"}]}], " ", "]"}], "      ", "*)"}], "\n", 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", " ", 
    RowBox[{"6.2", "  ", "compiled", " ", "\[CapitalPhi]_i", "  ", 
     RowBox[{"(", 
      RowBox[{"vectorised", ",", " ", 
       RowBox[{"small", "-", 
        RowBox[{"w", " ", "safe"}]}]}], ")"}]}], " ", "===", "===", "===", "===",
     "===", "===", "=="}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "PhiVec", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiVec", " ", "=", " ", 
    RowBox[{"Compile", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"w", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"eps", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Stot", ",", " ", "_Integer"}], "}"}]}], "}"}], ",", "\n", 
      "  ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "term", "}"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{"term", " ", "=", " ", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "w"}], ")"}], "^", "Stot"}]}]}], ";",
          "\n", "    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "term", " ", "underflows"}], ",", " ", 
           RowBox[{
            RowBox[{"switch", " ", "to", " ", "first"}], "-", 
            RowBox[{"order", " ", "approximation", " ", "S", "*", "w"}]}]}], 
          " ", "*)"}], "\n", "    ", 
         RowBox[{"term", " ", "=", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"term", " ", "<", " ", 
             RowBox[{"10.", "^", 
              RowBox[{"-", "8"}]}]}], ",", " ", 
            RowBox[{"Stot", "*", "w"}], ",", " ", "term"}], "]"}]}], ";", 
         "\n", "    ", 
         RowBox[{"eps", "*", "w", "*", "term"}]}]}], "\n", "  ", "]"}], ",", 
      "\n", "  ", 
      RowBox[{"RuntimeAttributes", " ", "->", " ", 
       RowBox[{"{", "Listable", "}"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", " ", 
    RowBox[{
     RowBox[{"6.3", "  ", "per"}], "-", 
     RowBox[{"cell", " ", "R0", " ", "evaluator"}]}], "  ", "===", "===", "===",
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "=="}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "computeR0Fast", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"computeR0Fast", "[", 
     RowBox[{"sdT_", ",", " ", "sdS_"}], "]"}], " ", ":=", "\n", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rVals", ",", " ", "temps", ",", " ", "supp", ",", " ", "wNorm", ",", 
        " ", "epsList"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"rVals", " ", "=", " ", 
        RowBox[{"Table", "[", "\n", "     ", 
         RowBox[{
          RowBox[{
           RowBox[{"temps", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanT", ",", " ", "sdT"}], "]"}], ",", " ", 
              "nPatches"}], "]"}]}], ";", "\n", "     ", 
           RowBox[{"supp", "  ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanS", ",", " ", "sdS"}], "]"}], ",", " ", 
              "nPatches"}], "]"}]}], ";", "\n", "\n", "     ", 
           RowBox[{"wNorm", " ", "=", " ", 
            RowBox[{"SuitabilityVec", "[", 
             RowBox[{"temps", ",", " ", "supp"}], "]"}]}], ";", "\n", "     ", 
           RowBox[{"wNorm", " ", "=", " ", 
            RowBox[{"wNorm", "/", 
             RowBox[{"Total", "[", "wNorm", "]"}]}]}], ";", "           ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"ensures", " ", "\[CapitalSigma]", " ", "w_i"}], " ", "=",
              " ", "1"}], " ", "*)"}], "\n", "\n", "     ", 
           RowBox[{"epsList", " ", "=", " ", 
            RowBox[{"epsFunc", " ", "/@", " ", "temps"}]}], ";", 
           "           ", 
           RowBox[{"(*", " ", 
            RowBox[{"vector", " ", "of", " ", "\[CurlyEpsilon]", 
             RowBox[{"(", "T_i", ")"}]}], "         ", "*)"}], "\n", "\n", 
           "     ", 
           RowBox[{"Total", "@", 
            RowBox[{"PhiVec", "[", 
             RowBox[{"wNorm", ",", " ", "epsList", ",", " ", "Stotal"}], 
             "]"}]}]}], ",", "\n", "     ", 
          RowBox[{"{", "nReplicates", "}"}]}], "\n", "   ", "]"}]}], ";", 
       "\n", "   ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Mean", "[", "rVals", "]"}], ",", " ", 
         RowBox[{"StandardDeviation", "[", "rVals", "]"}]}], "}"}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Print", "[", "\"\<#### Running R0 grid (compiled)\[Ellipsis]\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resultGrid", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"computeR0Fast", "[", 
       RowBox[{"sdT", ",", " ", "sdS"}], "]"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"sdT", ",", " ", "sigmaTList"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"sdS", ",", " ", "sigmaSList"}], "}"}]}], "\n", "]"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", "\"\<#### Grid complete.\>\"", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"===", " ", 
        RowBox[{"6.4", "  ", "unpack"}]}], " ", "&"}], " ", "plot"}], " ", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "==="}], "="}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"phiMeans", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"First", ",", " ", "resultGrid", ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"phiSDs", "   ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"Last", ",", "  ", "resultGrid", ",", " ", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfaceData", " ", "=", " ", 
    RowBox[{"Flatten", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sigmaTList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
          RowBox[{"sigmaSList", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
          RowBox[{"phiMeans", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "}"}], ",", "\n", 
        "         ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "sigmaTList", "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"Length", "[", "sigmaSList", "]"}]}], "}"}]}], "]"}], ",", 
      "\n", "   ", "1"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfacePlot", " ", "=", " ", 
    RowBox[{"ListPlot3D", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"surfaceData", " ", "/.", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", " ", "y_", ",", " ", "z_"}], "}"}], " ", ":>", 
        " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y", ",", " ", 
          RowBox[{"Log10", "[", 
           RowBox[{"z", " ", "+", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"-", "12"}]}]}], "]"}]}], "}"}]}]}], ",", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"log", " ", "scale"}], " ", "*)"}], "\n", "   ", 
      RowBox[{"Mesh", "          ", "->", " ", "None"}], ",", "\n", "   ", 
      RowBox[{"AxesLabel", "     ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Sigma]_T\>\"", ",", " ", "\"\<\[Sigma]_S\>\"", ",", 
         " ", "\"\<log10 E[R0]\>\""}], "}"}]}], ",", "\n", "   ", 
      RowBox[{"ColorFunction", " ", "->", " ", "\"\<TemperatureMap\>\""}], ",",
       "\n", "   ", 
      RowBox[{"PlotRange", "     ", "->", " ", "All"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"figDir", ",", " ", "\"\<phi-response-surface.png\>\""}], 
       "}"}], "]"}], ",", "\n", "       ", "surfacePlot", ",", 
     " ", "\"\<PNG\>\""}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"same", " ", "persist"}], "-", "to", "-", 
    RowBox[{"MX", " ", "block", " ", "as", " ", "before"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dataDir", ",", " ", "\"\<paramGrid.mx\>\""}], "}"}], "]"}], ",",
     "\n", "       ", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"sigmaTList", ",", " ", "sigmaSList"}], "}"}], "]"}], ",", 
    " ", "\"\<MX\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dataDir", ",", " ", "\"\<phiMeans.mx\>\""}], "}"}], "]"}], ",",
     " ", "phiMeans", ",", " ", "\"\<MX\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dataDir", ",", " ", "\"\<phiSDs.mx\>\""}], "}"}], "]"}], ",", 
    "   ", "phiSDs", ",", "   ", "\"\<MX\>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.958518193732486*^9, 
  3.958518194422935*^9}},ExpressionUUID->"a20b904f-09e2-45d2-a4bd-\
ff983e0d2baa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"SCRATCH", "!!"}], "!!"}], "!"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"10", "  ", "Outlier", " ", "check"}], " ", "&"}], " ", 
     "plot"}], "-", 
    RowBox[{"range", " ", "fixes"}]}], "                                    ",
    "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"locate", " ", "extreme", " ", "values"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"maxR0", "     ", "=", " ", 
     RowBox[{"Max", "[", "phiMeans", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"posMax", "    ", "=", " ", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"phiMeans", ",", " ", "maxR0"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]Tmax", "     ", "=", " ", 
     RowBox[{"sigmaTList", "[", 
      RowBox[{"[", 
       RowBox[{"posMax", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]Smax", "     ", "=", " ", 
     RowBox[{"sigmaSList", "[", 
      RowBox[{"[", 
       RowBox[{"posMax", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\n", "  ", 
     RowBox[{"\"\<Largest mean R0 = \>\"", ",", " ", 
      RowBox[{"ScientificForm", "[", 
       RowBox[{"maxR0", ",", " ", "3"}], "]"}], ",", "\n", 
      "  ", "\"\< at \[Sigma]_T = \>\"", ",", " ", "\[Sigma]Tmax", ",", 
      " ", "\"\<, \[Sigma]_S = \>\"", ",", " ", "\[Sigma]Smax"}], "\n", "]"}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"optional", ":", " ", 
     RowBox[{
     "quick", " ", "histogram", " ", "to", " ", "see", " ", "the", " ", 
      "magnitude", " ", "spread"}]}], " ", "*)"}], "\n", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "phiMeans", "]"}], ",", " ", "30", ",", 
     " ", "\"\<Log\>\"", ",", " ", "\n", "  ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<E[R0]\>\"", ",", " ", "\"\<count\>\""}], "}"}]}], ",", 
     " ", "\n", "  ", 
     RowBox[{
     "PlotLabel", " ", "->", 
      " ", "\"\<Distribution of mean R0 values\>\""}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"===", " ", 
       RowBox[{"PLOT", " ", "OPTION", " ", "1"}]}], " ", "\[Dash]", " ", 
      RowBox[{
       RowBox[{"clip", " ", "the", " ", "upper", " ", "tail"}], " ", "===", "===",
        "===", "===", "===", "===", "===", "===", "===", "=="}]}], " ", 
     "*)"}], "\n", 
    RowBox[{
     RowBox[{"clipLevel", "  ", "=", " ", 
      RowBox[{"Quantile", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "phiMeans", "]"}], ",", " ", "0.99"}], 
       "]"}]}], ";", "   ", 
     RowBox[{"(*", " ", 
      RowBox[{"TODO", ":", " ", 
       RowBox[{"choose", " ", "quantile"}]}], " ", "*)"}], "\n", 
     RowBox[{"surfaceDataClipped", " ", "=", " ", 
      RowBox[{"surfaceData", " ", "/.", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", " ", "y_", ",", " ", "z_"}], "}"}], " ", ":>", 
        " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y", ",", " ", 
          RowBox[{"Min", "[", 
           RowBox[{"z", ",", " ", "clipLevel"}], "]"}]}], "}"}]}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"surfacePlotClip", " ", "=", " ", 
      RowBox[{"ListPlot3D", "[", "\n", "  ", 
       RowBox[{"surfaceDataClipped", ",", "\n", "  ", 
        RowBox[{"Mesh", "         ", "->", " ", "None"}], ",", "\n", "  ", 
        RowBox[{"AxesLabel", "    ", "->", " ", 
         RowBox[{"{", 
          
          RowBox[{"\"\<\[Sigma]_T\>\"", ",", " ", "\"\<\[Sigma]_S\>\"", ",", 
           " ", "\"\<E[R0] (clipped)\>\""}], "}"}]}], ",", "\n", "  ", 
        RowBox[{"PlotRange", "    ", "->", " ", "All"}], ",", "\n", "  ", 
        RowBox[{"ColorFunction", "->", " ", "\"\<TemperatureMap\>\""}], ",", 
        "\n", "  ", 
        RowBox[{"PlotLabel", "    ", "->", " ", "\n", "   ", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Clipped at \>\"", ",", " ", 
              RowBox[{"clipLevel", " ", "//", " ", "ScientificForm"}]}], 
             "}"}], "]"}], ",", " ", "12"}], "]"}]}]}], "\n", "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"figDir", ",", " ", "\"\<phi-surface-clipped.png\>\""}], 
         "}"}], "]"}], ",", "\n", "       ", "surfacePlotClip", ",", 
       " ", "\"\<PNG\>\""}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"===", " ", 
        RowBox[{"PLOT", " ", "OPTION", " ", "2"}]}], " ", "\[Dash]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"log10", " ", "scale", " ", "on", " ", "z"}], "-", "axis"}], 
        " ", "===", "===", "===", "===", "===", "===", "===", "===", 
        "==="}]}], " ", "*)"}], "\n", 
     RowBox[{"surfaceDataLog", " ", "=", " ", 
      RowBox[{"surfaceData", " ", "/.", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", " ", "y_", ",", " ", "z_"}], "}"}], " ", ":>", 
        " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "y", ",", " ", 
          RowBox[{"Log10", "[", "z", "]"}]}], "}"}]}]}]}], ";", "\n", "\n", 
     RowBox[{"surfacePlotLog", " ", "=", " ", 
      RowBox[{"ListPlot3D", "[", "\n", "  ", 
       RowBox[{"surfaceDataLog", ",", "\n", "  ", 
        RowBox[{"Mesh", "         ", "->", " ", "None"}], ",", "\n", "  ", 
        RowBox[{"AxesLabel", "    ", "->", " ", 
         RowBox[{"{", 
          
          RowBox[{"\"\<\[Sigma]_T\>\"", ",", " ", "\"\<\[Sigma]_S\>\"", ",", 
           " ", "\"\<log10 E[R0]\>\""}], "}"}]}], ",", "\n", "  ", 
        RowBox[{"PlotRange", "    ", "->", " ", "All"}], ",", "\n", "  ", 
        RowBox[{"ColorFunction", "->", " ", "\"\<TemperatureMap\>\""}]}], 
       "\n", "]"}]}], ";", "\n", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"figDir", ",", " ", "\"\<phi-surface-log.png\>\""}], "}"}], 
        "]"}], ",", "\n", "       ", "surfacePlotLog", ",", 
       " ", "\"\<PNG\>\""}], "]"}], ";"}], "\n", "\n", 
    RowBox[{"(*", " ", 
     RowBox[{"TODO", ":", " ", 
      RowBox[{
      "decide", " ", "which", " ", "representation", " ", "you", " ", "like", 
       " ", "better", " ", "and", " ", "delete", " ", "the", " ", 
       RowBox[{"other", "."}]}]}], " ", "*)"}], "*)"}], "\n"}]}]], "Code",
 CellChangeTimes->{
  3.958519109705027*^9},ExpressionUUID->"ba540a96-5897-47bb-adb8-\
63437cb2634f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{847, 913},
WindowMargins->{{0, Automatic}, {16, Automatic}},
WindowStatusArea->"",
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9a449643-d9d3-490a-bae6-b88af4456030"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 170, 3, 96, "Title",ExpressionUUID->"a8119b86-1e32-4f11-90d2-980d7e3fd386"],
Cell[749, 27, 288, 6, 55, "Text",ExpressionUUID->"8f24a61f-381a-4788-9cc5-63471b54db08"],
Cell[CellGroupData[{
Cell[1062, 37, 168, 3, 52, "Subtitle",ExpressionUUID->"151c4968-4bf8-4657-a3f5-fc38a7260e37"],
Cell[1233, 42, 30789, 845, 2370, "Code",ExpressionUUID->"bf493423-53b4-42a8-ab97-294ee749b49a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32059, 892, 272, 7, 83, "Subtitle",ExpressionUUID->"0bd0f849-9601-4592-a5d1-37fc5cf21112"],
Cell[CellGroupData[{
Cell[32356, 903, 23456, 591, 2181, "Code",ExpressionUUID->"84abcacd-0f47-40aa-8d99-17fdaa7233a1"],
Cell[CellGroupData[{
Cell[55837, 1498, 1142, 21, 23, "Print",ExpressionUUID->"1fbed934-a7d4-45c2-b17a-fac351918106"],
Cell[56982, 1521, 22762, 394, 150, "Print",ExpressionUUID->"0a9839ac-6abf-448d-938a-f942d382414b"],
Cell[79747, 1917, 1138, 21, 23, "Print",ExpressionUUID->"fbea0f8a-eed8-4870-8203-90de08a9d8d7"],
Cell[80888, 1940, 22420, 387, 275, "Print",ExpressionUUID->"13c65944-ed07-4728-bfee-56e08c94213b"],
Cell[103311, 2329, 1151, 22, 23, "Print",ExpressionUUID->"4a9f4135-897e-4adf-bf50-aaa4192cbc6a"],
Cell[104465, 2353, 22715, 393, 126, "Print",ExpressionUUID->"1b2c9bd8-90ac-4e0e-9700-39fa8c5a96bd"],
Cell[127183, 2748, 1152, 22, 23, "Print",ExpressionUUID->"accd91f8-6c5b-4fed-afbd-f13b10e311e5"],
Cell[128338, 2772, 22711, 394, 336, "Print",ExpressionUUID->"bc147f97-2c6f-40ec-b825-3656e825006c"],
Cell[151052, 3168, 936, 15, 23, "Print",ExpressionUUID->"38e70184-485b-4938-a01d-8de2d381457c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152037, 3189, 11625, 332, 1088, "Code",ExpressionUUID->"7e753ba9-55d8-49cb-b407-1bbdc1b22f09"],
Cell[163665, 3523, 25952, 569, 70, "Output",ExpressionUUID->"9d2450d5-310a-48e7-b0d1-afae8162e6fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189666, 4098, 332, 7, 70, "Subtitle",ExpressionUUID->"1694fa81-f48d-439c-9521-dd2128202178"],
Cell[CellGroupData[{
Cell[190023, 4109, 1865, 45, 70, "Code",ExpressionUUID->"75e903df-b86b-4ffb-86c3-cb1afc73b075"],
Cell[191891, 4156, 23559, 444, 70, "Output",ExpressionUUID->"20a7b430-ab6d-4fca-a7e0-ef6604ddb659"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215487, 4605, 8595, 238, 70, "Code",ExpressionUUID->"cc75ad62-908d-4b28-90bf-eefd3b891c64"],
Cell[224085, 4845, 348, 7, 33, "Output",ExpressionUUID->"e1beeaa0-3b8a-444c-95d7-69f06cc532a5"],
Cell[224436, 4854, 46746, 823, 280, "Output",ExpressionUUID->"dc7ff575-a97a-4743-a4f7-1839042b1630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271219, 5682, 23549, 648, 1672, "Code",ExpressionUUID->"c96716a7-7a71-4064-844c-ce735547e923"],
Cell[294771, 6332, 178694, 3192, 70, "Output",ExpressionUUID->"4071c4ea-0e68-49ad-ba4b-83d140626b40"],
Cell[CellGroupData[{
Cell[473490, 9528, 680, 11, 70, "Print",ExpressionUUID->"11f18673-0ed3-407d-8fdc-3b71701c3884"],
Cell[474173, 9541, 648, 10, 23, "Print",ExpressionUUID->"01e5e982-c56c-46cd-b793-a582b792b74b"],
Cell[474824, 9553, 653, 10, 23, "Print",ExpressionUUID->"2c295be0-a6b9-4261-80b5-7a0779b17c40"],
Cell[475480, 9565, 653, 10, 23, "Print",ExpressionUUID->"cb89bdcb-7682-4010-bf53-800e0a242d6f"],
Cell[476136, 9577, 647, 10, 23, "Print",ExpressionUUID->"e83c6465-877d-4ae8-a034-f666a95ba46f"],
Cell[476786, 9589, 650, 10, 23, "Print",ExpressionUUID->"6968ccb4-e7ec-4823-bf13-f0dd16b8575b"],
Cell[477439, 9601, 650, 10, 23, "Print",ExpressionUUID->"93777f0c-0520-4a0f-9369-4d2b3df8e030"],
Cell[478092, 9613, 668, 11, 23, "Print",ExpressionUUID->"811e92e1-9551-48ca-88f7-ab7960008f4d"],
Cell[478763, 9626, 648, 10, 23, "Print",ExpressionUUID->"25334e55-6f92-48be-bf1a-9159c47a6a93"],
Cell[479414, 9638, 772, 12, 60, "Print",ExpressionUUID->"f40defaa-1348-4315-a934-1110ef40ed23"],
Cell[480189, 9652, 678, 11, 23, "Print",ExpressionUUID->"d248a47d-8e65-462d-a611-ec638cf58b26"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480916, 9669, 18674, 521, 1408, "Code",ExpressionUUID->"573a614e-d948-4077-a386-5dc1b9052cc6"],
Cell[499593, 10192, 11057, 260, 70, "Output",ExpressionUUID->"0bf57b53-370b-4dcb-bbe1-c5354a07bef2"],
Cell[510653, 10454, 317, 6, 70, "Print",ExpressionUUID->"2d8614d3-6f87-4fbb-bcc0-ba1676577f58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511007, 10465, 24641, 702, 70, "Code",ExpressionUUID->"19110f22-5e08-4c15-aa5b-51b232a21b37"],
Cell[535651, 11169, 3358, 51, 70, "Message",ExpressionUUID->"0624ad08-d152-4391-bc68-fbb1fb56e77c"],
Cell[539012, 11222, 3358, 51, 70, "Message",ExpressionUUID->"e2417bed-d585-4232-a5be-18f7f2937e41"],
Cell[542373, 11275, 3358, 51, 70, "Message",ExpressionUUID->"0c102427-8386-4c78-ab9b-85bf8ee7d2e8"],
Cell[545734, 11328, 536, 12, 70, "Message",ExpressionUUID->"70453c14-f253-4bbc-b034-c65e95425aa2"],
Cell[546273, 11342, 400, 10, 70, "Message",ExpressionUUID->"7583b90d-5cd5-4ed5-9797-176cf46f7b16"],
Cell[546676, 11354, 402, 10, 70, "Message",ExpressionUUID->"83f41504-c0dd-4e25-b2f2-2abe597bdc26"],
Cell[547081, 11366, 400, 10, 70, "Message",ExpressionUUID->"ee98a050-fab2-4ed9-8111-4d895f49ccca"],
Cell[547484, 11378, 546, 12, 70, "Message",ExpressionUUID->"450a8cfe-6a41-4a50-92c2-500ed5a049bd"],
Cell[548033, 11392, 3126, 47, 123, "Message",ExpressionUUID->"8649d3b7-ffa9-4f7b-ba61-ea486301f47c"],
Cell[551162, 11441, 3124, 47, 123, "Message",ExpressionUUID->"f1a44ee5-4e60-4cea-9949-b42858ff0b8b"],
Cell[554289, 11490, 3126, 47, 123, "Message",ExpressionUUID->"c1c69474-d4a2-48b8-a015-36e261980ba6"],
Cell[557418, 11539, 536, 12, 26, "Message",ExpressionUUID->"b2a08629-091d-4258-b351-0f9a3b96453d"],
Cell[557957, 11553, 1581, 26, 60, "Message",ExpressionUUID->"45ed83d8-adba-4e7b-8e6e-19870417e71d"],
Cell[559541, 11581, 1736, 29, 139, "Message",ExpressionUUID->"1bbb18f7-81f1-4bb6-9d94-a4dbe52b1448"],
Cell[561280, 11612, 1649, 28, 59, "Message",ExpressionUUID->"f1c38b8c-b0c1-4038-b9ff-376c688ca1e0"],
Cell[562932, 11642, 544, 12, 26, "Message",ExpressionUUID->"9472787e-231c-46a7-a508-dc03deb3ef6c"],
Cell[563479, 11656, 2594, 40, 139, "Message",ExpressionUUID->"f200372b-2052-4747-b255-48a36a2b57bf"],
Cell[566076, 11698, 1893, 31, 160, "Message",ExpressionUUID->"b201e968-c423-41ca-a3f5-7bc78a5318e8"],
Cell[567972, 11731, 1581, 26, 60, "Message",ExpressionUUID->"3a86c978-ae5b-4865-9a07-ef057510f2ff"],
Cell[569556, 11759, 1739, 29, 141, "Message",ExpressionUUID->"d243e6ed-d36b-4d5d-a376-998bc5b54de6"],
Cell[571298, 11790, 1651, 28, 60, "Message",ExpressionUUID->"32a13fc1-858b-4813-86a0-d9daf1626619"],
Cell[572952, 11820, 542, 12, 26, "Message",ExpressionUUID->"e67fb8d6-c3a7-4e44-bcad-9a75750321dd"],
Cell[573497, 11834, 2441, 39, 139, "Message",ExpressionUUID->"f3df2eff-15d7-4f62-8fce-27b4b0c61e76"],
Cell[575941, 11875, 1893, 31, 160, "Message",ExpressionUUID->"1939fc08-2fe1-4183-ae7e-5edcb3cde42b"],
Cell[577837, 11908, 326, 6, 23, "Print",ExpressionUUID->"4679159f-8e13-4cf7-b2bc-f5ee8e61a656"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[578212, 11920, 219, 5, 52, "Subtitle",ExpressionUUID->"9fbf4547-e807-457d-aaa2-63b60377835d"],
Cell[578434, 11927, 329, 7, 83, "Subtitle",ExpressionUUID->"46213ff4-243d-48b2-ad9b-0219ffde60c2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[578812, 11940, 153, 3, 96, "Title",ExpressionUUID->"526a8287-1657-4056-ac61-a5475af6b0eb"],
Cell[CellGroupData[{
Cell[578990, 11947, 253, 6, 53, "Subsection",ExpressionUUID->"f318182c-26a2-4013-8a00-257721d67aa2"],
Cell[579246, 11955, 14199, 368, 1766, "Code",ExpressionUUID->"a20b904f-09e2-45d2-a4bd-ff983e0d2baa"],
Cell[593448, 12325, 9191, 240, 1050, "Code",ExpressionUUID->"ba540a96-5897-47bb-adb8-63437cb2634f"]
}, Open  ]]
}, Open  ]]
}
]
*)

