(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    450974,       9851]
NotebookOptionsPosition[    444933,       9749]
NotebookOutlinePosition[    445326,       9765]
CellTagsIndexPosition[    445283,       9762]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Components of variability", "Title",
 CellChangeTimes->{{3.959507265077219*^9, 
  3.959507268486135*^9}},ExpressionUUID->"36f1bb4e-9c88-4efb-8377-\
b37277ff2bb8"],

Cell["\<\
This notebook explores how changing components of temperature vs supply can \
change our landscape-level variation in \[Phi] \
\>", "Text",
 CellChangeTimes->{{3.9595072775304613`*^9, 
  3.95950731507584*^9}},ExpressionUUID->"f725785b-a392-4e08-9396-\
3a7472c248f0"],

Cell[CellGroupData[{

Cell["Parameters & Helpers", "Section",
 CellChangeTimes->{{3.959507324301178*^9, 
  3.959507335109516*^9}},ExpressionUUID->"4f7a19e6-388d-4acb-9c8e-\
a248e161d63d"],

Cell["\<\
First, declare all the various helpers, including what we\[CloseCurlyQuote]re \
going to call each of the different variables, and where things are stored. \
Then we\[CloseCurlyQuote]ll write a main \[OpenCurlyDoubleQuote]simulation\
\[CloseCurlyDoubleQuote] function as well as a series of helper functions\
\>", "Text",
 CellChangeTimes->{{3.95950734091683*^9, 3.959507353870669*^9}, {
   3.959507393139538*^9, 3.95950741833715*^9}, 
   3.9597818366450853`*^9},ExpressionUUID->"5f2387a8-d553-4262-b27d-\
17f92eab6c5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"00", "  ", "Directory", " ", "helpers"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "munfl"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "suppress", " ", "underflow", " ", "warnings", " ", "that", " ", 
     "clutter", " ", "the", " ", "log"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"main", " ", "figure", " ", "directory", " ", 
     RowBox[{"(", 
      RowBox[{"relative", " ", "to", " ", "this", " ", "notebook"}], ")"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"figDir", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", "\n", "  ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<..\>\"", ",", 
        " ", "\"\<..\>\"", ",", " ", "\"\<figs\>\"", ",", " ", "\"\<si\>\"", ",",
         " ", "\"\<s-vs-t-variability\>\""}], "\n", "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", " ", 
       RowBox[{"DirectoryQ", "[", "figDir", "]"}]}], ",", "\n", "  ", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"figDir", ",", " ", 
        RowBox[{"CreateIntermediateDirectories", " ", "->", " ", "True"}]}], 
       "]"}]}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "data", " ", "directory", " ", "for", " ", "binary", " ", "objects"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataDir", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", "\n", "  ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<..\>\"", ",", 
        " ", "\"\<..\>\"", ",", " ", "\"\<outputs\>\"", ",", 
        " ", "\"\<intermediate-obs\>\"", ",", "\n", 
        "  ", "\"\<s-vs-t-variability\>\""}], "\n", "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", " ", 
       RowBox[{"DirectoryQ", "[", "dataDir", "]"}]}], ",", "\n", "  ", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"dataDir", ",", " ", 
        RowBox[{"CreateIntermediateDirectories", " ", "->", " ", "True"}]}], 
       "]"}]}], "\n", "]"}], ";"}], "\n", "  ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"01", "  ", "Environmental", " ", "response", " ", "functions"}], 
    " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "ImaxFunc", ",", " ", "RespirationFunc", ",", " ", "SuitabilityFunc"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Usage", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"ImaxFunc", "[", 
      RowBox[{"T", ",", " ", "optT", ",", " ", "respBreadth"}], "]"}], " ", 
     "returns", " ", "the", " ", "maximum", " ", "intake", " ", "rate", " ", 
     "scaled", " ", "by", " ", "a"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Gaussian", " ", "thermal", " ", "performance", " ", "curve", " ", 
     "centred", " ", "on", " ", "optT", " ", "with", " ", "breadth"}], 
    "           ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"respBreadth", "."}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"adjust", " ", 
      RowBox[{"TI", " ", "/", " ", "gamma"}], " ", "for", " ", 
      "species\:2011specific", " ", "thermal", " ", "curve"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImaxFunc", "[", 
      RowBox[{"T_", ",", " ", "optT_", ",", " ", "respBreadth_"}], "]"}], " ",
      ":=", "\n", "  ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"T", " ", "-", " ", "optT"}], ")"}], "^", "2"}], ")"}]}], "/",
        "respBreadth"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Usage", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"RespirationFunc", "[", 
      RowBox[{"T", ",", " ", 
       RowBox[{"{", 
        RowBox[{"ma", ",", " ", "mb", ",", " ", "mc"}], "}"}]}], "]"}], " ", 
     "returns", " ", "temperature\:2011dependent", " ", "metabolic"}], "   ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"maintenance", " ", "cost", " ", "m", 
      RowBox[{"(", "T", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"ma", " ", "*", " ", "exp", 
       RowBox[{"(", 
        RowBox[{"mb", " ", "*", " ", "T"}], ")"}]}], " ", "+", " ", 
      RowBox[{"mc", "."}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"TODO", ":", " ", 
      RowBox[{"refine", " ", "metabolic", " ", "parameters", " ", "ma"}]}], ",",
      " ", "mb", ",", " ", "mc"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RespirationFunc", "[", 
      RowBox[{"T_", ",", " ", 
       RowBox[{"{", 
        RowBox[{"ma_", ",", " ", "mb_", ",", " ", "mc_"}], "}"}]}], "]"}], 
     " ", ":=", "\n", "  ", 
     RowBox[{
      RowBox[{"ma", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"mb", "*", "T"}], "]"}]}], " ", "+", " ", "mc"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Documentation", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"SuitabilityFunc", "[", 
     RowBox[{"T", ",", " ", "R", ",", " ", "params"}], "]"}], " ", "*)"}], 
   "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"\:2023", " ", 
     RowBox[{"T", ":", " ", 
      RowBox[{"temperature", " ", "of", " ", "patch", " ", "i", " ", 
       RowBox[{"(", "\[Degree]C", ")"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"\:2023", " ", 
     RowBox[{"R", ":", " ", 
      RowBox[{
      "resource", " ", "availability", " ", "of", " ", "patch", " ", 
       "i"}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"\:2023", " ", 
     RowBox[{"params", ":", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<optT\>\"", " ", "->", " ", "..."}], ",", " ", 
        RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "..."}], ","}], 
       " "}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"               ", 
     RowBox[{
      RowBox[{"\"\<Rhalf\>\"", " ", "->", " ", "..."}], ",", " ", 
      RowBox[{"\"\<mParams\>\"", " ", "->", " ", 
       RowBox[{"{", "...", "}"}]}]}], " ", "|>"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Returns", " ", "the", " ", "biological", " ", "suitability", " ", "of", " ",
      "a", " ", "patch", " ", "given", " ", "thermal", " ", "intake", " ", 
     "and"}], "    ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"metabolic", " ", 
     RowBox[{"costs", ".", " ", "Negative"}], " ", "values", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "cost"}], " ", ">", " ", "gain"}], 
      ")"}], " ", "are", " ", "truncated", " ", "to", " ", "0."}], " ", 
    "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SuitabilityFunc", "[", 
      RowBox[{"T_", ",", " ", "R_", ",", " ", "params_Association"}], "]"}], 
     " ", ":=", "\n", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"imax", ",", " ", "m"}], "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"imax", " ", "=", " ", 
         RowBox[{"ImaxFunc", "[", 
          RowBox[{"T", ",", " ", 
           RowBox[{"params", "[", "\"\<optT\>\"", "]"}], ",", " ", 
           RowBox[{"params", "[", "\"\<respBreadth\>\"", "]"}]}], "]"}]}], ";",
         "\n", "   ", 
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"RespirationFunc", "[", 
          RowBox[{"T", ",", " ", 
           RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"imax", "*", "R"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"R", " ", "+", " ", 
              RowBox[{"params", "[", "\"\<Rhalf\>\"", "]"}]}], ")"}]}], " ", "-",
            " ", "m"}]}], "]"}]}]}], "\n", " ", "]"}]}], ";"}], "\n", "\n", 
   " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "01", "a", "  ", "Packed", " ", "suitability", " ", "calculation", " ", 
     RowBox[{"(", 
      RowBox[{"compiled", " ", "C", " ", "kernel"}], ")"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "SuitabilityArrayC", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Documentation", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"SuitabilityArrayC", "[", 
     RowBox[{
     "Tmat", ",", " ", "Rmat", ",", " ", "optT", ",", " ", "respB", ",", " ", 
      "Rh", ",", " ", "ma", ",", " ", "mb", ",", " ", "mc"}], "]"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
    "Fast", " ", "element\:2011wise", " ", "evaluation", " ", "of", " ", 
     "SuitabilityFunc", " ", "on", " ", "matrices", " ", "of"}], "          ",
     "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"temperatures", " ", 
     RowBox[{"(", "Tmat", ")"}], " ", "and", " ", "resources", " ", 
     RowBox[{
      RowBox[{"(", "Rmat", ")"}], ".", " ", "Implemented"}], " ", "with"}], 
    "              ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{"Compile", "[", 
      RowBox[{"...", ",", " ", 
       RowBox[{"CompilationTarget", " ", "->", " ", "\"\<C\>\""}]}], "]"}], 
     "."}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"SuitabilityArrayC", " ", "=", " ", 
     RowBox[{"Compile", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Tmat", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"Rmat", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"optT", ",", " ", "_Real"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"respB", ",", " ", "_Real"}], "}"}], ",", "\n", "   ", 
         RowBox[{"{", 
          RowBox[{"Rh", ",", " ", "_Real"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ma", ",", " ", "_Real"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"mb", ",", " ", "_Real"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"mc", ",", " ", "_Real"}], "}"}]}], "}"}], ",", "\n", "  ", 
       
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"imax", ",", " ", "m", ",", " ", "expr"}], "}"}], ",", "\n",
          "    ", 
         RowBox[{
          RowBox[{"imax", " ", "=", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Tmat", " ", "-", " ", "optT"}], ")"}], "^", "2"}], 
               ")"}]}], "/", "respB"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"m", " ", "=", " ", 
           RowBox[{
            RowBox[{"ma", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{"mb", "*", "Tmat"}], "]"}]}], " ", "+", " ", "mc"}]}], ";",
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{"exponential", " ", "metabolic", " ", "term"}], " ", 
           "*)"}], "\n", "    ", 
          RowBox[{"expr", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"imax", "*", "Rmat"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"Rmat", " ", "+", " ", "Rh"}], ")"}]}], " ", "-", " ", 
            "m"}]}], ";", "\n", "    ", 
          RowBox[{"expr", "*", 
           RowBox[{"UnitStep", "[", "expr", "]"}]}]}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{"element\:2011wise", " ", "max", 
          RowBox[{"(", 
           RowBox[{"0", ",", " ", "expr"}], ")"}]}], " ", "*)"}], "\n", "  ", 
        "]"}], ",", "\n", "  ", 
       RowBox[{"RuntimeOptions", "   ", "->", " ", "\"\<Speed\>\""}], ",", 
       "\n", "  ", 
       RowBox[{"CompilationTarget", "->", " ", "\"\<C\>\""}]}], "\n", "]"}]}],
     ";"}], "\n", " ", "\n", "  ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"02", "  ", "Compiled", " ", "\[CurlyPhi]", " ", "kernels"}], " ",
     "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"02", "  ", "Compiled", " ", "\[CurlyPhi]", " ", "kernels"}], " ",
     "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "CompiledPhiConst", ",", " ", "CompiledPhiVec", ",", " ", 
      "ComputePhiBatch"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Documentation", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"CompiledPhiConst", "[", 
     RowBox[{"w", ",", " ", "eps", ",", " ", "S"}], "]"}], " ", "*)"}], "\n", 
   
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{"\[CurlyPhi]", " ", "=", " ", 
      RowBox[{
       RowBox[{"\[CapitalSigma]_i", " ", "[", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"w_i", " ", "*", " ", "eps"}]}], ")"}], "^", "S"}]}], 
        "]"}], " ", "when", " ", "eps", " ", "is", " ", "a", " ", 
       RowBox[{"scalar", ".", " ", "probability"}], " ", "of", " ", "a", "\n",
        "     ", "disease", " ", "spreading", " ", "on", " ", "the", " ", 
       "landscape", " ", "from", " ", "cell", " ", "i"}]}], ",", " ", 
     RowBox[{
      RowBox[{"assuming", " ", "I"}], " ", "=", " ", "1"}], ",", " ", "\n", 
     "     ", 
     RowBox[{
      RowBox[{"\[Phi]i", 
       RowBox[{"(", 
        RowBox[{"k", ",", " ", 
         RowBox[{"I", " ", "=", " ", "1"}]}], ")"}], " ", "is", " ", "1"}], 
      " ", "\[Minus]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", " ", "\[Minus]", " ", 
         RowBox[{"w", 
          RowBox[{"(", "T", " ", ")"}], "\[CurlyEpsilon]", 
          RowBox[{"(", "T", " ", ")"}]}]}], ")"}], "^", "S"}]}], ",", " ", 
     RowBox[{
      RowBox[{"so", " ", "as", " ", "long", " ", "as", " ", "I"}], " ", "=", 
      " ", "1"}], ",", " ", 
     RowBox[{
     "we", " ", "set", " ", "\n", "     ", "the", " ", "number", " ", "of", " ",
       "susceptibles"}], ",", " ", "S", ",", " ", 
     RowBox[{
      RowBox[{"then", " ", "calculate", " ", "the", " ", "temperature"}], "-", 
      RowBox[{
      "dependent", " ", "\n", "     ", "probability", " ", "of", " ", 
       "spread", " ", 
       RowBox[{"(", "eps", ")"}]}]}], ",", " ", 
     RowBox[{"then", " ", "get", " ", "the", " ", "patch", " ", "weight"}], ",",
      " ", 
     RowBox[{"and", " ", 
      RowBox[{"multiply", ".", " ", "The"}], " ", "\n", "     ", "challenge", 
      " ", "here", " ", "is", " ", "speed"}], ",", " ", 
     RowBox[{
      RowBox[{"so", " ", 
       RowBox[{"there", "'"}], "s", " ", "two", " ", "versions"}], " ", "-", 
      " ", 
      RowBox[{"one", " ", "for", " ", "if", " ", "the", " ", 
       RowBox[{"env", ".", " ", "resp", ".", "\n", "     ", "is"}], " ", 
       "just", " ", "a", " ", "scalar", " ", "or", " ", "if", " ", 
       RowBox[{"it", "'"}], "s", " ", "a", " ", "function", " ", "of", " ", 
       RowBox[{"T", "."}]}]}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"CompiledPhiVec", "[", 
     RowBox[{"w", ",", " ", "epsV", ",", " ", "S"}], "]"}], " ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
    "Same", " ", "as", " ", "above", " ", "but", " ", "epsV", " ", "is", " ", 
     "a", " ", "vector", " ", "of", " ", "per\:2011patch", " ", 
     RowBox[{"probabilities", "."}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"CompiledPhiConst", " ", "=", " ", 
     RowBox[{"Compile", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"eps", ",", " ", "_Real"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"S", ",", " ", "_Integer"}], "}"}]}], "}"}], ",", "\n", 
       "  ", 
       RowBox[{"Total", "[", 
        RowBox[{"w", " ", "*", " ", 
         RowBox[{"(", " ", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{"w", "*", "eps"}]}], ")"}], "^", "S"}]}], ")"}]}], 
        "]"}], ",", "\n", "  ", 
       RowBox[{"RuntimeOptions", "   ", "->", " ", "\"\<Speed\>\""}], ",", 
       "\n", "  ", 
       RowBox[{"CompilationTarget", "->", " ", "\"\<C\>\""}]}], "\n", "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"CompiledPhiVec", " ", "=", " ", 
     RowBox[{"Compile", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"epsV", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"S", ",", " ", "_Integer"}], "}"}]}], "}"}], ",", "\n", 
       "  ", 
       RowBox[{"Total", "[", 
        RowBox[{"w", " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{"w", "*", "epsV"}]}], ")"}], "^", "S"}]}], ")"}]}], 
        "]"}], ",", "\n", "  ", 
       RowBox[{"RuntimeOptions", "   ", "->", " ", "\"\<Speed\>\""}], ",", 
       "\n", "  ", 
       RowBox[{"CompilationTarget", "->", " ", "\"\<C\>\""}]}], "\n", "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"03", "  ", "ComputePhiBatch"}], " ", "\[LongDash]", " ", 
     RowBox[{
      RowBox[{"mean", " ", "&"}], " ", "sd", " ", "over", " ", "many", " ", 
      "landscapes", " ", "without", " ", "storing"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Documentation", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"ComputePhiBatch", 
     RowBox[{"[", 
      RowBox[{
      "nPatches", ",", " ", "meanT", ",", " ", "varT", ",", " ", "meanR", ",",
        " ", "varR", ",", " ", "suitParams", ",", " ", "totalS", ","}], 
      "   "}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"                 ", 
     RowBox[{"epsF", ",", " ", "nReps", ",", " ", "batchSize"}], "]"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"it", "'"}], "s", " ", "easier", " ", "to", " ", "compute", " ",
       "a", " ", "number", " ", "of", " ", "independent", " ", "landscapes", " ",
       "that", " ", "a", " ", "single", " ", "\n", "  ", 
      RowBox[{
      "kernel", " ", "can", " ", "generate", " ", "and", " ", "evaluate", " ",
        "at", " ", "one", " ", "time"}]}], ",", " ", 
     RowBox[{
     "before", " ", "it", " ", "updates", " ", "the", " ", "running", "\n", 
      "  ", 
      RowBox[{"mean", " ", "/", " ", 
       RowBox[{"variance", ".", " ", "Soo"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "trying", " ", "to", " ", "do", " ", "that", " ", "here", " ", "by", " ",
        "batch"}], "-", 
      RowBox[{"computing", " ", "the", " ", "\n", "  ", "landscapes"}]}], ",",
      " ", 
     RowBox[{
     "which", " ", "should", " ", "simplify", " ", "the", " ", "whole", " ", 
      RowBox[{"situation", "."}], " ", "\n", "          ", "*", "   ", 
      "nPatches"}], ",", " ", "meanT", ",", " ", "varT", ",", " ", "meanR", ",",
      " ", "varR", ",", " ", 
     RowBox[{"suitParams", ":", " ", 
      RowBox[{"landscape", " ", 
       RowBox[{"cont", "."}], "\n", "          ", "*", "   ", "totalS"}]}], ",",
      " ", 
     RowBox[{"epsF", ":", " ", 
      RowBox[{"epidemiological", " ", 
       RowBox[{"cont", "."}], "\n", "          ", "*", "   ", "nReps"}]}], ",",
      " ", 
     RowBox[{"batchSize", ":", " ", 
      RowBox[{"simulation", " ", 
       RowBox[{"cont", ".", "\n", "  ", "Returns"}], " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Mean", "[", "\[CurlyPhi]", "]"}], ",", " ", 
         RowBox[{"SD", "[", "\[CurlyPhi]", "]"}]}], "}"}], " ", "based", " ", 
       "on", " ", "nReps", " ", "stochastic", " ", "landscapes"}]}], ",", " ", 
     RowBox[{"using", " ", "\n", "  ", "batches", " ", "of", " ", 
      RowBox[{"size", " ", "'"}], 
      RowBox[{"batchSize", "'"}], " ", "to", " ", "keep", " ", "RAM", " ", 
      "flat", " ", "and", " ", "to", " ", "amortise", " ", "\n", "  ", 
      "compiled\:2011kernel", " ", 
      RowBox[{"overhead", ".", " ", "Hopefully"}], " ", 
      RowBox[{"hehe", "!"}]}]}], "\n", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ComputePhiBatch", "[", 
     RowBox[{
     "nPatches_", ",", " ", "meanT_", ",", " ", "varT_", ",", " ", "meanR_", ",",
       " ", "varR_", ",", " ", "suitParams_", ",", "\n", "                ", 
      "totalS_", ",", " ", "epsF_", ",", " ", "nReps_", ",", " ", 
      "batchSize_"}], "]"}], " ", ":=", "\n", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"count", " ", "=", " ", "0"}], ",", " ", 
        RowBox[{"mean", " ", "=", " ", "0."}], ",", " ", 
        RowBox[{"M2", " ", "=", " ", "0."}], ",", " ", 
        RowBox[{"repsLeft", " ", "=", " ", "nReps"}], ",", "\n", "         ", 
        "b", ",", " ", "Tmat", ",", " ", "Rmat", ",", " ", "raw", ",", " ", 
        "w", ",", " ", "epsMat", ",", " ", "phiBatch", ",", "\n", "         ",
         "optT", ",", " ", "respB", ",", " ", "Rh", ",", " ", "ma", ",", " ", 
        "mb", ",", " ", "mc"}], "}"}], ",", "\n", "  ", "\n", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"pull", " ", "scalars", " ", "once"}], ",", " ", 
        RowBox[{"outside", " ", "the", " ", "loop"}]}], " ", "*)"}], "\n", 
      "  ", 
      RowBox[{
       RowBox[{"optT", " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<optT\>\"", "]"}]}], ";", " ", "\n", 
       "  ", 
       RowBox[{"respB", " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<respBreadth\>\"", "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"Rh", " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<Rhalf\>\"", "]"}]}], ";", " ", "\n", 
       "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ma", ",", " ", "mb", ",", " ", "mc"}], "}"}], " ", "=", " ", 
        RowBox[{"suitParams", "[", "\"\<mParams\>\"", "]"}]}], ";", "\n", 
       "  ", "\n", "  ", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"repsLeft", " ", ">", " ", "0"}], ",", "\n", "   ", 
         RowBox[{
          RowBox[{"b", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"batchSize", ",", " ", "repsLeft"}], "]"}]}], ";", "\n", 
          "   ", 
          RowBox[{"Tmat", " ", "=", " ", 
           RowBox[{"Developer`ToPackedArray", "@", "\n", "           ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanT", ",", " ", "varT"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}]}], ";", 
          "\n", "   ", 
          RowBox[{"Rmat", " ", "=", " ", 
           RowBox[{"Developer`ToPackedArray", "@", "\n", "           ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanR", ",", " ", "varR"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}]}], ";", 
          "\n", "   ", "\n", "   ", 
          RowBox[{"raw", "  ", "=", " ", 
           RowBox[{"SuitabilityArrayC", "[", 
            RowBox[{
            "Tmat", ",", " ", "Rmat", ",", " ", "optT", ",", " ", "respB", ",",
              " ", "Rh", ",", " ", "ma", ",", " ", "mb", ",", " ", "mc"}], 
            "]"}]}], ";", "\n", "   ", 
          RowBox[{"w", " ", "=", " ", 
           RowBox[{"raw", "/", 
            RowBox[{"Total", "[", 
             RowBox[{"raw", ",", " ", 
              RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"b", " ", "\[Times]", " ", "nPatches"}], ",", " ", 
            RowBox[{"rows", " ", "sum", " ", "1"}]}], " ", "*)"}], "\n", "\n",
           "   ", 
          RowBox[{"(*", " ", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}], "\n", "   ", 
          RowBox[{"phiBatch", " ", "=", "\n", "     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumericQ", "[", "epsF", "]"}], ",", "\n", "       ", 
             RowBox[{
              RowBox[{
               RowBox[{"CompiledPhiConst", "[", 
                RowBox[{"#", ",", " ", "epsF", ",", " ", "totalS"}], "]"}], 
               " ", "&"}], " ", "/@", " ", "w"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"map", " ", "row\:2011wise"}], " ", "*)"}], "\n", 
             "       ", 
             RowBox[{"(", "\n", "         ", 
              RowBox[{
               RowBox[{"epsMat", " ", "=", " ", 
                RowBox[{"epsF", "[", "Tmat", "]"}]}], ";", "\n", "         ", 
               
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"CompiledPhiVec", "[", 
                   RowBox[{"#1", ",", " ", "#2", ",", " ", "totalS"}], "]"}], 
                  " ", "&"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"w", ",", " ", "epsMat"}], "}"}]}], "]"}]}], "\n", 
              "       ", ")"}]}], "\n", "     ", "]"}]}], ";", "\n", "   ", 
          RowBox[{"(*", " ", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", "   ", 
          RowBox[{"(*", " ", 
           RowBox[{"streaming", " ", 
            RowBox[{"mean", "/", "variance"}], " ", "update", " ", 
            RowBox[{"(", "Welford", ")"}]}], " ", "*)"}], "\n", "   ", 
          RowBox[{"Do", "[", "\n", "     ", 
           RowBox[{
            RowBox[{
             RowBox[{"count", "++"}], ";", "\n", "     ", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"delta", " ", "=", " ", 
                 RowBox[{"\[CurlyPhi]", " ", "-", " ", "mean"}]}], "}"}], ",",
                "\n", "       ", 
               RowBox[{
                RowBox[{"mean", " ", "+=", " ", 
                 RowBox[{"delta", "/", "count"}]}], ";", "\n", "       ", 
                RowBox[{"M2", "   ", "+=", " ", 
                 RowBox[{"delta", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CurlyPhi]", " ", "-", " ", "mean"}], 
                   ")"}]}]}]}]}], "]"}], ";"}], "\n", "     ", ",", "\n", 
            "     ", 
            RowBox[{"{", 
             RowBox[{"\[CurlyPhi]", ",", " ", "phiBatch"}], "}"}]}], "\n", 
           "   ", "]"}], ";", "\n", "   ", "\n", "   ", 
          RowBox[{"repsLeft", " ", "-=", " ", "b"}], ";"}]}], "\n", "  ", 
        "]"}], ";", "\n", "  ", "\n", "  ", 
       RowBox[{"{", 
        RowBox[{"mean", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"count", " ", ">", " ", "1"}], ",", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"M2", "/", 
             RowBox[{"(", 
              RowBox[{"count", " ", "-", " ", "1"}], ")"}]}], "]"}], ",", " ",
            "0."}], "]"}]}], "}"}]}]}], "\n", "]"}]}], "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"04", "  ", "SimulateTransmissionDataset"}], " ", "\[LongDash]", 
     " ", 
     RowBox[{
     "flat", " ", "table", " ", "or", " ", "tensor", " ", "on", " ", 
      "request"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "SimulateTransmissionDataset", "]"}], " ", "=", 
     " ", 
     RowBox[{"{", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<Format\>\"", "   ", "->", " ", "\"\<Dataset\>\""}], ",", 
       "\n", "  ", 
       RowBox[{"\"\<BatchSize\>\"", "->", " ", "Automatic"}]}], "\n", "}"}]}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Documentation", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"SimulateTransmissionDataset", 
     RowBox[{"[", 
      RowBox[{
      "nReps", ",", " ", "nPatches", ",", " ", "totalS", ",", " ", "varRList",
        ",", " ", "varTList", ","}], "   "}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"                            ", 
     RowBox[{
     "meanRList", ",", " ", "meanTList", ",", " ", "suitParams", ",", " ", 
      "epsF", ",", " ", "opts"}], "]"}], "  ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
    "Computes", " ", "\[CurlyPhi]\:2011statistics", " ", "across", " ", "all",
      " ", "parameter", " ", 
     RowBox[{"combinations", "."}]}], "                ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{"\[Bullet]", " ", "\"\<Format\>\""}], " ", "->", " ", 
     RowBox[{"\"\<Dataset\>\"", " ", 
      RowBox[{"(", "default", ")"}], " ", "returns", " ", "a", " ", 
      "readable", " ", 
      RowBox[{"Dataset", "."}]}]}], "            ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{"\[Bullet]", " ", "\"\<Format\>\""}], " ", "->", " ", 
     RowBox[{"\"\<Tensor\>\"", " ", "returns", " ", "the", " ", "original", " ",
       "nested", " ", "tensor", " ", 
      RowBox[{"structure", "."}]}]}], "    ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "this", " ", "is", " ", "a", " ", "simulation", " ", "with", " ", "all", " ",
      "the", " ", "parameters", " ", "explicit", " ", "so", " ", "we", " ", 
     "have", " ", "a", " ", "batched", " ", "\n", "  ", "and", " ", 
     "compiled", " ", "driver", " ", "that", " ", "can", " ", "switch", " ", 
     "back", " ", "and", " ", "forth", " ", "between", " ", "an", " ", 
     "output", " ", "that", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"is", " ", "human"}], "-", "readable"}], ",", " ", 
      RowBox[{
      "and", " ", "then", " ", "a", " ", "tensor", " ", "output", " ", "that",
        " ", "is", " ", "probably", " ", "a", " ", "bit", " ", "more", " ", 
       RowBox[{"eff", "."}]}]}]}], " ", "\n", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateTransmissionDataset", "[", 
      RowBox[{
      "nReps_", ",", " ", "nPatches_", ",", " ", "totalS_", ",", " ", 
       "varRList_", ",", " ", "varTList_", ",", "\n", 
       "                            ", "meanRList_", ",", " ", "meanTList_", ",",
        " ", "suitParams_", ",", " ", "epsF_", ",", "\n", 
       "                            ", 
       RowBox[{"opts", " ", ":", " ", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"format", "    ", "=", " ", 
          RowBox[{"OptionValue", "[", "\"\<Format\>\"", "]"}]}], ",", "\n", 
         "         ", 
         RowBox[{"batchSize", " ", "=", " ", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<BatchSize\>\"", "]"}], ",", "\n",
             "                             ", 
            RowBox[{"Automatic", " ", ":>", " ", 
             RowBox[{"Min", "[", 
              RowBox[{"128", ",", " ", "nReps"}], "]"}]}]}], "]"}]}], ",", 
         "\n", "         ", "combos", ",", " ", "results"}], "}"}], ",", "\n",
        "  ", "\n", "  ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Dataset\>\"", ",", " ", "\"\<Tensor\>\""}], "}"}], 
             ",", " ", "format"}], "]"}]}], ",", "\n", "    ", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"SimulateTransmissionDataset", "::", "badfmt"}], ",", 
             " ", "format"}], "]"}], ";", "\n", "    ", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        "  ", "\n", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"all", " ", "parameter", " ", "combinations"}], " ", "*)"}], 
        "\n", "  ", 
        RowBox[{"combos", " ", "=", " ", 
         RowBox[{"Tuples", "[", 
          RowBox[{"{", 
           RowBox[{
           "varTList", ",", " ", "varRList", ",", " ", "meanTList", ",", " ", 
            "meanRList"}], "}"}], "]"}]}], ";", "\n", "  ", "\n", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"parallel", " ", "over", " ", "combos"}], " ", "\[LongDash]",
           " ", 
          RowBox[{
          "each", " ", "worker", " ", "chews", " ", "through", " ", "all", " ",
            "its", " ", "nReps"}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"results", " ", "=", " ", 
         RowBox[{"ParallelMap", "[", "\n", "    ", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "pars", "}"}], ",", "\n", "      ", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"varT", "  ", "=", " ", 
                  RowBox[{"pars", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"varR", "  ", "=", " ", 
                  RowBox[{"pars", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", 
                 "            ", 
                 RowBox[{"meanT", " ", "=", " ", 
                  RowBox[{"pars", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"meanR", " ", "=", " ", 
                  RowBox[{"pars", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], ",", "\n", 
                 "            ", 
                 RowBox[{"stats", " ", "=", " ", 
                  RowBox[{"ComputePhiBatch", "[", 
                   RowBox[{
                   "nPatches", ",", " ", "meanT", ",", " ", "varT", ",", "\n",
                     "                                    ", "meanR", ",", 
                    "  ", "varR", ",", " ", "suitParams", ",", "\n", 
                    "                                    ", "totalS", ",", 
                    " ", "epsF", ",", " ", "nReps", ",", " ", "batchSize"}], 
                   "]"}]}]}], "}"}], ",", "\n", "        ", 
               RowBox[{"AssociationThread", "[", "\n", "          ", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\"\<varT\>\"", ",", " ", "\"\<varR\>\"", ",", 
                   " ", "\"\<meanT\>\"", ",", " ", "\"\<meanR\>\"", ",", 
                   " ", "\"\<phiMean\>\"", ",", " ", "\"\<phiSD\>\""}], "}"}],
                  ",", "\n", "          ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"pars", ",", " ", "stats"}], "]"}]}], "\n", 
                "        ", "]"}]}], "\n", "      ", "]"}]}], "\n", "    ", 
            "]"}], ",", "\n", "    ", "combos"}], "\n", "  ", "]"}]}], ";", 
        "\n", "  ", "\n", "  ", 
        RowBox[{"Which", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"format", " ", "===", " ", "\"\<Dataset\>\""}], ",", "\n", 
          "      ", 
          RowBox[{"Dataset", "[", "results", "]"}], ",", "\n", "    ", "\n", 
          "    ", 
          RowBox[{"format", " ", "===", " ", "\"\<Tensor\>\""}], ",", "\n", 
          "      ", 
          RowBox[{"Print", "[", "\"\<Not currently supported\>\"", "]"}]}], 
         "\n", "  ", "]"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"05", "  ", "PlotWeightHistograms"}], " ", "\[Dash]", " ", 
     RowBox[{"visualise", " ", "w\:2011distributions"}]}], 
    "                      ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "PlotWeightHistograms", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "PlotWeightHistograms", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Bins\>\"", " ", "->", " ", "40"}], ",", " ", 
       RowBox[{"\"\<ChartStyle\>\"", " ", "->", " ", "Automatic"}], ",", "\n",
        "  ", 
       RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "400"}]}], "}"}]}], ";"}],
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Usage", "::"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", "PlotWeightHistograms", 
    RowBox[{"[", 
     RowBox[{
     "varTList", ",", " ", "varRList", ",", " ", "meanTList", ",", " ", 
      "meanRList", ","}], "            "}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"                      ", 
      RowBox[{"nPatches", ",", " ", "suitParams", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", "returns", " ", 
     "a"}], "    ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "GraphicsGrid", " ", "of", " ", "histograms", " ", "showing", " ", "the", 
     " ", "distribution", " ", "of", " ", "patch", " ", "weights", " ", 
     "w_i"}], "  ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"for", " ", "every", " ", "combination", " ", "of", " ", 
     RowBox[{"variance", "/", "mean"}], " ", "parameters", " ", 
     RowBox[{"provided", "."}]}], "               ", "*)"}], "\n", 
   RowBox[{
   "(*", "                                                                    \
        ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Options", ":"}], 
    "                                                                   ", 
    "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"\"\<Bins\>\"", "        ", "->", " ", 
     RowBox[{
     "40", "        ", "number", " ", "of", " ", "histogram", " ", "bins"}]}],
     "                      ", "*)"}], "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{"\"\<ChartStyle\>\"", "  ", "->", " ", 
     RowBox[{"Automatic", "  ", "passed", " ", "to", " ", "Histogram"}]}], 
    "                          ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"PlotWeightHistograms", "[", 
     RowBox[{
     "varTList_", ",", " ", "varRList_", ",", " ", "meanTList_", ",", " ", 
      "meanRList_", ",", "\n", "  ", "nPatches_", ",", " ", "suitParams_", ",",
       " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bins", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<Bins\>\"", "]"}]}], ",", " ", 
        RowBox[{"style", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<ChartStyle\>\"", "]"}]}], ",", "\n",
         "   ", 
        RowBox[{"imgSize", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<ImageSize\>\"", "]"}]}], ",", " ", 
        "combos", ",", " ", "makeW", ",", " ", "wTable", ",", " ", "xRange", ",",
         " ", "labels", ",", "\n", "   ", "hists"}], "}"}], ",", "\n", "\n", 
      "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "helper", " ", "to", " ", "build", " ", "one", " ", "w\:2011vector"}], 
       " ", "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"makeW", "[", 
         RowBox[{
         "varT_", ",", " ", "varR_", ",", " ", "meanT_", ",", " ", "meanR_"}],
          "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Tvec", ",", " ", "Rvec", ",", " ", "raw"}], "}"}], ",", 
          "\n", "    ", 
          RowBox[{
           RowBox[{"Tvec", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanT", ",", " ", "varT"}], "]"}], ",", " ", 
              "nPatches"}], "]"}]}], ";", "\n", "    ", 
           RowBox[{"Rvec", " ", "=", " ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanR", ",", " ", "varR"}], "]"}], ",", " ", 
              "nPatches"}], "]"}]}], ";", "\n", "    ", 
           RowBox[{"raw", " ", "=", " ", 
            RowBox[{"First", "@", 
             RowBox[{"SuitabilityArrayC", "[", 
              RowBox[{
               RowBox[{"{", "Tvec", "}"}], ",", " ", 
               RowBox[{"{", "Rvec", "}"}], ",", " ", 
               RowBox[{"suitParams", "[", "\"\<optT\>\"", "]"}], ",", "\n", 
               "      ", 
               RowBox[{"suitParams", "[", "\"\<respBreadth\>\"", "]"}], ",", 
               " ", 
               RowBox[{"suitParams", "[", "\"\<Rhalf\>\"", "]"}], ",", "\n", 
               "      ", 
               RowBox[{"Sequence", " ", "@@", " ", 
                RowBox[{"suitParams", "[", "\"\<mParams\>\"", "]"}]}]}], 
              "]"}]}]}], ";", "\n", "    ", 
           RowBox[{"raw", "/", 
            RowBox[{"Total", "[", "raw", "]"}]}]}]}], "\n", "  ", "]"}]}], ";",
        "\n", "\n", "  ", 
       RowBox[{"combos", " ", "=", " ", 
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{
          "varTList", ",", " ", "varRList", ",", " ", "meanTList", ",", " ", 
           "meanRList"}], "}"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"wTable", " ", "=", " ", 
        RowBox[{"makeW", " ", "@@@", " ", "combos"}]}], ";", 
       "                     ", 
       RowBox[{"(*", " ", 
        RowBox[{"list", " ", "of", " ", "weight", " ", "vectors"}], " ", 
        "*)"}], "\n", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "common", " ", "x\:2011axis", " ", "range", " ", "over", " ", "ALL", " ",
          "combos"}], " ", "*)"}], "\n", "  ", 
       RowBox[{"xRange", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{"Flatten", "[", "wTable", "]"}], "]"}]}], "}"}]}], ";", 
       "\n", "\n", "  ", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"Map", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "pars", "}"}], ",", " ", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<varT=\>\"", ",", " ", 
               RowBox[{"pars", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<  varR=\>\"", ",",
                " ", 
               RowBox[{"pars", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "\n", 
               "      ", "\"\<  meanT=\>\"", ",", " ", 
               RowBox[{"pars", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", " ", "\"\<  meanR=\>\"", 
               ",", " ", 
               RowBox[{"pars", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          " ", "combos"}], "]"}]}], ";", "\n", "\n", "  ", 
       RowBox[{"hists", " ", "=", " ", 
        RowBox[{"MapThread", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"wvec", ",", " ", "lab"}], "}"}], ",", "\n", "      ", 
            RowBox[{"Histogram", "[", 
             RowBox[{"wvec", ",", " ", "bins", ",", " ", 
              RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
              RowBox[{"PlotLabel", " ", "->", " ", "lab"}], ",", "\n", 
              "        ", 
              RowBox[{"ChartStyle", " ", "->", " ", "style"}], ",", " ", 
              RowBox[{"ImageSize", " ", "->", " ", "imgSize"}], ",", " ", 
              RowBox[{"PlotRange", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"xRange", ",", " ", "All"}], "}"}]}], ",", "\n", 
              "        ", 
              RowBox[{"FrameTicks", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", " ", "None"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}]}], 
                "}"}]}]}], "]"}]}], "\n", "    ", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"wTable", ",", " ", "labels"}], "}"}]}], "]"}]}], ";", 
       "\n", "\n", "  ", 
       RowBox[{"Column", "[", 
        RowBox[{"hists", ",", " ", 
         RowBox[{"Spacings", " ", "->", " ", "1"}]}], "]"}]}]}], "\n", " ", 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.959788576954195*^9, 3.959788582310307*^9}, {
   3.959788662402762*^9, 3.959788708255392*^9}, {3.959788770289283*^9, 
   3.959788784133163*^9}, {3.9597888231934633`*^9, 3.959789185208699*^9}, {
   3.9597892189943447`*^9, 3.959789334970356*^9}, {3.959789436882266*^9, 
   3.959789450134398*^9}, {3.959790144071066*^9, 3.959790157556279*^9}, {
   3.959791693696455*^9, 3.959791703906301*^9}, {3.9597917533027687`*^9, 
   3.959791757067436*^9}, 3.959792009379445*^9, {3.9597927296075983`*^9, 
   3.959792789530801*^9}, {3.9597928610148497`*^9, 3.959792873013792*^9}, 
   3.959793269981928*^9, 3.959793828803295*^9, {3.959794826281015*^9, 
   3.9597948298751097`*^9}, {3.959794965044541*^9, 3.9597949830272837`*^9}, {
   3.9599143411751823`*^9, 3.959914401290902*^9}, {3.959914560685094*^9, 
   3.9599145804032497`*^9}, 3.959915519730089*^9, {3.959915551231332*^9, 
   3.959915575628373*^9}, {3.959915700665985*^9, 3.9599157252029*^9}, {
   3.9599158196909437`*^9, 3.959915821942597*^9}, {3.9599158650350924`*^9, 
   3.959915902504163*^9}, {3.959915934756926*^9, 3.959916056399547*^9}, {
   3.9599160892500467`*^9, 3.9599161276519747`*^9}, {3.959916159740835*^9, 
   3.959916165968635*^9}, {3.959919225800004*^9, 3.959919245275571*^9}, {
   3.959926474882843*^9, 3.959926494249345*^9}, {3.959926568941703*^9, 
   3.959926590074291*^9}, 3.959926894870688*^9, {3.959928640356524*^9, 
   3.9599286471041393`*^9}, {3.959928722870358*^9, 3.9599287358881702`*^9}, {
   3.9599288034417458`*^9, 3.9599288047762527`*^9}, {3.959928856739649*^9, 
   3.9599288629883833`*^9}, 3.959928912568199*^9, 3.959929344938095*^9},
 CellLabel->
  "In[422]:=",ExpressionUUID->"81cd86a3-97f4-4b9a-a1a0-7f28129cf482"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looking at variation in R", "Section",
 CellChangeTimes->{{3.959927934387539*^9, 3.959927948099736*^9}, {
  3.959928017705119*^9, 
  3.959928017856926*^9}},ExpressionUUID->"e364d198-26f9-4974-a6b5-\
7c919445b56d"],

Cell["\<\
Start by holding everything constant and looking at how changing the \
variation in R might change what we see here\
\>", "Text",
 CellChangeTimes->{{3.959927968698654*^9, 3.959927979336134*^9}, {
  3.959928011309969*^9, 
  3.959928025937666*^9}},ExpressionUUID->"4914750d-0031-42ef-be3a-\
c259209f7515"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SimulateTransmissionDataset", "]"}], " ", "=", 
   "               ", 
   RowBox[{"(*", " ", 
    RowBox[{"<", 
     RowBox[{"\[LongDash]", " ", 
      RowBox[{"must", " ", "run"}]}]}], " ", "*)"}], "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", " ", 
     
     RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "Automatic"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "PlotWeightHistograms", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Bins\>\"", " ", "->", " ", "40"}], ",", " ", 
      RowBox[{"\"\<ChartStyle\>\"", " ", "->", " ", "Automatic"}]}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"nReps", "     ", "=", " ", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nPatches", "  ", "=", " ", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalS", "    ", "=", " ", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"varRList", "  ", "=", " ", 
   RowBox[{"{", "0.00001", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"varTList", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.00001", ",", " ", "2", ",", " ", "4", ",", " ", "5"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"meanRList", " ", "=", " ", 
   RowBox[{"{", "0.8", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanTList", " ", "=", " ", 
   RowBox[{"{", "26", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"suitParams", " ", "=", " ", 
   RowBox[{"<|", "\n", "  ", 
    RowBox[{
     RowBox[{"\"\<optT\>\"", "        ", "->", " ", "25"}], ",", "\n", "  ", 
     RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "150"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.5"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], "\n", 
    "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"epsF", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{"PlotWeightHistograms", "[", "\n", "  ", 
  RowBox[{
  "varTList", ",", " ", "varRList", ",", " ", "meanTList", ",", " ", 
   "meanRList", ",", "\n", "  ", "nPatches", ",", " ", "suitParams", ",", 
   "\n", "  ", 
   RowBox[{"\"\<Bins\>\"", " ", "->", " ", "50"}], ",", " ", 
   RowBox[{"\"\<ImageSize\>\"", " ", "->", " ", "350"}]}], "\n", 
  "]"}], "\n", 
 RowBox[{"tidy", " ", "=", " ", 
  RowBox[{"SimulateTransmissionDataset", "[", "\n", "  ", 
   RowBox[{
   "nReps", ",", " ", "nPatches", ",", " ", "totalS", ",", "\n", "  ", 
    "varRList", ",", " ", "varTList", ",", " ", "meanRList", ",", " ", 
    "meanTList", ",", "\n", "  ", "suitParams", ",", " ", "epsF", ",", "\n", 
    "  ", 
    RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", "\n", 
    "  ", 
    RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "128"}]}], "\n", "]"}], 
  " "}]}], "Code",
 CellChangeTimes->{{3.9599280289929323`*^9, 3.959928086118314*^9}, {
   3.9599286522076197`*^9, 3.9599286707182703`*^9}, 3.9599288239444113`*^9, 
   3.959929126359661*^9, {3.959929179671191*^9, 3.959929180731192*^9}, {
   3.95992921488013*^9, 3.959929215271469*^9}, {3.959929436393117*^9, 
   3.959929436776309*^9}, {3.95992949626227*^9, 3.959929518040619*^9}, {
   3.959929555380608*^9, 3.9599295560469007`*^9}, {3.959930088117144*^9, 
   3.959930088246443*^9}, {3.959930135946347*^9, 3.9599301674650097`*^9}, {
   3.959930232658362*^9, 3.959930262107293*^9}, {3.959930841485219*^9, 
   3.959930842012251*^9}, {3.959930873917316*^9, 3.959930878338234*^9}, {
   3.959930946651568*^9, 3.959930947144651*^9}, {3.959931118158143*^9, 
   3.959931122683544*^9}, 3.9599317206518717`*^9},
 CellLabel->
  "In[637]:=",ExpressionUUID->"117abd78-274e-4ab7-a873-984aa0f5581c"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageSize\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"PlotWeightHistograms\\\"}]\\).\"", 2, 648, 97, 
   24580410662458583315, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.9599288268947077`*^9, 3.95992886706394*^9, 3.959928918838821*^9, 
   3.9599291360432796`*^9, 3.95992918166208*^9, 3.959929215957244*^9, 
   3.959929352179716*^9, 3.95992943807626*^9, {3.95992949751521*^9, 
   3.959929518454241*^9}, 3.959929557019116*^9, 3.959930088634987*^9, 
   3.959930137228251*^9, 3.959930167965312*^9, {3.9599302436360483`*^9, 
   3.959930265464123*^9}, 3.959930879273775*^9, 3.9599309475712442`*^9, 
   3.9599311235051937`*^9, 3.959931721256921*^9},
 CellLabel->
  "During evaluation of \
In[637]:=",ExpressionUUID->"c3d37f77-f612-4cbd-bfa9-f256c34759fc"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageSize\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"PlotWeightHistograms\\\"}]\\).\"", 2, 648, 98, 
   24580410662458583315, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.9599288268947077`*^9, 3.95992886706394*^9, 3.959928918838821*^9, 
   3.9599291360432796`*^9, 3.95992918166208*^9, 3.959929215957244*^9, 
   3.959929352179716*^9, 3.95992943807626*^9, {3.95992949751521*^9, 
   3.959929518454241*^9}, 3.959929557019116*^9, 3.959930088634987*^9, 
   3.959930137228251*^9, 3.959930167965312*^9, {3.9599302436360483`*^9, 
   3.959930265464123*^9}, 3.959930879273775*^9, 3.9599309475712442`*^9, 
   3.9599311235051937`*^9, 3.959931721293604*^9},
 CellLabel->
  "During evaluation of \
In[637]:=",ExpressionUUID->"e8609df7-3e0d-481e-949f-e06c93775590"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"ImageSize\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"PlotWeightHistograms\\\"}]\\).\"", 2, 648, 99, 
   24580410662458583315, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.9599288268947077`*^9, 3.95992886706394*^9, 3.959928918838821*^9, 
   3.9599291360432796`*^9, 3.95992918166208*^9, 3.959929215957244*^9, 
   3.959929352179716*^9, 3.95992943807626*^9, {3.95992949751521*^9, 
   3.959929518454241*^9}, 3.959929557019116*^9, 3.959930088634987*^9, 
   3.959930137228251*^9, 3.959930167965312*^9, {3.9599302436360483`*^9, 
   3.959930265464123*^9}, 3.959930879273775*^9, 3.9599309475712442`*^9, 
   3.9599311235051937`*^9, 3.959931721344757*^9},
 CellLabel->
  "During evaluation of \
In[637]:=",ExpressionUUID->"3d66afe6-6fd6-4d5f-af5e-fad2c7c66ebd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \\\"::\
\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 648, 100, 24580410662458583315, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.9599288268947077`*^9, 3.95992886706394*^9, 3.959928918838821*^9, 
   3.9599291360432796`*^9, 3.95992918166208*^9, 3.959929215957244*^9, 
   3.959929352179716*^9, 3.95992943807626*^9, {3.95992949751521*^9, 
   3.959929518454241*^9}, 3.959929557019116*^9, 3.959930088634987*^9, 
   3.959930137228251*^9, 3.959930167965312*^9, {3.9599302436360483`*^9, 
   3.959930265464123*^9}, 3.959930879273775*^9, 3.9599309475712442`*^9, 
   3.9599311235051937`*^9, 3.959931721400289*^9},
 CellLabel->
  "During evaluation of \
In[637]:=",ExpressionUUID->"35ff0414-f856-46d8-ab95-c579fbc68d9c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.196], Thickness[
        Small]}], {}, 
        {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.196], Thickness[
         Small]}], RectangleBox[{0.00499993, 0}, {0.004999932, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999934, 0}, {0.004999936, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.00499994, 0}, {0.004999942, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999942, 0}, {0.004999944, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.004999944, 0}, {0.004999946, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.004999948, 0}, {0.00499995, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.00499995, 0}, {0.004999952, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.004999954, 0}, {0.004999956, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.004999956, 0}, {0.004999958, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999958, 0}, {0.00499996, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.00499996, 0}, {0.004999962, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999962, 0}, {0.004999964, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999964, 0}, {0.004999966, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.004999966, 0}, {0.004999968, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999968, 0}, {0.00499997, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.00499997, 0}, {0.004999972, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999972, 0}, {0.004999974, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.004999974, 0}, {0.004999976, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.004999976, 0}, {0.004999978, 5.},
          RoundingRadius->0], 
         RectangleBox[{0.004999978, 0}, {0.00499998, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.00499998, 0}, {0.004999982, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.004999982, 0}, {0.004999984, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.004999984, 0}, {0.004999986, 5.},
          RoundingRadius->0], 
         RectangleBox[{0.004999986, 0}, {0.004999988, 10.},
          RoundingRadius->0], 
         RectangleBox[{0.004999988, 0}, {0.00499999, 6.},
          RoundingRadius->0], 
         RectangleBox[{0.00499999, 0}, {0.004999992, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.004999992, 0}, {0.004999994, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.004999994, 0}, {0.004999996, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.004999996, 0}, {0.004999998, 3.},
          RoundingRadius->0], RectangleBox[{0.004999998, 0}, {0.005, 6.},
          RoundingRadius->0], RectangleBox[{0.005, 0}, {0.005000002, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.005000002, 0}, {0.005000004, 9.},
          RoundingRadius->0], 
         RectangleBox[{0.005000004, 0}, {0.005000006, 7.},
          RoundingRadius->0], 
         RectangleBox[{0.005000006, 0}, {0.005000008, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.005000008, 0}, {0.00500001, 8.},
          RoundingRadius->0], 
         RectangleBox[{0.00500001, 0}, {0.005000012, 5.},
          RoundingRadius->0], 
         RectangleBox[{0.005000012, 0}, {0.005000014, 8.},
          RoundingRadius->0], 
         RectangleBox[{0.005000014, 0}, {0.005000016, 6.},
          RoundingRadius->0], 
         RectangleBox[{0.005000016, 0}, {0.005000018, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.005000018, 0}, {0.00500002, 8.},
          RoundingRadius->0], 
         RectangleBox[{0.00500002, 0}, {0.005000022, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.005000022, 0}, {0.005000024, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.005000024, 0}, {0.005000026, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.005000026, 0}, {0.005000028, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.005000028, 0}, {0.00500003, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.00500003, 0}, {0.005000032, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.005000032, 0}, {0.005000034, 5.},
          RoundingRadius->0], 
         RectangleBox[{0.005000034, 0}, {0.005000036, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.005000036, 0}, {0.005000038, 4.},
          RoundingRadius->0], 
         RectangleBox[{0.005000038, 0}, {0.00500004, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000042, 0}, {0.005000044, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.005000044, 0}, {0.005000046, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000046, 0}, {0.005000048, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000048, 0}, {0.00500005, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.00500005, 0}, {0.005000052, 3.},
          RoundingRadius->0], 
         RectangleBox[{0.005000052, 0}, {0.005000054, 2.},
          RoundingRadius->0], 
         RectangleBox[{0.005000056, 0}, {0.005000058, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000058, 0}, {0.00500006, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.00500006, 0}, {0.005000062, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000062, 0}, {0.005000064, 1.},
          RoundingRadius->0], 
         RectangleBox[{0.005000068, 0}, {0.00500007, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.00012355604531482989`, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, None}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->350,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
        TemplateBox[{
         "\"varT=\"", "0.00001`", "\"  varR=\"", "0.00001`", "\"  meanT=\"", 
          "26", "\"  meanR=\"", "0.8`"}, "RowDefault"], TraditionalForm],
      PlotRange->{{0, 0.0061778022657414935`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.11199999999999999`], 
        Thickness[Small]}], {}, 
        {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.11199999999999999`],
          Thickness[Small]}], RectangleBox[{0.0036, 0}, {0.00362, 1.},
          RoundingRadius->0], RectangleBox[{0.00364, 0}, {0.00366, 1.},
          RoundingRadius->0], RectangleBox[{0.00382, 0}, {0.00384, 1.},
          RoundingRadius->0], RectangleBox[{0.00384, 0}, {0.00386, 1.},
          RoundingRadius->0], RectangleBox[{0.0039, 0}, {0.00392, 1.},
          RoundingRadius->0], RectangleBox[{0.00414, 0}, {0.00416, 2.},
          RoundingRadius->0], RectangleBox[{0.00418, 0}, {0.0042, 1.},
          RoundingRadius->0], RectangleBox[{0.0042, 0}, {0.00422, 1.},
          RoundingRadius->0], RectangleBox[{0.00424, 0}, {0.00426, 2.},
          RoundingRadius->0], RectangleBox[{0.00434, 0}, {0.00436, 1.},
          RoundingRadius->0], RectangleBox[{0.00438, 0}, {0.0044, 1.},
          RoundingRadius->0], RectangleBox[{0.00442, 0}, {0.00444, 1.},
          RoundingRadius->0], RectangleBox[{0.00444, 0}, {0.00446, 1.},
          RoundingRadius->0], RectangleBox[{0.00446, 0}, {0.00448, 1.},
          RoundingRadius->0], RectangleBox[{0.0045, 0}, {0.00452, 1.},
          RoundingRadius->0], RectangleBox[{0.00452, 0}, {0.00454, 3.},
          RoundingRadius->0], RectangleBox[{0.00454, 0}, {0.00456, 1.},
          RoundingRadius->0], RectangleBox[{0.0046, 0}, {0.00462, 1.},
          RoundingRadius->0], RectangleBox[{0.00462, 0}, {0.00464, 2.},
          RoundingRadius->0], RectangleBox[{0.00464, 0}, {0.00466, 1.},
          RoundingRadius->0], RectangleBox[{0.00466, 0}, {0.00468, 2.},
          RoundingRadius->0], RectangleBox[{0.0047, 0}, {0.00472, 1.},
          RoundingRadius->0], RectangleBox[{0.00472, 0}, {0.00474, 1.},
          RoundingRadius->0], RectangleBox[{0.00474, 0}, {0.00476, 1.},
          RoundingRadius->0], RectangleBox[{0.00476, 0}, {0.00478, 1.},
          RoundingRadius->0], RectangleBox[{0.00478, 0}, {0.0048, 5.},
          RoundingRadius->0], RectangleBox[{0.00482, 0}, {0.00484, 3.},
          RoundingRadius->0], RectangleBox[{0.00484, 0}, {0.00486, 1.},
          RoundingRadius->0], RectangleBox[{0.00486, 0}, {0.00488, 1.},
          RoundingRadius->0], RectangleBox[{0.00488, 0}, {0.0049, 3.},
          RoundingRadius->0], RectangleBox[{0.0049, 0}, {0.00492, 6.},
          RoundingRadius->0], RectangleBox[{0.00492, 0}, {0.00494, 2.},
          RoundingRadius->0], RectangleBox[{0.00494, 0}, {0.00496, 3.},
          RoundingRadius->0], RectangleBox[{0.00496, 0}, {0.00498, 8.},
          RoundingRadius->0], RectangleBox[{0.00498, 0}, {0.005, 3.},
          RoundingRadius->0], RectangleBox[{0.005, 0}, {0.00502, 4.},
          RoundingRadius->0], RectangleBox[{0.00502, 0}, {0.00504, 2.},
          RoundingRadius->0], RectangleBox[{0.00504, 0}, {0.00506, 5.},
          RoundingRadius->0], RectangleBox[{0.00506, 0}, {0.00508, 3.},
          RoundingRadius->0], RectangleBox[{0.00508, 0}, {0.0051, 7.},
          RoundingRadius->0], RectangleBox[{0.0051, 0}, {0.00512, 5.},
          RoundingRadius->0], RectangleBox[{0.00512, 0}, {0.00514, 8.},
          RoundingRadius->0], RectangleBox[{0.00514, 0}, {0.00516, 14.},
          RoundingRadius->0], RectangleBox[{0.00516, 0}, {0.00518, 13.},
          RoundingRadius->0], RectangleBox[{0.00518, 0}, {0.0052, 15.},
          RoundingRadius->0], RectangleBox[{0.0052, 0}, {0.00522, 21.},
          RoundingRadius->0], RectangleBox[{0.00522, 0}, {0.00524, 37.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.00012355604531482989`, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, None}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->350,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
        TemplateBox[{
         "\"varT=\"", "2", "\"  varR=\"", "0.00001`", "\"  meanT=\"", "26", 
          "\"  meanR=\"", "0.8`"}, "RowDefault"], TraditionalForm],
      PlotRange->{{0, 0.0061778022657414935`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.35], Thickness[
        Small]}], {}, 
        {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.35], Thickness[
         Small]}], RectangleBox[{0.0009, 0}, {0.001, 2.},
          RoundingRadius->0], RectangleBox[{0.0018, 0}, {0.0019, 1.},
          RoundingRadius->0], RectangleBox[{0.0023, 0}, {0.0024, 1.},
          RoundingRadius->0], RectangleBox[{0.0025, 0}, {0.0026, 1.},
          RoundingRadius->0], RectangleBox[{0.0027, 0}, {0.0028, 2.},
          RoundingRadius->0], RectangleBox[{0.003, 0}, {0.0031, 3.},
          RoundingRadius->0], RectangleBox[{0.0031, 0}, {0.0032, 1.},
          RoundingRadius->0], RectangleBox[{0.0032, 0}, {0.0033, 2.},
          RoundingRadius->0], RectangleBox[{0.0034, 0}, {0.0035, 2.},
          RoundingRadius->0], RectangleBox[{0.0036, 0}, {0.0037, 1.},
          RoundingRadius->0], RectangleBox[{0.0037, 0}, {0.0038, 1.},
          RoundingRadius->0], RectangleBox[{0.0039, 0}, {0.004, 1.},
          RoundingRadius->0], RectangleBox[{0.004, 0}, {0.0041, 3.},
          RoundingRadius->0], RectangleBox[{0.0041, 0}, {0.0042, 3.},
          RoundingRadius->0], RectangleBox[{0.0042, 0}, {0.0043, 2.},
          RoundingRadius->0], RectangleBox[{0.0043, 0}, {0.0044, 6.},
          RoundingRadius->0], RectangleBox[{0.0044, 0}, {0.0045, 3.},
          RoundingRadius->0], RectangleBox[{0.0045, 0}, {0.0046, 6.},
          RoundingRadius->0], RectangleBox[{0.0046, 0}, {0.0047, 7.},
          RoundingRadius->0], RectangleBox[{0.0047, 0}, {0.0048, 3.},
          RoundingRadius->0], RectangleBox[{0.0048, 0}, {0.0049, 6.},
          RoundingRadius->0], RectangleBox[{0.0049, 0}, {0.005, 6.},
          RoundingRadius->0], RectangleBox[{0.005, 0}, {0.0051, 11.},
          RoundingRadius->0], RectangleBox[{0.0051, 0}, {0.0052, 14.},
          RoundingRadius->0], RectangleBox[{0.0052, 0}, {0.0053, 16.},
          RoundingRadius->0], RectangleBox[{0.0053, 0}, {0.0054, 18.},
          RoundingRadius->0], RectangleBox[{0.0054, 0}, {0.0055, 9.},
          RoundingRadius->0], RectangleBox[{0.0055, 0}, {0.0056, 31.},
          RoundingRadius->0], RectangleBox[{0.0056, 0}, {0.0057, 38.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.00012355604531482989`, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, None}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->350,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
        TemplateBox[{
         "\"varT=\"", "4", "\"  varR=\"", "0.00001`", "\"  meanT=\"", "26", 
          "\"  meanR=\"", "0.8`"}, "RowDefault"], TraditionalForm],
      PlotRange->{{0, 0.0061778022657414935`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.252], Thickness[
        Small]}], {}, 
        {RGBColor[1., 0.79375, 0.25], EdgeForm[{Opacity[0.252], Thickness[
         Small]}], RectangleBox[{0., 0}, {0.0001, 1.},
          RoundingRadius->0], RectangleBox[{0.0003, 0}, {0.0004, 1.},
          RoundingRadius->0], RectangleBox[{0.0005, 0}, {0.0006, 1.},
          RoundingRadius->0], RectangleBox[{0.0007, 0}, {0.0008, 1.},
          RoundingRadius->0], RectangleBox[{0.0009, 0}, {0.001, 1.},
          RoundingRadius->0], RectangleBox[{0.001, 0}, {0.0011, 1.},
          RoundingRadius->0], RectangleBox[{0.0013, 0}, {0.0014, 2.},
          RoundingRadius->0], RectangleBox[{0.0014, 0}, {0.0015, 1.},
          RoundingRadius->0], RectangleBox[{0.0015, 0}, {0.0016, 1.},
          RoundingRadius->0], RectangleBox[{0.0016, 0}, {0.0017, 1.},
          RoundingRadius->0], RectangleBox[{0.0019, 0}, {0.002, 1.},
          RoundingRadius->0], RectangleBox[{0.002, 0}, {0.0021, 1.},
          RoundingRadius->0], RectangleBox[{0.0021, 0}, {0.0022, 1.},
          RoundingRadius->0], RectangleBox[{0.0022, 0}, {0.0023, 2.},
          RoundingRadius->0], RectangleBox[{0.0024, 0}, {0.0025, 1.},
          RoundingRadius->0], RectangleBox[{0.0026, 0}, {0.0027, 2.},
          RoundingRadius->0], RectangleBox[{0.0027, 0}, {0.0028, 1.},
          RoundingRadius->0], RectangleBox[{0.0028, 0}, {0.0029, 1.},
          RoundingRadius->0], RectangleBox[{0.0029, 0}, {0.003, 1.},
          RoundingRadius->0], RectangleBox[{0.0031, 0}, {0.0032, 3.},
          RoundingRadius->0], RectangleBox[{0.0033, 0}, {0.0034, 2.},
          RoundingRadius->0], RectangleBox[{0.0034, 0}, {0.0035, 5.},
          RoundingRadius->0], RectangleBox[{0.0035, 0}, {0.0036, 2.},
          RoundingRadius->0], RectangleBox[{0.0036, 0}, {0.0037, 1.},
          RoundingRadius->0], RectangleBox[{0.0037, 0}, {0.0038, 1.},
          RoundingRadius->0], RectangleBox[{0.0038, 0}, {0.0039, 1.},
          RoundingRadius->0], RectangleBox[{0.0039, 0}, {0.004, 5.},
          RoundingRadius->0], RectangleBox[{0.0041, 0}, {0.0042, 2.},
          RoundingRadius->0], RectangleBox[{0.0042, 0}, {0.0043, 3.},
          RoundingRadius->0], RectangleBox[{0.0043, 0}, {0.0044, 2.},
          RoundingRadius->0], RectangleBox[{0.0044, 0}, {0.0045, 2.},
          RoundingRadius->0], RectangleBox[{0.0045, 0}, {0.0046, 4.},
          RoundingRadius->0], RectangleBox[{0.0046, 0}, {0.0047, 1.},
          RoundingRadius->0], RectangleBox[{0.0047, 0}, {0.0048, 3.},
          RoundingRadius->0], RectangleBox[{0.0048, 0}, {0.0049, 2.},
          RoundingRadius->0], RectangleBox[{0.0049, 0}, {0.005, 6.},
          RoundingRadius->0], RectangleBox[{0.005, 0}, {0.0051, 6.},
          RoundingRadius->0], RectangleBox[{0.0051, 0}, {0.0052, 2.},
          RoundingRadius->0], RectangleBox[{0.0052, 0}, {0.0053, 9.},
          RoundingRadius->0], RectangleBox[{0.0053, 0}, {0.0054, 7.},
          RoundingRadius->0], RectangleBox[{0.0054, 0}, {0.0055, 9.},
          RoundingRadius->0], RectangleBox[{0.0055, 0}, {0.0056, 5.},
          RoundingRadius->0], RectangleBox[{0.0056, 0}, {0.0057, 5.},
          RoundingRadius->0], RectangleBox[{0.0057, 0}, {0.0058, 3.},
          RoundingRadius->0], RectangleBox[{0.0058, 0}, {0.0059, 8.},
          RoundingRadius->0], RectangleBox[{0.0059, 0}, {0.006, 16.},
          RoundingRadius->0], RectangleBox[{0.006, 0}, {0.0061, 23.},
          RoundingRadius->0], RectangleBox[{0.0061, 0}, {0.0062, 40.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.00012355604531482989`, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, None}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->350,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
        TemplateBox[{
         "\"varT=\"", "5", "\"  varR=\"", "0.00001`", "\"  meanT=\"", "26", 
          "\"  meanR=\"", "0.8`"}, "RowDefault"], TraditionalForm],
      PlotRange->{{0, 0.0061778022657414935`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.959928087337874*^9, 3.95992867200961*^9, 3.959928740392723*^9, {
   3.959928810449601*^9, 3.959928827162622*^9}, 3.959928867316414*^9, 
   3.959928919103527*^9, 3.959929136303767*^9, 3.9599291819146338`*^9, 
   3.9599292162277403`*^9, 3.959929352455064*^9, 3.9599294383451433`*^9, {
   3.959929497780064*^9, 3.9599295187170143`*^9}, 3.95992955726824*^9, 
   3.959930088886094*^9, 3.9599301374825974`*^9, 3.95993016821336*^9, {
   3.9599302438282967`*^9, 3.95993026565724*^9}, 3.959930879527535*^9, 
   3.959930947819538*^9, 3.9599311237949677`*^9, 3.9599317215132093`*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"39d64b91-220f-40bd-a2bf-89cc6468f5ec"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "varT" -> 0.00001, "varR" -> 0.00001, "meanT" -> 26, "meanR" -> 0.8, 
        "phiMean" -> 0.39869216349481773`, "phiSD" -> 
        0.0007883763873940305|>, <|
       "varT" -> 2, "varR" -> 0.00001, "meanT" -> 26, "meanR" -> 0.8, 
        "phiMean" -> 0.3987600139310595, "phiSD" -> 0.0008079218555110807|>, <|
       "varT" -> 4, "varR" -> 0.00001, "meanT" -> 26, "meanR" -> 0.8, 
        "phiMean" -> 0.39877190535394325`, "phiSD" -> 
        0.0008262965573480685|>, <|
       "varT" -> 5, "varR" -> 0.00001, "meanT" -> 26, "meanR" -> 0.8, 
        "phiMean" -> 0.39873292140815664`, "phiSD" -> 
        0.0007757004903174596|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 4, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varT", 
                  Style[
                  "varT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varR", 
                  Style[
                  "varR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanT", 
                  Style[
                  "meanT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanR", 
                  Style[
                  "meanR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiMean", 
                  Style[
                  "phiMean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiMean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiMean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiSD", 
                  Style[
                  "phiSD", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiSD"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiSD"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.398692"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000788376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.39876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000807922"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.398772"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000826297"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.398733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0007757"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{402.834, {64.12863159179688, 69.86056518554688}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{402.834, {64.12863159179688, 69.86056518554688}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.959928087337874*^9, 3.95992867200961*^9, 3.959928740392723*^9, {
   3.959928810449601*^9, 3.959928827162622*^9}, 3.959928867316414*^9, 
   3.959928919103527*^9, 3.959929136303767*^9, 3.9599291819146338`*^9, 
   3.9599292162277403`*^9, 3.959929352455064*^9, 3.9599294383451433`*^9, {
   3.959929497780064*^9, 3.9599295187170143`*^9}, 3.95992955726824*^9, 
   3.959930088886094*^9, 3.9599301374825974`*^9, 3.95993016821336*^9, {
   3.9599302438282967`*^9, 3.95993026565724*^9}, 3.959930879527535*^9, 
   3.959930947819538*^9, 3.9599311237949677`*^9, 3.9599317215681267`*^9},
 CellLabel->
  "Out[649]=",ExpressionUUID->"07df748f-bafb-4c30-9a75-95f3469c66f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9599281811939783`*^9, 
  3.9599281854756737`*^9}},ExpressionUUID->"bd5dabb4-4fbd-4cc0-9eca-\
20c7d7b2013f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing area", "Section",
 CellChangeTimes->{{3.959919489472266*^9, 
  3.9599194981198463`*^9}},ExpressionUUID->"74a75ecd-28dd-4dbe-ace4-\
020537f011f5"],

Cell["Here, I\[CloseCurlyQuote]m just going through some peace of mind tests. \
", "Text",
 CellChangeTimes->{{3.959919502778598*^9, 
  3.959919527004204*^9}},ExpressionUUID->"8a4c6e83-7b57-476e-985d-\
58b91eac4616"],

Cell[CellGroupData[{

Cell["First, test that the suitability functions actually work ", "Subsection",
 CellChangeTimes->{{3.959919979587392*^9, 
  3.959919993030608*^9}},ExpressionUUID->"3a76a34e-b437-48c9-854d-\
98a60252592a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "testing", " ", "that", " ", "the", " ", "two", " ", "suitability", " ", 
    "functions", " ", "perform", " ", "the", " ", "same"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"-", " ", "1."}]}], " ", "set", " ", "up", " ", "a", " ", "toy", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"landscape", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
             "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
     "--"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"nRows", "   ", "=", " ", "3"}], ";"}], "              ", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "replicated", " ", "landscapes"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"nPatches", " ", "=", " ", "8"}], ";"}], "             ", 
   RowBox[{"(*", " ", 
    RowBox[{"cells", " ", "per", " ", "landscape"}], " ", "*)"}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"Tmat", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"20", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"nRows", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rmat", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", " ", "0.3"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"nRows", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"params", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<optT\>\"", "        ", "->", " ", "22"}], ",", "\n", "  ", 
       RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "5"}], ",", "\n", "  ", 
       
       RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.6"}], ",", "\n", 
       "  ", 
       RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", " ", "0.04", ",", " ", "0.02"}], "}"}]}]}], "\n",
       "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", "2."}]}], " ", "reference", " ", "calculation", " ", 
     "with", " ", "the", " ", "scalar", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"SuitabilityFunc", " ", "--"}], "--"}], "--"}], "--"}], 
      "--"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"valsScalar", " ", "=", " ", 
     RowBox[{"MapThread", "[", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"SuitabilityFunc", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", "params"}], "]"}], " ", 
        "&"}], ",", "\n", "  ", 
       RowBox[{"{", 
        RowBox[{"Tmat", ",", " ", "Rmat"}], "}"}], ",", "\n", "  ", "2"}], 
      "                          ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "map", " ", "at", " ", "depth", " ", "2", " ", "to", " ", "keep", " ", 
        "matrix", " ", "shape"}], " ", "*)"}], "\n", "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", "3."}]}], " ", "compiled", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"calculation", " ", "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"valsCompiled", " ", "=", " ", 
     RowBox[{"SuitabilityArrayC", "[", "\n", "  ", 
      RowBox[{"Tmat", ",", " ", "Rmat", ",", "\n", "  ", 
       RowBox[{"params", "[", "\"\<optT\>\"", "]"}], ",", " ", 
       RowBox[{"params", "[", "\"\<respBreadth\>\"", "]"}], ",", " ", 
       RowBox[{"params", "[", "\"\<Rhalf\>\"", "]"}], ",", "\n", "  ", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", " ", "4."}]}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"compare", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
               "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}],
        "--"}], "--"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"diff", " ", "=", " ", 
     RowBox[{"valsScalar", " ", "-", " ", "valsCompiled"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"minDiff", ",", " ", "maxDiff"}], "}"}], " ", "=", " ", 
    RowBox[{"Through", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Min", ",", " ", "Max"}], "}"}], "[", 
      RowBox[{"Flatten", "[", "diff", "]"}], "]"}], "]"}]}], "\n", 
   "valsCompiled", "\n", "valsScalar", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "make", " ", "sure", " ", "I", " ", "can", " ", "get", " ", "a", " ", 
      "set", " ", "of", " ", "non"}], "-", 
     RowBox[{"zero", " ", "values", " ", "here"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"nRows", "    ", "=", " ", "3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nPatches", " ", "=", " ", "8"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "  ", 
   RowBox[{"(*", " ", "reproducible", " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Tmat", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"22", ",", " ", "1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"nRows", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], 
   "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"nearer", " ", "optT"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Rmat", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"5", ",", " ", "0.5"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"nRows", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"more", " ", "food"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"params", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<optT\>\"", "        ", "->", " ", "22"}], ",", "\n", "  ", 
       RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "5"}], ",", "\n", "  ", 
       
       RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.6"}], ",", "\n", 
       "  ", 
       RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"0.15", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], 
      "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"gentler", " ", "metabolic", " ", "curve"}], " ", "*)"}], "\n",
       "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"valsScalar", " ", "=", " ", 
     RowBox[{"MapThread", "[", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"SuitabilityFunc", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", "params"}], "]"}], " ", 
        "&"}], ",", "\n", "  ", 
       RowBox[{"{", 
        RowBox[{"Tmat", ",", " ", "Rmat"}], "}"}], ",", "\n", "  ", "2"}], 
      "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"valsCompiled", " ", "=", " ", 
     RowBox[{"SuitabilityArrayC", "[", "\n", "  ", 
      RowBox[{"Tmat", ",", " ", "Rmat", ",", "\n", "  ", 
       RowBox[{"params", "[", "\"\<optT\>\"", "]"}], ",", " ", 
       RowBox[{"params", "[", "\"\<respBreadth\>\"", "]"}], ",", " ", 
       RowBox[{"params", "[", "\"\<Rhalf\>\"", "]"}], ",", "\n", "  ", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Verify", " ", "equality"}], " ", "*)"}], "\n", 
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"valsScalar", " ", "-", " ", "valsCompiled"}], "]"}], "]"}], 
   "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"~", "1.1"}], "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "15"}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Inspect", " ", "suitability", " ", "values"}], " ", "*)"}], "\n", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{"valsScalar", ",", "\n", "  ", 
     RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "  ", 
     RowBox[{
     "PlotLabel", " ", "->", 
      " ", "\"\<Patch suitability (>0 means energetically viable)\>\""}]}], 
    "\n", "]"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.959919531060734*^9, 3.959919542908231*^9}, {
  3.959919573239008*^9, 3.959919596087082*^9}, {3.959919683613215*^9, 
  3.959919695657493*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ed6832f3-4534-4839-8361-738052e5a220"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.959919574813692*^9, 3.959919596390126*^9}, 
   3.9599197018578587`*^9, 3.959926598164049*^9, 3.9599269058650417`*^9, 
   3.959927572340918*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"79bc2eb2-b063-4f80-8864-e2c48ccfc075"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.959919574813692*^9, 3.959919596390126*^9}, 
   3.9599197018578587`*^9, 3.959926598164049*^9, 3.9599269058650417`*^9, 
   3.959927572341695*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"36f3efba-f377-4eee-8897-fe778deb4333"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.959919574813692*^9, 3.959919596390126*^9}, 
   3.9599197018578587`*^9, 3.959926598164049*^9, 3.9599269058650417`*^9, 
   3.9599275723423367`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0a4001e6-52ca-4e3f-a7ab-bcb1e8e6d3c1"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.959919574813692*^9, 3.959919596390126*^9}, 
   3.9599197018578587`*^9, 3.959926598164049*^9, 3.9599269058650417`*^9, 
   3.959927572342835*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"a45aa2a9-4d16-4894-800e-063cf16522fc"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxdkFtIUwEAhk8IZquViVoPhWnqQ06rQcUS+WMbmox5aZGO0jQVC0y7DUWd
i1ScNc20vAWVoCQ5bSswndlowbzgUkMTch3PcdWcO2cOCYlm2QXpoR9+Pr6X
/+EPPldwIseLIIg/9Vnnobr2oaHtLCKns6ttcgoBpKj2m/YKJD9WfN5ksrAY
BcsFHAopvtlt4qeXIGws0Y/qlkB+lTV2lM3CZWgIz9UAkUeS5Hc3LyHkvWCc
NluhIrtY9alUHL/vSyi1TmxrtcdOvKRhENy8vXCnBOFee/PPJLoQnfZ8a2Eu
C3VD6YSnxAFO6q3uEL0L1n0HT9YXf0R5dOUeb20Gmnhxw/doJxSrbmXLRRse
x4tWn+w0gPgbN+hi/544+sO6E0RCalRggI5FY1ZZZRPXiUfGtk5Fug2b+h7m
VgS6MKzZKDd1k2go1bG96efRZJutSDMzmOucoyztFLa8gKm+5hoWlNLva2EM
XukuiEaaP6GKpx8ejzFD4qcIan3thHedaWqAnkdCZiHv6HU9GDIv1pjjwrGU
wCy5LwlO/4MgW142hvgSQX4GA/tVoSax+TMGKFnw9I634PP311h+78fLl1VS
MY0wRWjtmKYIXMU7S5KRRbL0Z/+G03MoVyodob15MPBaqj1nWYz6iWSLpAOH
n417IiQUBt27VNYyFvlWMrhFtgiVNKRKW0z/++d/dnALVGk2BsKYVrV9yo6e
3eKVtZkZjHYxbp8bDC4XcRLFEV8w1pE84pBOgpgPIv1TluDg99mpA1aoo7iD
C5NJ+AV+wBfv
   "], {{0, 0}, {8, 3}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}, {{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Patch suitability (>0 means energetically viable)\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{{3.959919574813692*^9, 3.959919596390126*^9}, 
   3.9599197018578587`*^9, 3.959926598164049*^9, 3.9599269058650417`*^9, 
   3.9599275723902082`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"3e054498-2553-456e-860d-945026c0166c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s do a quick test run of the whole thing:", \
"Subsection",
 CellChangeTimes->{{3.95992049559404*^9, 
  3.9599205027088537`*^9}},ExpressionUUID->"851b7b31-d43b-4d73-9d3a-\
804df4e33ab8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "SimulateTransmissionDataset", "]"}], " ", "=", 
    "               ", 
    RowBox[{"(*", " ", 
     RowBox[{"<", 
      RowBox[{"\[LongDash]", " ", 
       RowBox[{"must", " ", "run"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", " ", 
      RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "Automatic"}]}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"nReps", "     ", "=", " ", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nPatches", "  ", "=", " ", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalS", "    ", "=", " ", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"varRList", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", " ", "0.5", ",", " ", "0.8", ",", " ", "1"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"varTList", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.1", ",", " ", "1", ",", " ", "1.5", ",", " ", "3", ",", " ", "5"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanRList", " ", "=", " ", 
   RowBox[{"{", "0.8", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanTList", " ", "=", " ", 
   RowBox[{"{", "22", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"suitParams", " ", "=", " ", 
   RowBox[{"<|", "\n", "  ", 
    RowBox[{
     RowBox[{"\"\<optT\>\"", "        ", "->", " ", "25"}], ",", "\n", "  ", 
     RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "150"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.5"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], "\n", 
    "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"epsF", "      ", "=", " ", "0.3"}], ";"}], "\n"}], "\n", 
 RowBox[{"tidy", " ", "=", " ", 
  RowBox[{"SimulateTransmissionDataset", "[", "\n", "  ", 
   RowBox[{
   "nReps", ",", " ", "nPatches", ",", " ", "totalS", ",", "\n", "  ", 
    "varRList", ",", " ", "varTList", ",", " ", "meanRList", ",", " ", 
    "meanTList", ",", "\n", "  ", "suitParams", ",", " ", "epsF", ",", "\n", 
    "  ", 
    RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", "\n", 
    "  ", 
    RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "256"}]}], "\n", "]"}], 
  " "}]}], "Code",
 CellChangeTimes->{{3.959920505430827*^9, 3.95992050584895*^9}, {
   3.95992372729452*^9, 3.959923727782062*^9}, {3.9599248515544167`*^9, 
   3.959924851967347*^9}, {3.959926622595345*^9, 3.959926623612589*^9}, 
   3.959926783687591*^9, {3.959927252835916*^9, 3.959927256896763*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"78eb40d1-a73a-45a0-abbf-4cb2f54c8ede"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "varT" -> 0.1, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030111457727993698`, "phiSD" -> 0.00008451421832883641|>, <|
       "varT" -> 0.1, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03011727223059823, "phiSD" -> 0.00009038971240523865|>, <|
       "varT" -> 0.1, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03011067095629977, "phiSD" -> 0.00008767609812057732|>, <|
       "varT" -> 0.1, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030116579085582733`, "phiSD" -> 0.00008750591985739994|>, <|
       "varT" -> 1, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030115839170436212`, "phiSD" -> 0.00008512381304213429|>, <|
       "varT" -> 1, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030116113172239594`, "phiSD" -> 0.00008852857484073853|>, <|
       "varT" -> 1, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030117625009830586`, "phiSD" -> 0.00009051044802777018|>, <|
       "varT" -> 1, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030116874558958732`, "phiSD" -> 0.00009011938526623689|>, <|
       "varT" -> 1.5, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030117657637299233`, "phiSD" -> 0.00008876865304382942|>, <|
       "varT" -> 1.5, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030117811887315174`, "phiSD" -> 0.00009078347356271537|>, <|
       "varT" -> 1.5, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030113231493769963`, "phiSD" -> 0.0000844486717846674|>, <|
       "varT" -> 1.5, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.0301164328897105, "phiSD" -> 0.00008796509287546618|>, <|
       "varT" -> 3, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03012000634390161, "phiSD" -> 0.00008879335788466838|>, <|
       "varT" -> 3, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03011700820548173, "phiSD" -> 0.00008957030737071534|>, <|
       "varT" -> 3, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030119480334661917`, "phiSD" -> 0.00008960673972814672|>, <|
       "varT" -> 3, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030115321392457584`, "phiSD" -> 0.00008829390762311175|>, <|
       "varT" -> 5, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030117427572110906`, "phiSD" -> 0.00008539666018547171|>, <|
       "varT" -> 5, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.030119429598207834`, "phiSD" -> 0.0000917758558722107|>, <|
       "varT" -> 5, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03011760029818676, "phiSD" -> 0.00008834377669435223|>, <|
       "varT" -> 5, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        0.03011291321449059, "phiSD" -> 0.00008712671963958888|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 20], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 20], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 20, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varT", 
                  Style[
                  "varT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varR", 
                  Style[
                  "varR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanT", 
                  Style[
                  "meanT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanR", 
                  Style[
                  "meanR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiMean", 
                  Style[
                  "phiMean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiMean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiMean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiSD", 
                  Style[
                  "phiSD", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiSD"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiSD"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301115"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000845142"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301173"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000903897"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301107"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000876761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301166"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000875059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000851238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301161"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000885286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000905104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000901194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000887687"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000907835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000844487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301164"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000879651"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.03012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000887934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.030117"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000895703"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000896067"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301153"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000882939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301174"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000853967"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000917759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000883438"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0301129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000871267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       409.79200000000003`, {276.9113464355469, 282.6432800292969}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      409.79200000000003`, {276.9113464355469, 282.6432800292969}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.959920511943184*^9, 3.959923733622822*^9, 3.959924857388179*^9, {
   3.959926609901071*^9, 3.9599266277384777`*^9}, 3.959926790141242*^9, 
   3.959926913314476*^9, 3.95992725784715*^9, 3.9599275784434423`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"69bdcfce-194f-46f8-8af8-719342601d37"]
}, Open  ]],

Cell["\<\
This is weird -- the values of the phiMean are all the same??? \
\>", "Text",
 CellChangeTimes->{{3.959920521202463*^9, 
  3.959920533056303*^9}},ExpressionUUID->"0a9d81c6-1535-48a1-aa13-\
46264a60aaa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now, I want to look at a single set of parameters to see if things really \
make sense here\
\>", "Subsection",
 CellChangeTimes->{{3.9599200026174097`*^9, 
  3.959920016544883*^9}},ExpressionUUID->"c7756d2f-b5da-4bee-96fb-\
7b0a450afa69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{" ", 
     RowBox[{"pick", " ", "ONE", " ", "combination", " ", "you"}], 
     "\[CloseCurlyQuote]"}], "d", " ", "like", " ", "to", " ", "inspect"}], 
   "                ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"varT", "   ", "=", " ", "0.0001"}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "use"}], " ", "an", " ", "entry", " ", 
     "of", " ", "varTList"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"varR", "   ", "=", " ", "0.2"}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "use"}], " ", "an", " ", "entry", " ", 
     "of", " ", "varRList"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanT", "  ", "=", " ", "27."}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "only", " ", "entry", " ", "in", " ", "your", " ", 
     "meanTList"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanR", "  ", "=", " ", "0.8"}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "only", " ", "entry", " ", "in", " ", "your", " ", 
     "meanRList"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"nPatches", " ", "=", " ", "20000"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nReps", "     ", "=", " ", "1000"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"totalS", "    ", "=", " ", "20"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"suitParams", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<optT\>\"", "        ", "->", " ", "21"}], ",", "\n", "  ", 
       RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "21"}], ",", "\n", "  ", 
       RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.5"}], ",", "\n", 
       "  ", 
       RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], 
      "\n", "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"epsF", "      ", "=", " ", "0.3"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"1", " ", "\[CenterDot]", " ", "simulate"}], " ", "one", " ", 
     "landscape"}], "                                ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Tvec", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"meanT", ",", " ", "varT"}], "]"}], ",", "\n", "  ", 
       "nPatches"}], "                           ", 
      RowBox[{"(*", " ", 
       RowBox[{"20", "\:202f000", " ", "cells"}], " ", "*)"}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Rvec", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"meanR", ",", " ", "varR"}], "]"}], ",", "\n", "  ", 
       "nPatches"}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "SuitabilityArrayC", " ", "expects", " ", "2", "\:2011D", " ", 
      "matrices"}], ";", " ", 
     RowBox[{"wrap", " ", "in", " ", 
      RowBox[{"{", "\[Ellipsis]", "}"}], " ", "so", " ", "we", "\n", "   ", 
      "get", " ", "a", " ", "1", "\[Times]", "nPatches", " ", "row", " ", 
      "and", " ", "unwrap", " ", "at", " ", "the", " ", 
      RowBox[{"end", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"rawSuit", " ", "=", " ", 
     RowBox[{"First", " ", "@", " ", 
      RowBox[{"SuitabilityArrayC", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"{", "Tvec", "}"}], ",", " ", 
        RowBox[{"{", "Rvec", "}"}], ",", "\n", "  ", 
        RowBox[{"suitParams", "[", "\"\<optT\>\"", "]"}], ",", " ", 
        RowBox[{"suitParams", "[", "\"\<respBreadth\>\"", "]"}], ",", " ", 
        RowBox[{"suitParams", "[", "\"\<Rhalf\>\"", "]"}], ",", "\n", "  ", 
        RowBox[{"Sequence", " ", "@@", " ", 
         RowBox[{"suitParams", "[", "\"\<mParams\>\"", "]"}]}]}], "\n", 
       "]"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"w", " ", "=", " ", 
     RowBox[{"rawSuit", "/", 
      RowBox[{"Total", "[", "rawSuit", "]"}]}]}], ";"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{"weights", " ", "sum", " ", "to", " ", "1"}], " ", "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"2", " ", "\[CenterDot]", " ", "quick"}], " ", "sanity", " ", 
     "checks"}], "                                   ", "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MinMax", "[", "w", "]"}], ",", " ", 
     RowBox[{"Total", "[", "w", "]"}]}], "}"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"should", " ", "be", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "something"}], "}"}], " ", "and", " ", "1"}], 
    " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"3", " ", "\[CenterDot]", " ", "visualise"}], 
    "                                              ", "*)"}], "\n", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\n", "  ", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"Tvec", ",", "\n", "    ", "50", ",", "\n", "    ", 
        RowBox[{"Frame", "        ", "->", " ", "True"}], ",", "\n", "    ", 
        RowBox[{
        "PlotLabel", "    ", "->", 
         " ", "\"\<Temperature distribution (\[Degree]C)\>\""}], ",", "\n", 
        "    ", 
        RowBox[{"ChartStyle", "   ", "->", " ", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], ",", "\n",
         "    ", 
        RowBox[{"ImageSize", "    ", "->", " ", "Medium"}]}], "\n", "  ", 
       "]"}], ",", "\n", "  ", 
      RowBox[{"Histogram", "[", 
       RowBox[{"Rvec", ",", "\n", "    ", "50", ",", "\n", "    ", 
        RowBox[{"Frame", "        ", "->", " ", "True"}], ",", "\n", "    ", 
        RowBox[{
        "PlotLabel", "    ", "->", " ", "\"\<Resource distribution (R)\>\""}],
         ",", "\n", "    ", 
        RowBox[{"ChartStyle", "   ", "->", " ", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], ",", "\n",
         "    ", 
        RowBox[{"ImageSize", "    ", "->", " ", "Medium"}]}], "\n", "  ", 
       "]"}], ",", "\n", "  ", 
      RowBox[{"Histogram", "[", 
       RowBox[{"w", ",", "\n", "    ", "50", ",", "\n", "    ", 
        RowBox[{"Frame", "        ", "->", " ", "True"}], ",", "\n", "    ", 
        RowBox[{
        "PlotLabel", "    ", "->", 
         " ", "\"\<Normalised patch weight w_i\>\""}], ",", "\n", "    ", 
        RowBox[{"ChartStyle", "   ", "->", " ", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}], ",", "\n",
         "    ", 
        RowBox[{"ImageSize", "    ", "->", " ", "Medium"}]}], "\n", "  ", 
       "]"}]}], "\n", "}"}], "]"}], "\n"}]}]], "Code",
 CellChangeTimes->{{3.959920019653327*^9, 3.959920041912696*^9}, {
   3.959920181230784*^9, 3.9599201830182467`*^9}, {3.959920235959694*^9, 
   3.959920270329546*^9}, {3.959923567713326*^9, 3.959923575268176*^9}, {
   3.959923634868475*^9, 3.959923635310583*^9}, {3.9599238329595346`*^9, 
   3.959923845053526*^9}, 3.959924297819063*^9, {3.9599273646995564`*^9, 
   3.959927380039076*^9}, {3.959927509102672*^9, 3.9599275100993843`*^9}, {
   3.959927553497883*^9, 3.959927553623838*^9}, {3.9599276747898197`*^9, 
   3.9599277083864193`*^9}, {3.959927778966022*^9, 3.9599278232882442`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"94280909-69ba-4919-bc37-1757649b02d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.0027375230777307207`"}], "}"}], ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.959927522537795*^9, 3.959927554507532*^9, 3.959927601866284*^9, {
   3.9599276947519827`*^9, 3.959927709388934*^9}, {3.9599277802535048`*^9, 
   3.959927823906001*^9}},
 CellLabel->
  "Out[202]=",ExpressionUUID->"7c8bf265-0ad6-4267-a6d9-b9fe90f5cfe5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[
        0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[
         0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{26.99962, 0}, {26.99964, 1.},
          RoundingRadius->0], RectangleBox[{26.99964, 0}, {26.99966, 5.},
          RoundingRadius->0], RectangleBox[{26.99966, 0}, {26.99968, 6.},
          RoundingRadius->0], RectangleBox[{26.99968, 0}, {26.9997, 11.},
          RoundingRadius->0], RectangleBox[{26.9997, 0}, {26.99972, 25.},
          RoundingRadius->0], RectangleBox[{26.99972, 0}, {26.99974, 37.},
          RoundingRadius->0], RectangleBox[{26.99974, 0}, {26.99976, 54.},
          RoundingRadius->0], RectangleBox[{26.99976, 0}, {26.99978, 123.},
          RoundingRadius->0], RectangleBox[{26.99978, 0}, {26.9998, 151.},
          RoundingRadius->0], RectangleBox[{26.9998, 0}, {26.99982, 265.},
          RoundingRadius->0], RectangleBox[{26.99982, 0}, {26.99984, 362.},
          RoundingRadius->0], RectangleBox[{26.99984, 0}, {26.99986, 522.},
          RoundingRadius->0], RectangleBox[{26.99986, 0}, {26.99988, 685.},
          RoundingRadius->0], RectangleBox[{26.99988, 0}, {26.9999, 862.},
          RoundingRadius->0], RectangleBox[{26.9999, 0}, {26.99992, 1054.},
          RoundingRadius->0], RectangleBox[{26.99992, 0}, {26.99994, 1293.},
          RoundingRadius->0], RectangleBox[{26.99994, 0}, {26.99996, 1405.},
          RoundingRadius->0], RectangleBox[{26.99996, 0}, {26.99998, 1489.},
          RoundingRadius->0], RectangleBox[{26.99998, 0}, {27., 1606.},
          RoundingRadius->0], RectangleBox[{27., 0}, {27.00002, 1579.},
          RoundingRadius->0], RectangleBox[{27.00002, 0}, {27.00004, 1531.},
          RoundingRadius->0], RectangleBox[{27.00004, 0}, {27.00006, 1381.},
          RoundingRadius->0], RectangleBox[{27.00006, 0}, {27.00008, 1197.},
          RoundingRadius->0], RectangleBox[{27.00008, 0}, {27.0001, 1152.},
          RoundingRadius->0], RectangleBox[{27.0001, 0}, {27.00012, 924.},
          RoundingRadius->0], RectangleBox[{27.00012, 0}, {27.00014, 697.},
          RoundingRadius->0], RectangleBox[{27.00014, 0}, {27.00016, 492.},
          RoundingRadius->0], RectangleBox[{27.00016, 0}, {27.00018, 359.},
          RoundingRadius->0], RectangleBox[{27.00018, 0}, {27.0002, 275.},
          RoundingRadius->0], RectangleBox[{27.0002, 0}, {27.00022, 155.},
          RoundingRadius->0], RectangleBox[{27.00022, 0}, {27.00024, 116.},
          RoundingRadius->0], RectangleBox[{27.00024, 0}, {27.00026, 80.},
          RoundingRadius->0], RectangleBox[{27.00026, 0}, {27.00028, 56.},
          RoundingRadius->0], RectangleBox[{27.00028, 0}, {27.0003, 19.},
          RoundingRadius->0], RectangleBox[{27.0003, 0}, {27.00032, 13.},
          RoundingRadius->0], RectangleBox[{27.00032, 0}, {27.00034, 8.},
          RoundingRadius->0], RectangleBox[{27.00034, 0}, {27.00036, 4.},
          RoundingRadius->0], RectangleBox[{27.00036, 0}, {27.00038, 2.},
          RoundingRadius->0], RectangleBox[{27.00038, 0}, {27.0004, 1.},
          RoundingRadius->0], RectangleBox[{27.0004, 0}, {27.00042, 3.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{26.999604, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
       "\"Temperature distribution (\[Degree]C)\"", TraditionalForm],
      PlotRange->{{26.99962, 27.00042}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[{Opacity[0.119], 
        Thickness[Small]}], {}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[{Opacity[0.119], 
         Thickness[Small]}], RectangleBox[{0.06, 0}, {0.08, 1.},
          RoundingRadius->0], RectangleBox[{0.08, 0}, {0.1, 2.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.12, 3.},
          RoundingRadius->0], RectangleBox[{0.12, 0}, {0.14, 5.},
          RoundingRadius->0], RectangleBox[{0.14, 0}, {0.16, 2.},
          RoundingRadius->0], RectangleBox[{0.16, 0}, {0.18, 3.},
          RoundingRadius->0], RectangleBox[{0.18, 0}, {0.2, 11.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.22, 13.},
          RoundingRadius->0], RectangleBox[{0.22, 0}, {0.24, 11.},
          RoundingRadius->0], RectangleBox[{0.24, 0}, {0.26, 20.},
          RoundingRadius->0], RectangleBox[{0.26, 0}, {0.28, 25.},
          RoundingRadius->0], RectangleBox[{0.28, 0}, {0.3, 31.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.32, 40.},
          RoundingRadius->0], RectangleBox[{0.32, 0}, {0.34, 56.},
          RoundingRadius->0], RectangleBox[{0.34, 0}, {0.36, 48.},
          RoundingRadius->0], RectangleBox[{0.36, 0}, {0.38, 102.},
          RoundingRadius->0], RectangleBox[{0.38, 0}, {0.4, 102.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.42, 120.},
          RoundingRadius->0], RectangleBox[{0.42, 0}, {0.44, 170.},
          RoundingRadius->0], RectangleBox[{0.44, 0}, {0.46, 196.},
          RoundingRadius->0], RectangleBox[{0.46, 0}, {0.48, 208.},
          RoundingRadius->0], RectangleBox[{0.48, 0}, {0.5, 247.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.52, 272.},
          RoundingRadius->0], RectangleBox[{0.52, 0}, {0.54, 321.},
          RoundingRadius->0], RectangleBox[{0.54, 0}, {0.56, 362.},
          RoundingRadius->0], RectangleBox[{0.56, 0}, {0.58, 409.},
          RoundingRadius->0], RectangleBox[{0.58, 0}, {0.6, 510.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.62, 528.},
          RoundingRadius->0], RectangleBox[{0.62, 0}, {0.64, 565.},
          RoundingRadius->0], RectangleBox[{0.64, 0}, {0.66, 613.},
          RoundingRadius->0], RectangleBox[{0.66, 0}, {0.68, 681.},
          RoundingRadius->0], RectangleBox[{0.68, 0}, {0.7, 635.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.72, 695.},
          RoundingRadius->0], RectangleBox[{0.72, 0}, {0.74, 750.},
          RoundingRadius->0], RectangleBox[{0.74, 0}, {0.76, 718.},
          RoundingRadius->0], RectangleBox[{0.76, 0}, {0.78, 791.},
          RoundingRadius->0], RectangleBox[{0.78, 0}, {0.8, 823.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.82, 799.},
          RoundingRadius->0], RectangleBox[{0.82, 0}, {0.84, 792.},
          RoundingRadius->0], RectangleBox[{0.84, 0}, {0.86, 769.},
          RoundingRadius->0], RectangleBox[{0.86, 0}, {0.88, 796.},
          RoundingRadius->0], RectangleBox[{0.88, 0}, {0.9, 716.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {0.92, 634.},
          RoundingRadius->0], RectangleBox[{0.92, 0}, {0.94, 684.},
          RoundingRadius->0], RectangleBox[{0.94, 0}, {0.96, 591.},
          RoundingRadius->0], RectangleBox[{0.96, 0}, {0.98, 520.},
          RoundingRadius->0], RectangleBox[{0.98, 0}, {1., 479.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.02, 481.},
          RoundingRadius->0], RectangleBox[{1.02, 0}, {1.04, 403.},
          RoundingRadius->0], RectangleBox[{1.04, 0}, {1.06, 368.},
          RoundingRadius->0], RectangleBox[{1.06, 0}, {1.08, 301.},
          RoundingRadius->0], RectangleBox[{1.08, 0}, {1.1, 286.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.12, 225.},
          RoundingRadius->0], RectangleBox[{1.12, 0}, {1.14, 213.},
          RoundingRadius->0], RectangleBox[{1.14, 0}, {1.16, 184.},
          RoundingRadius->0], RectangleBox[{1.16, 0}, {1.18, 128.},
          RoundingRadius->0], RectangleBox[{1.18, 0}, {1.2, 103.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.22, 104.},
          RoundingRadius->0], RectangleBox[{1.22, 0}, {1.24, 62.},
          RoundingRadius->0], RectangleBox[{1.24, 0}, {1.26, 63.},
          RoundingRadius->0], RectangleBox[{1.26, 0}, {1.28, 43.},
          RoundingRadius->0], RectangleBox[{1.28, 0}, {1.3, 42.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.32, 40.},
          RoundingRadius->0], RectangleBox[{1.32, 0}, {1.34, 28.},
          RoundingRadius->0], RectangleBox[{1.34, 0}, {1.36, 13.},
          RoundingRadius->0], RectangleBox[{1.36, 0}, {1.38, 10.},
          RoundingRadius->0], RectangleBox[{1.38, 0}, {1.4, 8.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.42, 5.},
          RoundingRadius->0], RectangleBox[{1.42, 0}, {1.44, 4.},
          RoundingRadius->0], RectangleBox[{1.44, 0}, {1.46, 5.},
          RoundingRadius->0], RectangleBox[{1.46, 0}, {1.48, 3.},
          RoundingRadius->0], RectangleBox[{1.48, 0}, {1.5, 2.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.52, 3.},
          RoundingRadius->0], RectangleBox[{1.52, 0}, {1.54, 1.},
          RoundingRadius->0], RectangleBox[{1.54, 0}, {1.56, 1.},
          RoundingRadius->0], RectangleBox[{1.56, 0}, {1.58, 1.},
          RoundingRadius->0], RectangleBox[{1.66, 0}, {1.68, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.0276, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox["\"Resource distribution (R)\"", TraditionalForm],
      PlotRange->{{0.06, 1.68}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[{Opacity[0.301], 
        Thickness[Small]}], {}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[{Opacity[0.301], 
         Thickness[Small]}], RectangleBox[{0., 0}, {0.00005, 18252.},
          RoundingRadius->0], RectangleBox[{0.00005, 0}, {0.0001, 124.},
          RoundingRadius->0], RectangleBox[{0.0001, 0}, {0.00015, 118.},
          RoundingRadius->0], RectangleBox[{0.00015, 0}, {0.0002, 113.},
          RoundingRadius->0], RectangleBox[{0.0002, 0}, {0.00025, 128.},
          RoundingRadius->0], RectangleBox[{0.00025, 0}, {0.0003, 89.},
          RoundingRadius->0], RectangleBox[{0.0003, 0}, {0.00035, 92.},
          RoundingRadius->0], RectangleBox[{0.00035, 0}, {0.0004, 103.},
          RoundingRadius->0], RectangleBox[{0.0004, 0}, {0.00045, 86.},
          RoundingRadius->0], RectangleBox[{0.00045, 0}, {0.0005, 81.},
          RoundingRadius->0], RectangleBox[{0.0005, 0}, {0.00055, 78.},
          RoundingRadius->0], RectangleBox[{0.00055, 0}, {0.0006, 76.},
          RoundingRadius->0], RectangleBox[{0.0006, 0}, {0.00065, 57.},
          RoundingRadius->0], RectangleBox[{0.00065, 0}, {0.0007, 61.},
          RoundingRadius->0], RectangleBox[{0.0007, 0}, {0.00075, 50.},
          RoundingRadius->0], RectangleBox[{0.00075, 0}, {0.0008, 45.},
          RoundingRadius->0], RectangleBox[{0.0008, 0}, {0.00085, 52.},
          RoundingRadius->0], RectangleBox[{0.00085, 0}, {0.0009, 47.},
          RoundingRadius->0], RectangleBox[{0.0009, 0}, {0.00095, 42.},
          RoundingRadius->0], RectangleBox[{0.00095, 0}, {0.001, 23.},
          RoundingRadius->0], RectangleBox[{0.001, 0}, {0.00105, 34.},
          RoundingRadius->0], RectangleBox[{0.00105, 0}, {0.0011, 31.},
          RoundingRadius->0], RectangleBox[{0.0011, 0}, {0.00115, 27.},
          RoundingRadius->0], RectangleBox[{0.00115, 0}, {0.0012, 15.},
          RoundingRadius->0], RectangleBox[{0.0012, 0}, {0.00125, 27.},
          RoundingRadius->0], RectangleBox[{0.00125, 0}, {0.0013, 16.},
          RoundingRadius->0], RectangleBox[{0.0013, 0}, {0.00135, 29.},
          RoundingRadius->0], RectangleBox[{0.00135, 0}, {0.0014, 18.},
          RoundingRadius->0], RectangleBox[{0.0014, 0}, {0.00145, 14.},
          RoundingRadius->0], RectangleBox[{0.00145, 0}, {0.0015, 15.},
          RoundingRadius->0], RectangleBox[{0.0015, 0}, {0.00155, 5.},
          RoundingRadius->0], RectangleBox[{0.00155, 0}, {0.0016, 9.},
          RoundingRadius->0], RectangleBox[{0.0016, 0}, {0.00165, 6.},
          RoundingRadius->0], RectangleBox[{0.00165, 0}, {0.0017, 5.},
          RoundingRadius->0], RectangleBox[{0.0017, 0}, {0.00175, 5.},
          RoundingRadius->0], RectangleBox[{0.00175, 0}, {0.0018, 2.},
          RoundingRadius->0], RectangleBox[{0.0018, 0}, {0.00185, 4.},
          RoundingRadius->0], RectangleBox[{0.00185, 0}, {0.0019, 3.},
          RoundingRadius->0], RectangleBox[{0.0019, 0}, {0.00195, 1.},
          RoundingRadius->0], RectangleBox[{0.00195, 0}, {0.002, 5.},
          RoundingRadius->0], RectangleBox[{0.002, 0}, {0.00205, 1.},
          RoundingRadius->0], RectangleBox[{0.00205, 0}, {0.0021, 2.},
          RoundingRadius->0], RectangleBox[{0.0021, 0}, {0.00215, 2.},
          RoundingRadius->0], RectangleBox[{0.00215, 0}, {0.0022, 2.},
          RoundingRadius->0], RectangleBox[{0.0022, 0}, {0.00225, 1.},
          RoundingRadius->0], RectangleBox[{0.0023, 0}, {0.00235, 2.},
          RoundingRadius->0], RectangleBox[{0.0024, 0}, {0.00245, 1.},
          RoundingRadius->0], RectangleBox[{0.0027, 0}, {0.00275, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.000054999999999999995`, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox["\"Normalised patch weight w_i\"", TraditionalForm],
      PlotRange->{{0., 0.00275}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.959927522537795*^9, 3.959927554507532*^9, 3.959927601866284*^9, {
   3.9599276947519827`*^9, 3.959927709388934*^9}, {3.9599277802535048`*^9, 
   3.959927823993162*^9}},
 CellLabel->
  "Out[203]=",ExpressionUUID->"c7a355ed-e401-4c4a-bf82-cfd3ca6d152e"]
}, Open  ]],

Cell["\<\
This looks reasonable! Note though that if the R distribution goes negative \
(i.e. if the var is too large or whatever, then the distribution of w\
\[CloseCurlyQuote]s start to look really goofy. \
\>", "Text",
 CellChangeTimes->{{3.959920422921126*^9, 
  3.9599204609093*^9}},ExpressionUUID->"2d5a761a-a5ff-4b67-a51d-df53d6d76297"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"w", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"w", "*", "0.3"}]}], ")"}], "^", "2000000"}]}], ")"}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.9599211060958147`*^9, 3.9599212745534773`*^9}, {
   3.959923512674828*^9, 3.959923516222658*^9}, {3.959923589686801*^9, 
   3.959923605888392*^9}, 3.9599236526098547`*^9, {3.95992386700865*^9, 
   3.959923873859578*^9}, {3.959926653150908*^9, 3.959926679843367*^9}},
 CellLabel->
  "In[522]:=",ExpressionUUID->"4b1bd029-5a30-49b2-aaf2-379188d3baf3"],

Cell[BoxData["0.9999941930979578`"], "Output",
 CellChangeTimes->{
  3.959921132239593*^9, {3.959921167810186*^9, 3.959921274930509*^9}, 
   3.959923517057789*^9, 3.9599235951468973`*^9, {3.959923640934636*^9, 
   3.9599236529964323`*^9}, 3.9599237469208*^9, {3.9599238597328367`*^9, 
   3.959923876855694*^9}, {3.9599266579168177`*^9, 3.9599266803751717`*^9}, 
   3.959929915868129*^9},
 CellLabel->
  "Out[522]=",ExpressionUUID->"a60187fd-1bf6-4c79-888c-bbeefae67fe1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now check why it looks like all the phi\[CloseCurlyQuote]s are the \
same:", "Subsection",
 CellChangeTimes->{{3.959920469231456*^9, 3.959920474967042*^9}, {
  3.9599205471249733`*^9, 
  3.9599205505153923`*^9}},ExpressionUUID->"70a62d0f-26a0-44fe-b783-\
c34d7db0e6f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"0", " ", "\[CenterDot]", "  ", "Convenience"}], " ", 
      "aliases"}], " ", "&"}], " ", "constants"}], 
   "                                ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"nPatches", "  ", "=", " ", "20000"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"totalS", "    ", "=", " ", "2000"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"varRList", "  ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", " ", "0.5", ",", " ", "0.8", ",", " ", "1"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"varTList", "  ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", " ", "1", ",", " ", "1.5", ",", " ", "3", ",", " ", "5"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"meanRList", " ", "=", " ", 
     RowBox[{"{", "0.8", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"meanTList", " ", "=", " ", 
     RowBox[{"{", "22", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"suitParams", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{"\"\<optT\>\"", "        ", "->", " ", "25"}], ",", "\n", "  ", 
       RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "150"}], ",", "\n", 
       "  ", 
       RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.5"}], ",", "\n", 
       "  ", 
       RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"0.15", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], 
      "\n", "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"epsF", "      ", "=", " ", "1"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"nRepsTest", "     ", "=", " ", "500"}], ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"keep", " ", "it", " ", "interactive"}], ";", " ", 
     RowBox[{"raise", " ", "if", " ", "you", " ", "like"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"batchSizeTest", " ", "=", " ", "256"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"meanT", "   ", "=", " ", 
     RowBox[{"First", "[", "meanTList", "]"}]}], ";"}], "    ", 
   RowBox[{"(*", " ", "22", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanR", "   ", "=", " ", 
     RowBox[{"First", "[", "meanRList", "]"}]}], ";"}], "    ", 
   RowBox[{"(*", " ", "0.8", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"varR", "    ", "=", " ", "0.2"}], ";"}], "                 ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "choose", " ", "one", " ", "R\:2011variance", " ", "to", " ", "hold", " ",
      "constant"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"optT", ",", " ", "respB", ",", " ", "Rh"}], "}"}], " ", "=", 
     " ", 
     RowBox[{"Lookup", "[", 
      RowBox[{"suitParams", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<optT\>\"", ",", " ", "\"\<respBreadth\>\"", ",", 
         " ", "\"\<Rhalf\>\""}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ma", ",", " ", "mb", ",", " ", "mc"}], "}"}], "      ", "=", 
     " ", 
     RowBox[{"suitParams", "[", "\"\<mParams\>\"", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"1", " ", "\[CenterDot]", "  ", "Helper"}], " ", "that", " ", 
     "returns", " ", "the", " ", "FULL", " ", "\[CurlyPhi]", " ", "list", " ",
      "for", " ", "a", " ", "given", " ", "varT"}], "           ", "*)"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "phiSamples", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"phiSamples", "[", 
     RowBox[{"varT_", "?", "NumericQ"}], "]"}], " ", ":=", "\n", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"repsLeft", " ", "=", " ", "nRepsTest"}], ",", " ", 
        RowBox[{"\[CurlyPhi]list", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "b", ",", " ", "Tmat", ",", " ", 
        "Rmat", ",", " ", "raw", ",", " ", "w", ",", " ", "epsMat"}], "}"}], ",",
       "\n", "  ", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"repsLeft", " ", ">", " ", "0"}], ",", "\n", "   ", 
         RowBox[{
          RowBox[{"b", "    ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"batchSizeTest", ",", " ", "repsLeft"}], "]"}]}], ";", 
          "\n", "   ", 
          RowBox[{"Tmat", " ", "=", " ", 
           RowBox[{"Developer`ToPackedArray", "@", "\n", "           ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanT", ",", " ", "varT"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}]}], ";", 
          "\n", "   ", 
          RowBox[{"Rmat", " ", "=", " ", 
           RowBox[{"Developer`ToPackedArray", "@", "\n", "           ", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"meanR", ",", " ", "varR"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}]}], ";", 
          "\n", "\n", "   ", 
          RowBox[{"raw", "  ", "=", " ", 
           RowBox[{"SuitabilityArrayC", "[", "\n", "     ", 
            RowBox[{
            "Tmat", ",", " ", "Rmat", ",", " ", "optT", ",", " ", "respB", ",",
              " ", "Rh", ",", " ", "ma", ",", " ", "mb", ",", " ", "mc"}], 
            "\n", "   ", "]"}]}], ";", "\n", "   ", 
          RowBox[{"w", "    ", "=", " ", 
           RowBox[{"raw", "/", 
            RowBox[{"Total", "[", 
             RowBox[{"raw", ",", " ", 
              RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "       ", 
          RowBox[{"(*", " ", 
           RowBox[{"each", " ", "row", " ", "sums", " ", "to", " ", "1"}], 
           " ", "*)"}], "\n", "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "epsF", "]"}], ",", "\n", "     ", 
            RowBox[{"\[CurlyPhi]list", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"\[CurlyPhi]list", ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"CompiledPhiConst", "[", 
                  RowBox[{"#", ",", " ", "epsF", ",", " ", "totalS"}], "]"}], 
                 " ", "&"}], " ", "/@", " ", "w"}]}], "]"}]}], ",", "\n", 
            "     ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"epsMat", " ", "=", " ", 
               RowBox[{"epsF", "[", "Tmat", "]"}]}], ";", "\n", "       ", 
              RowBox[{"\[CurlyPhi]list", " ", "=", " ", 
               RowBox[{"Join", "[", "\n", "         ", 
                RowBox[{"\[CurlyPhi]list", ",", "\n", "         ", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"CompiledPhiVec", "[", 
                    RowBox[{"#1", ",", " ", "#2", ",", " ", "totalS"}], "]"}],
                     " ", "&"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"w", ",", " ", "epsMat"}], "}"}]}], "]"}]}], "\n",
                 "       ", "]"}]}]}], "\n", "     ", ")"}]}], "\n", "   ", 
           "]"}], ";", "\n", "\n", "   ", 
          RowBox[{"repsLeft", " ", "-=", " ", "b"}], ";"}]}], "\n", "  ", 
        "]"}], ";", "\n", "  ", "\[CurlyPhi]list"}]}], "\n", "]"}]}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"2", " ", "\[CenterDot]", "  ", "Generate"}], " ", "\[CurlyPhi]",
      " ", "samples", " ", "for", " ", "two", " ", "varT", " ", "values"}], 
    "                         ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"phi0p1", " ", "=", " ", 
     RowBox[{"phiSamples", "[", "0.1", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"phi5", "   ", "=", " ", 
     RowBox[{"phiSamples", "[", "5", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"quick", " ", 
     RowBox[{"sanity", ":", " ", 
      RowBox[{
      "means", " ", "should", " ", "differ", " ", "if", " ", "variance", " ", 
       "matters"}]}]}], " ", "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mean", "[", "phi0p1", "]"}], ",", " ", 
     RowBox[{"Mean", "[", "phi5", "]"}]}], "}"}], "      ", 
   RowBox[{"(*", " ", "compare", " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"3", " ", "\[CenterDot]", "  ", "Visual"}], " ", "comparison"}], 
    "                                              ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"GraphicsRow", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"{", "\n", "    ", 
      RowBox[{
       RowBox[{"Histogram", "[", 
        RowBox[{"phi0p1", ",", " ", "40", ",", "\n", "      ", 
         RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "      ", 
         RowBox[{
         "PlotLabel", " ", "->", 
          " ", "\"\<\[CurlyPhi] distribution (varT = 0.1)\>\""}], ",", "\n", 
         "      ", 
         RowBox[{"ChartStyle", " ", "->", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], ",", 
         "\n", "      ", 
         RowBox[{"ImageSize", " ", "->", " ", "300"}]}], "\n", "    ", "]"}], 
       ",", "\n", "    ", 
       RowBox[{"Histogram", "[", 
        RowBox[{"phi5", ",", " ", "40", ",", "\n", "      ", 
         RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", "      ", 
         RowBox[{
         "PlotLabel", " ", "->", 
          " ", "\"\<\[CurlyPhi] distribution (varT = 5)\>\""}], ",", "\n", 
         "      ", 
         RowBox[{"ChartStyle", " ", "->", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}], ",", 
         "\n", "      ", 
         RowBox[{"ImageSize", " ", "->", " ", "300"}]}], "\n", "    ", 
        "]"}]}], "\n", "  ", "}"}], ",", "\n", "  ", 
     RowBox[{"Spacings", " ", "->", " ", "2"}]}], "\n", "]"}], 
   "\n"}]}]], "Code",
 CellChangeTimes->{{3.959920553191218*^9, 3.959920619123931*^9}, {
  3.959920915645359*^9, 3.9599209158086*^9}, {3.95992096442918*^9, 
  3.959920965568418*^9}, {3.9599267001109743`*^9, 3.959926752332037*^9}},
 CellLabel->
  "In[790]:=",ExpressionUUID->"2a87a312-dc87-436c-a77b-fb188d7d3c27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.09964121493016233`", ",", "0.11678784508457495`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9599206407920923`*^9, 3.959920917316702*^9, 3.959921090199464*^9, {
   3.9599266893296432`*^9, 3.959926748488975*^9}, 3.959927029364257*^9},
 CellLabel->
  "Out[809]=",ExpressionUUID->"400cdc45-ef3d-4f7b-abfa-c327f63e2777"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[0.413], 
        Thickness[Small]}], {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[0.413], 
         Thickness[Small]}], RectangleBox[{0.09945, 0}, {0.09946, 3.},
          RoundingRadius->0], RectangleBox[{0.09946, 0}, {0.09947, 1.},
          RoundingRadius->0], RectangleBox[{0.09947, 0}, {0.09948, 2.},
          RoundingRadius->0], RectangleBox[{0.09948, 0}, {0.09949, 1.},
          RoundingRadius->0], RectangleBox[{0.09949, 0}, {0.0995, 1.},
          RoundingRadius->0], RectangleBox[{0.0995, 0}, {0.09951, 10.},
          RoundingRadius->0], RectangleBox[{0.09951, 0}, {0.09952, 6.},
          RoundingRadius->0], RectangleBox[{0.09952, 0}, {0.09953, 7.},
          RoundingRadius->0], RectangleBox[{0.09953, 0}, {0.09954, 6.},
          RoundingRadius->0], RectangleBox[{0.09954, 0}, {0.09955, 10.},
          RoundingRadius->0], RectangleBox[{0.09955, 0}, {0.09956, 17.},
          RoundingRadius->0], RectangleBox[{0.09956, 0}, {0.09957, 20.},
          RoundingRadius->0], RectangleBox[{0.09957, 0}, {0.09958, 18.},
          RoundingRadius->0], RectangleBox[{0.09958, 0}, {0.09959, 17.},
          RoundingRadius->0], RectangleBox[{0.09959, 0}, {0.0996, 24.},
          RoundingRadius->0], RectangleBox[{0.0996, 0}, {0.09961, 26.},
          RoundingRadius->0], RectangleBox[{0.09961, 0}, {0.09962, 18.},
          RoundingRadius->0], RectangleBox[{0.09962, 0}, {0.09963, 27.},
          RoundingRadius->0], RectangleBox[{0.09963, 0}, {0.09964, 34.},
          RoundingRadius->0], RectangleBox[{0.09964, 0}, {0.09965, 33.},
          RoundingRadius->0], RectangleBox[{0.09965, 0}, {0.09966, 27.},
          RoundingRadius->0], RectangleBox[{0.09966, 0}, {0.09967, 23.},
          RoundingRadius->0], RectangleBox[{0.09967, 0}, {0.09968, 36.},
          RoundingRadius->0], RectangleBox[{0.09968, 0}, {0.09969, 14.},
          RoundingRadius->0], RectangleBox[{0.09969, 0}, {0.0997, 13.},
          RoundingRadius->0], RectangleBox[{0.0997, 0}, {0.09971, 15.},
          RoundingRadius->0], RectangleBox[{0.09971, 0}, {0.09972, 18.},
          RoundingRadius->0], RectangleBox[{0.09972, 0}, {0.09973, 18.},
          RoundingRadius->0], RectangleBox[{0.09973, 0}, {0.09974, 13.},
          RoundingRadius->0], RectangleBox[{0.09974, 0}, {0.09975, 7.},
          RoundingRadius->0], RectangleBox[{0.09975, 0}, {0.09976, 7.},
          RoundingRadius->0], RectangleBox[{0.09976, 0}, {0.09977, 8.},
          RoundingRadius->0], RectangleBox[{0.09977, 0}, {0.09978, 7.},
          RoundingRadius->0], RectangleBox[{0.09978, 0}, {0.09979, 2.},
          RoundingRadius->0], RectangleBox[{0.09979, 0}, {0.0998, 7.},
          RoundingRadius->0], RectangleBox[{0.0998, 0}, {0.09981, 1.},
          RoundingRadius->0], RectangleBox[{0.09981, 0}, {0.09982, 1.},
          RoundingRadius->0], RectangleBox[{0.09982, 0}, {0.09983, 1.},
          RoundingRadius->0], RectangleBox[{0.09983, 0}, {0.09984, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.0994422, 0},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.123046874996428`, 1.5000000000035243`}, {15.171875, 
       0.5}},
      ImageSize->300,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
       "\"\[CurlyPhi] distribution (varT = 0.1)\"", TraditionalForm],
      PlotRange->{{0.09945, 0.09984}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {151., -107.53719251540245}, 
     ImageScaled[{0.5, 0.5}], {300., 204.83274764838563},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{
       {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[{Opacity[0.42], 
        Thickness[Small]}], {}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[{Opacity[0.42], 
         Thickness[Small]}], RectangleBox[{0.11585, 0}, {0.1159, 1.},
          RoundingRadius->0], RectangleBox[{0.116, 0}, {0.11605, 1.},
          RoundingRadius->0], RectangleBox[{0.1161, 0}, {0.11615, 1.},
          RoundingRadius->0], RectangleBox[{0.11615, 0}, {0.1162, 1.},
          RoundingRadius->0], RectangleBox[{0.1162, 0}, {0.11625, 5.},
          RoundingRadius->0], RectangleBox[{0.11625, 0}, {0.1163, 3.},
          RoundingRadius->0], RectangleBox[{0.1163, 0}, {0.11635, 7.},
          RoundingRadius->0], RectangleBox[{0.11635, 0}, {0.1164, 8.},
          RoundingRadius->0], RectangleBox[{0.1164, 0}, {0.11645, 12.},
          RoundingRadius->0], RectangleBox[{0.11645, 0}, {0.1165, 13.},
          RoundingRadius->0], RectangleBox[{0.1165, 0}, {0.11655, 27.},
          RoundingRadius->0], RectangleBox[{0.11655, 0}, {0.1166, 28.},
          RoundingRadius->0], RectangleBox[{0.1166, 0}, {0.11665, 42.},
          RoundingRadius->0], RectangleBox[{0.11665, 0}, {0.1167, 42.},
          RoundingRadius->0], RectangleBox[{0.1167, 0}, {0.11675, 34.},
          RoundingRadius->0], RectangleBox[{0.11675, 0}, {0.1168, 41.},
          RoundingRadius->0], RectangleBox[{0.1168, 0}, {0.11685, 43.},
          RoundingRadius->0], RectangleBox[{0.11685, 0}, {0.1169, 38.},
          RoundingRadius->0], RectangleBox[{0.1169, 0}, {0.11695, 25.},
          RoundingRadius->0], RectangleBox[{0.11695, 0}, {0.117, 32.},
          RoundingRadius->0], RectangleBox[{0.117, 0}, {0.11705, 22.},
          RoundingRadius->0], RectangleBox[{0.11705, 0}, {0.1171, 19.},
          RoundingRadius->0], RectangleBox[{0.1171, 0}, {0.11715, 20.},
          RoundingRadius->0], RectangleBox[{0.11715, 0}, {0.1172, 13.},
          RoundingRadius->0], RectangleBox[{0.1172, 0}, {0.11725, 6.},
          RoundingRadius->0], RectangleBox[{0.11725, 0}, {0.1173, 4.},
          RoundingRadius->0], RectangleBox[{0.1173, 0}, {0.11735, 3.},
          RoundingRadius->0], RectangleBox[{0.11735, 0}, {0.1174, 2.},
          RoundingRadius->0], RectangleBox[{0.1174, 0}, {0.11745, 4.},
          RoundingRadius->0], RectangleBox[{0.11745, 0}, {0.1175, 1.},
          RoundingRadius->0], RectangleBox[{0.1176, 0}, {0.11765, 1.},
          RoundingRadius->0], RectangleBox[{0.1177, 0}, {0.11775, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.115812, 0},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.123046874999302`, 1.5000000000006821`}, {15.171875, 
       0.5}},
      ImageSize->300,
      Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
        "ChartDefaultStyle" -> {
          RGBColor[1., 0.725, 0], 
          RGBColor[0.24, 0.6, 0.8], 
          RGBColor[0.455, 0.7, 0.21], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          RGBColor[0.578, 0.51, 0.85], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          RGBColor[0.4, 0.64, 1.], 
          RGBColor[1., 0.75, 0.], 
          RGBColor[0.8, 0.4, 0.76], 
          RGBColor[0.637, 0.65, 0.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
        "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
        RGBColor[1., 0.79375, 0.25], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->FormBox[
       "\"\[CurlyPhi] distribution (varT = 5)\"", TraditionalForm],
      PlotRange->{{0.11585, 0.11775}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {453., -107.53719251540245}, 
     ImageScaled[{0.5, 0.5}], {300., 204.83274764838563},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{604., 215.0743850308049},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRange->{{0, 604.}, {-215.0743850308049, 0}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{
  3.9599206407920923`*^9, 3.959920917316702*^9, 3.959921090199464*^9, {
   3.9599266893296432`*^9, 3.959926748488975*^9}, 3.95992702946537*^9},
 CellLabel->
  "Out[810]=",ExpressionUUID->"c5416641-4a32-409b-8193-894360e78e0c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{"reproducible", " ", "micro\:2011tests"}], " ", "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"shared", " ", "toy", " ", "parameters"}], " ", "\[LongDash]", 
     " ", 
     RowBox[{"tweak", " ", "freely", " ", "while", " ", "exploring"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"params", " ", "=", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<optT\>\"", "->", "22"}], ",", 
       RowBox[{"\"\<respBreadth\>\"", "->", "25"}], ",", 
       RowBox[{"\"\<Rhalf\>\"", "->", "0.6"}], ",", "\n", "           ", 
       RowBox[{"\"\<mParams\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.05", ",", "0.02"}], "}"}]}]}], "|>"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"constEps", " ", "=", " ", "0.3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"epsFunc", "  ", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{"T", ",", " ", 
       RowBox[{"0.2", " ", "+", " ", 
        RowBox[{"0.01", " ", "T"}]}]}], "]"}]}], ";"}], "      ", 
   RowBox[{"(*", " ", 
    RowBox[{"any", " ", "T\:2011dependent", " ", "rule"}], " ", "*)"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"nPatchesTest", " ", "=", " ", "30"}], ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{"tiny", " ", "landscape", " ", "for", " ", "cross\:2011checks"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"batchSize", "    ", "=", " ", "16"}], ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "tiny", " ", "batch", " ", "for", " ", "speed", " ", "in", " ", 
     "notebook"}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{3.959790490540493*^9, 3.959792991065008*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"c1eec959-d63e-4ede-9a3b-b7d1d7c20460"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SuitabilityFunc", "[", 
  RowBox[{"22.", ",", " ", "0.8", ",", " ", "params"}], "]"}]], "Code",
 CellChangeTimes->{3.959790507790289*^9, 3.959793001199234*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"9127999a-6d9b-4f6f-b8be-91be79b25616"],

Cell[BoxData["0.40122027023124984`"], "Output",
 CellChangeTimes->{3.959791769496294*^9, 3.9597929016504183`*^9, 
  3.959793001895596*^9, 3.959793279414503*^9, 3.959916192436018*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"0432d64f-f4f5-4817-ba23-28a1a803c6ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp1", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "24"}], "}"}], ",", " ", "10"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sup1", "  ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.2"}], "}"}], ",", " ", "10"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"raw1", "  ", "=", " ", 
    RowBox[{
     RowBox[{"SuitabilityArrayC", "[", "\n", "          ", 
      RowBox[{
       RowBox[{"{", "temp1", "}"}], ",", " ", 
       RowBox[{"{", "sup1", "}"}], ",", "              ", 
       RowBox[{"(*", " ", 
        RowBox[{"wrap", " ", "in", " ", 
         RowBox[{"{", " ", "}"}], " ", "to", " ", "get", " ", "1", "\[Times]",
          "10", " ", "matrix"}], " ", "*)"}], "\n", "          ", 
       RowBox[{"params", "[", "\"\<optT\>\"", "]"}], ",", " ", 
       RowBox[{"params", "[", "\"\<respBreadth\>\"", "]"}], ",", "\n", 
       "          ", 
       RowBox[{"params", "[", "\"\<Rhalf\>\"", "]"}], ",", " ", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"raw1", ",", " ", 
    RowBox[{"Total", "[", "raw1", "]"}]}], "}"}], "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"params", " ", "=", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<optT\>\"", "->", "22"}], ",", 
      RowBox[{"\"\<respBreadth\>\"", "->", "25"}], ",", 
      RowBox[{"\"\<Rhalf\>\"", "->", "0.6"}], ",", "\n", "          ", 
      RowBox[{"\"\<mParams\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.05", ",", "0.02"}], "}"}]}]}], "|>"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", "2"}], ";", " ", 
  RowBox[{"nPatches", " ", "=", " ", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"temps", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "24"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"supp", "  ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.4", ",", "1.2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b", ",", " ", "nPatches"}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"raw", " ", "=", " ", 
    RowBox[{"SuitabilityArrayC", "[", "\n", "        ", 
     RowBox[{"temps", ",", " ", "supp", ",", "\n", "        ", 
      RowBox[{"params", "[", "\"\<optT\>\"", "]"}], ",", " ", 
      RowBox[{"params", "[", "\"\<respBreadth\>\"", "]"}], ",", "\n", 
      "        ", 
      RowBox[{"params", "[", "\"\<Rhalf\>\"", "]"}], ",", "\n", "        ", 
      RowBox[{"Sequence", " ", "@@", " ", 
       RowBox[{"params", "[", "\"\<mParams\>\"", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Dimensions", "[", "raw", "]"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"->", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "10"}], "}"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"raw", ",", " ", 
    RowBox[{"{", "2", "}"}]}], "]"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "positive", " ", "numbers"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"wMat", " ", "=", " ", 
   RowBox[{"raw", "/", 
    RowBox[{"Total", "[", 
     RowBox[{"raw", ",", " ", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"wMat", ",", " ", 
    RowBox[{"{", "2", "}"}]}], "]"}], "         ", 
  RowBox[{"(*", " ", 
   RowBox[{"{", 
    RowBox[{"1.", ",", " ", "1."}], "}"}], " ", "*)"}]}], "\n", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"wMat", ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "False"}]}], "]"}]}], "Code",
 CellChangeTimes->{
  3.9597906795498877`*^9, {3.959793106654932*^9, 3.959793125419986*^9}, 
   3.95979333005329*^9, {3.959793509781001*^9, 3.959793537638468*^9}, {
   3.959793764182514*^9, 3.9597937790069838`*^9}, {3.959916211325049*^9, 
   3.9599162126538067`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"b7519a46-5b27-4466-b886-4f793dc5510a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.4248130053788919`", ",", "0.31774779947884635`", ",", 
     "0.3446339167057243`", ",", "0.4759239071924447`", ",", 
     "0.35113091794265133`", ",", "0.26536290836425636`", ",", 
     "0.48197793190211147`", ",", "0.38218767555713434`", ",", 
     "0.4749985390494799`", ",", "0.3886687677288707`"}], "}"}], ",", 
   "3.907445369300411`"}], "}"}]], "Output",
 CellChangeTimes->{3.9599162134694767`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"ba8e1c47-bb89-49bc-a651-5242b662524f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.9599162134706573`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"ce70a8a1-c1e0-4497-8472-b5245c59d62b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.8701209817109796`", ",", "3.4215079074682766`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.959916213471346*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"f41897e7-7419-4d3f-9b53-1b656820edba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.959916213472144*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"d0b76ba4-4e28-4646-97a4-e51fec137988"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJwB9QEK/iFib1JlAwAAAAIAAAAKAAAAAwAAAN3QU0tGS+8/ki+H/1VI3D93
9BdN4f5RP49kXF7NEu0/UxzXM1qk6D8rJ/s46wfbP6d4EaC3POw/DKqZ0SH8
5D8ROGu2SkvJP+Fu5Wh/ZO4/WooI4dQS3j/Y4JL5z3xkPwAAAAAAAPA/4XoU
rkfh2j8AAAAAAAAAAFH6HAiFwuw/UQz0QURF5z8bTlffDaPVP7Z/yimB/+0/
04s7w3rb3j+TRyPjBYRpPyBukYXQ8Ow/X68RT7gP6D8GFu0qVL/YP3PDFcJa
Yuw/vlRYdrmg5T9ViexdBFrOPzeQ0egwS+0/myibe1mQ6T+eeE1+of3eP3zR
3BxRyus/IPe2OtgH4z9PeC3HztezPx7YdqyU5+s/NYkV1hyC4T+DZBWAUxl6
Pzm7qcZ1kOs/N4LTZdQK4j9st97s/SyRP3CTxOexp+0/psgl4OXt6j/ppsdd
BQzjP5wRJnNxDe0/B3WLgjJe4D+c1bxsnMhyP2E91mkQQew/LDzZ4Dgp4T9+
2hvuEd93PzeMTKYAoew/vHV9X+vJ4D8fyMFkrXt1P8Sb8Psajew/kJ0f761b
5j80ol58UwzSP37dOpfp0+4/b7UVe3o13T9PtDKui+FdPzDMEzQAB+w/0Kmz
IDkR5D+o4FJBcBPCP/Cf6zE=
   "], {{0, 0}, {10, 2}}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{{{1.5, 
       FormBox["1", TraditionalForm]}, {0.5, 
       FormBox["2", TraditionalForm]}}, {{1.5, 
       FormBox["1", TraditionalForm]}, {0.5, 
       FormBox["2", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.959916213506241*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"52d694fb-0889-4a8c-a9b2-34f7934c0ce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", " ", "=", " ", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phiConst", " ", "=", " ", 
   RowBox[{"CompiledPhiConst", "[", 
    RowBox[{
     RowBox[{"wMat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "0.3", ",", " ", "S"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phiVec", "   ", "=", " ", 
   RowBox[{"CompiledPhiVec", "[", 
    RowBox[{
     RowBox[{"wMat", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"0.2", " ", "+", " ", 
      RowBox[{"0.01", "*", 
       RowBox[{"temps", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", "S"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"phiConst", ",", " ", "phiVec"}], "}"}], "   "}]}], "Code",
 CellChangeTimes->{{3.959793851864053*^9, 3.959793878735879*^9}, {
  3.959793979614109*^9, 3.959793981151168*^9}, {3.959794013943796*^9, 
  3.959794016935616*^9}, {3.959916221626627*^9, 3.9599162228249407`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"b11a7e3c-dd0c-48c7-859b-115e1ef14a92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.529601052949934`", ",", "5.679112033141111`"}], "}"}]], "Output",\

 CellChangeTimes->{3.959793920854534*^9, 3.95979398302075*^9, 
  3.959794019243802*^9, 3.959916223817999*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"69bfe96c-1ba8-42b6-b18c-e14cb5b9c279"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanSD", " ", "=", " ", 
   RowBox[{"ComputePhiBatch", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"nPatches", "   ", "=", " ", "30"}], ",", "\n", "  ", 
     RowBox[{"meanT", "      ", "=", " ", "22"}], ",", "   ", 
     RowBox[{"varT", " ", "=", " ", "0.4"}], ",", "\n", "  ", 
     RowBox[{"meanR", "      ", "=", " ", "0.8"}], ",", "  ", 
     RowBox[{"varR", " ", "=", " ", "0.2"}], ",", "\n", "  ", "params", ",", 
     "                 ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{" ", 
        RowBox[{"Association", " ", "you"}], "\[CloseCurlyQuote]"}], "ve", " ",
        "been", " ", "using"}], " ", "*)"}], "\n", "  ", 
     RowBox[{"totalS", "     ", "=", " ", "20"}], ",", "\n", "  ", 
     RowBox[{"epsF", "       ", "=", " ", "0.3"}], ",", "        ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"constant", " ", "\[CurlyEpsilon]"}], ";", " ", 
       RowBox[{"try", " ", "epsFunc", " ", "next"}]}], " ", "*)"}], "\n", 
     "  ", 
     RowBox[{"nReps", "      ", "=", " ", "100"}], ",", "\n", "  ", 
     RowBox[{"batchSize", "  ", "=", " ", "25"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"brute\:2011force", " ", "cross\:2011check"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"phiList", " ", "=", " ", 
    RowBox[{"Table", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"T", " ", "=", " ", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"21", ",", "23"}], "}"}], ",", " ", "nPatches"}], 
            "]"}]}], ",", "\n", "        ", 
          RowBox[{"R", " ", "=", " ", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "1.0"}], "}"}], ",", " ", "nPatches"}], 
            "]"}]}]}], "}"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{"w", "   ", "=", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"SuitabilityFunc", "[", 
              RowBox[{"#1", ",", "#2", ",", "params"}], "]"}], "&"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"T", ",", "R"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
         RowBox[{"w", "   ", "=", " ", 
          RowBox[{"w", "/", 
           RowBox[{"Total", "[", "w", "]"}]}]}], ";", "\n", "    ", 
         RowBox[{"CompiledPhiConst", "[", "\n", "      ", 
          RowBox[{
           RowBox[{"Developer`ToPackedArray", " ", "@", " ", "w"}], ",", "\n",
            "      ", "0.3", ",", "\n", "      ", "20"}], "]"}]}]}], "\n", 
       "  ", "]"}], ",", "\n", "  ", 
      RowBox[{"{", "100", "}"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"{", 
  RowBox[{"meanSD", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mean", "@", "phiList"}], ",", " ", 
     RowBox[{"StandardDeviation", "@", "phiList"}]}], "}"}]}], "}"}]}], "Code",\

 CellChangeTimes->{
  3.959793881540348*^9, 3.959794566906889*^9, {3.959795141962862*^9, 
   3.959795143219681*^9}, 3.959795365272168*^9, {3.9599142920837727`*^9, 
   3.959914299270268*^9}, {3.959916232015956*^9, 3.959916234189227*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"c7181e73-e41e-434e-8c4e-c3811dacddec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "SimulateTransmissionDataset", "]"}], " ", "=", 
    "               ", 
    RowBox[{"(*", " ", 
     RowBox[{"<", 
      RowBox[{"\[LongDash]", " ", 
       RowBox[{"must", " ", "run"}]}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", " ", 
      RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "Automatic"}]}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"nReps", "     ", "=", " ", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nPatches", "  ", "=", " ", "20000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalS", "    ", "=", " ", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"varRList", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", " ", "0.5", ",", " ", "0.8", ",", " ", "1"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"varTList", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.1", ",", " ", "1", ",", " ", "1.5", ",", " ", "3", ",", " ", "5"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanRList", " ", "=", " ", 
   RowBox[{"{", "0.8", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanTList", " ", "=", " ", 
   RowBox[{"{", "22", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"suitParams", " ", "=", " ", 
   RowBox[{"<|", "\n", "  ", 
    RowBox[{
     RowBox[{"\"\<optT\>\"", "        ", "->", " ", "25"}], ",", "\n", "  ", 
     RowBox[{"\"\<respBreadth\>\"", " ", "->", " ", "150"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<Rhalf\>\"", "       ", "->", " ", "0.5"}], ",", "\n", "  ", 
     
     RowBox[{"\"\<mParams\>\"", "     ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", " ", "0.03", ",", " ", "0.01"}], "}"}]}]}], "\n", 
    "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"epsF", "      ", "=", " ", "0.3"}], ";"}], "\n"}], "\n", 
 RowBox[{"tidy", " ", "=", " ", 
  RowBox[{"SimulateTransmissionDataset", "[", "\n", "  ", 
   RowBox[{
   "nReps", ",", " ", "nPatches", ",", " ", "totalS", ",", "\n", "  ", 
    "varRList", ",", " ", "varTList", ",", " ", "meanRList", ",", " ", 
    "meanTList", ",", "\n", "  ", "suitParams", ",", " ", "epsF", ",", "\n", 
    "  ", 
    RowBox[{"\"\<Format\>\"", " ", "->", " ", "\"\<Dataset\>\""}], ",", "\n", 
    "  ", 
    RowBox[{"\"\<BatchSize\>\"", " ", "->", " ", "256"}]}], "\n", "]"}], 
  " "}]}], "Code",
 CellChangeTimes->{
  3.959789576579267*^9, {3.959789876338279*^9, 3.959789890866064*^9}, {
   3.959789951967101*^9, 3.959789953702641*^9}, {3.959790016586055*^9, 
   3.959790018920986*^9}, {3.959790205564749*^9, 3.959790291022698*^9}, {
   3.9599189414551487`*^9, 3.959918951599593*^9}, 3.9599197576469584`*^9},
 CellLabel->
  "In[299]:=",ExpressionUUID->"1d79dd06-79fd-4a8a-8e1f-f39e27a50a0e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "varT" -> 0.1, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589512757291, "phiSD" -> 0.00007049907495041556|>, <|
       "varT" -> 0.1, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90588722377715, "phiSD" -> 0.00007021546742371667|>, <|
       "varT" -> 0.1, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90588830506674, "phiSD" -> 0.00006898264056129353|>, <|
       "varT" -> 0.1, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90588939395413, "phiSD" -> 0.00007307303831513477|>, <|
       "varT" -> 1, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905894435391104`, "phiSD" -> 0.00007038732094737424|>, <|
       "varT" -> 1, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905895800104375`, "phiSD" -> 0.00006791692070237441|>, <|
       "varT" -> 1, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905890861803805`, "phiSD" -> 0.0000697619157129836|>, <|
       "varT" -> 1, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589379862734, "phiSD" -> 0.00007022511244209681|>, <|
       "varT" -> 1.5, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589199725427, "phiSD" -> 0.00006841539543119998|>, <|
       "varT" -> 1.5, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905894316175974`, "phiSD" -> 0.000073837225790195|>, <|
       "varT" -> 1.5, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905888750998656`, "phiSD" -> 0.00007360226003504663|>, <|
       "varT" -> 1.5, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589296228527, "phiSD" -> 0.00007066109965380128|>, <|
       "varT" -> 3, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.905893905862406`, "phiSD" -> 0.00007411996016066739|>, <|
       "varT" -> 3, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90588816267417, "phiSD" -> 0.00007179482802151481|>, <|
       "varT" -> 3, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.9058940354233, "phiSD" -> 0.00007077743180784614|>, <|
       "varT" -> 3, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589681458073, "phiSD" -> 0.00007177278911768911|>, <|
       "varT" -> 5, "varR" -> 0.1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589059815358, "phiSD" -> 0.00007350285088809829|>, <|
       "varT" -> 5, "varR" -> 0.5, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589473854905, "phiSD" -> 0.00007031175646330871|>, <|
       "varT" -> 5, "varR" -> 0.8, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589221895902, "phiSD" -> 0.00006942619017531467|>, <|
       "varT" -> 5, "varR" -> 1, "meanT" -> 22, "meanR" -> 0.8, "phiMean" -> 
        59.90589363432118, "phiSD" -> 0.00007132029543511404|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 20], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "varT"} -> 1, {All, "varR"} -> 
        1, {All, "meanT"} -> 1, {All, "meanR"} -> 1, {All, "phiMean"} -> 
        1, {All, "phiSD"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "varT" -> TypeSystem`PackageScope`AtomShape[60], "varR" -> 
            TypeSystem`PackageScope`AtomShape[60], "meanT" -> 
            TypeSystem`PackageScope`AtomShape[34], "meanR" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiMean" -> 
            TypeSystem`PackageScope`AtomShape[60], "phiSD" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "varT", "varR", "meanT", "meanR", "phiMean", "phiSD"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 20], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 20, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varT", 
                  Style[
                  "varT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["varR", 
                  Style[
                  "varR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "varR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "varR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanT", 
                  Style[
                  "meanT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["meanR", 
                  Style[
                  "meanR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "meanR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "meanR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiMean", 
                  Style[
                  "phiMean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiMean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiMean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phiSD", 
                  Style[
                  "phiSD", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phiSD"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phiSD"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000704991"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000702155"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000689826"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000073073"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000703873"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000679169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000697619"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000702251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000684154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000738372"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000736023"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000706611"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00007412"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000717948"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000707774"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000717728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000735029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000703118"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000694262"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["varT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["varR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["meanT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["meanR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.9059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["phiMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000713203"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["phiSD"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       409.79200000000003`, {276.9113464355469, 282.6432800292969}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      409.79200000000003`, {276.9113464355469, 282.6432800292969}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.959789641790022*^9, 3.959789954459074*^9, 
  3.959790183176963*^9, 3.959918920935452*^9, 3.959918958773974*^9, 
  3.959919763771379*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"df897538-77ff-4471-b483-c9f1cfcc69a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1419, 866},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ba552914-0b13-4788-a3b8-0c0bd77179c6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 168, 3, 96, "Title",ExpressionUUID->"36f1bb4e-9c88-4efb-8377-b37277ff2bb8"],
Cell[747, 27, 276, 6, 33, "Text",ExpressionUUID->"f725785b-a392-4e08-9396-3a7472c248f0"],
Cell[CellGroupData[{
Cell[1048, 37, 165, 3, 66, "Section",ExpressionUUID->"4f7a19e6-388d-4acb-9c8e-a248e161d63d"],
Cell[1216, 42, 530, 9, 55, "Text",ExpressionUUID->"5f2387a8-d553-4262-b27d-17f92eab6c5d"],
Cell[1749, 53, 67754, 1728, 5782, "Code",ExpressionUUID->"81cd86a3-97f4-4b9a-a1a0-7f28129cf482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69540, 1786, 219, 4, 66, "Section",ExpressionUUID->"e364d198-26f9-4974-a6b5-7c919445b56d"],
Cell[69762, 1792, 314, 7, 33, "Text",ExpressionUUID->"4914750d-0031-42ef-be3a-c259209f7515"],
Cell[CellGroupData[{
Cell[70101, 1803, 3793, 90, 597, "Code",ExpressionUUID->"117abd78-274e-4ab7-a873-984aa0f5581c"],
Cell[73897, 1895, 899, 18, 26, "Message",ExpressionUUID->"c3d37f77-f612-4cbd-bfa9-f256c34759fc"],
Cell[74799, 1915, 899, 18, 26, "Message",ExpressionUUID->"e8609df7-3e0d-481e-949f-e06c93775590"],
Cell[75701, 1935, 899, 18, 26, "Message",ExpressionUUID->"3d66afe6-6fd6-4d5f-af5e-fad2c7c66ebd"],
Cell[76603, 1955, 928, 18, 26, "Message",ExpressionUUID->"35ff0414-f856-46d8-ab95-c579fbc68d9c"],
Cell[77534, 1975, 26925, 533, 1004, "Output",ExpressionUUID->"39d64b91-220f-40bd-a2bf-89cc6468f5ec"],
Cell[104462, 2510, 44721, 846, 150, "Output",ExpressionUUID->"07df748f-bafb-4c30-9a75-95f3469c66f0"]
}, Open  ]],
Cell[149198, 3359, 858, 13, 621, "Input",ExpressionUUID->"bd5dabb4-4fbd-4cc0-9eca-20c7d7b2013f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150093, 3377, 159, 3, 66, "Section",ExpressionUUID->"74a75ecd-28dd-4dbe-ace4-020537f011f5"],
Cell[150255, 3382, 216, 4, 33, "Text",ExpressionUUID->"8a4c6e83-7b57-476e-985d-58b91eac4616"],
Cell[CellGroupData[{
Cell[150496, 3390, 205, 3, 53, "Subsection",ExpressionUUID->"3a76a34e-b437-48c9-854d-98a60252592a"],
Cell[CellGroupData[{
Cell[150726, 3397, 10435, 282, 1389, "Code",ExpressionUUID->"ed6832f3-4534-4839-8361-738052e5a220"],
Cell[161164, 3681, 322, 6, 33, "Output",ExpressionUUID->"79bc2eb2-b063-4f80-8864-e2c48ccfc075"],
Cell[161489, 3689, 736, 18, 33, "Output",ExpressionUUID->"36f3efba-f377-4eee-8897-fe778deb4333"],
Cell[162228, 3709, 690, 18, 33, "Output",ExpressionUUID->"0a4001e6-52ca-4e3f-a7ab-bcb1e8e6d3c1"],
Cell[162921, 3729, 275, 4, 33, "Output",ExpressionUUID->"a45aa2a9-4d16-4894-800e-063cf16522fc"],
Cell[163199, 3735, 2944, 62, 195, "Output",ExpressionUUID->"3e054498-2553-456e-860d-945026c0166c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166192, 3803, 213, 4, 53, "Subsection",ExpressionUUID->"851b7b31-d43b-4d73-9d3a-804df4e33ab8"],
Cell[CellGroupData[{
Cell[166430, 3811, 2749, 69, 503, "Code",ExpressionUUID->"78eb40d1-a73a-45a0-abbf-4cb2f54c8ede"],
Cell[169182, 3882, 95629, 1928, 576, "Output",ExpressionUUID->"69bdcfce-194f-46f8-8af8-719342601d37"]
}, Open  ]],
Cell[264826, 5813, 213, 5, 33, "Text",ExpressionUUID->"0a9d81c6-1535-48a1-aa13-46264a60aaa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265076, 5823, 249, 6, 53, "Subsection",ExpressionUUID->"c7756d2f-b5da-4bee-96fb-7b0a450afa69"],
Cell[CellGroupData[{
Cell[265350, 5833, 11280, 293, 1314, "Code",ExpressionUUID->"94280909-69ba-4919-bc37-1757649b02d6"],
Cell[276633, 6128, 426, 11, 33, "Output",ExpressionUUID->"7c8bf265-0ad6-4267-a6d9-b9fe90f5cfe5"],
Cell[277062, 6141, 20741, 376, 729, "Output",ExpressionUUID->"c7a355ed-e401-4c4a-bf82-cfd3ca6d152e"]
}, Open  ]],
Cell[297818, 6520, 343, 6, 33, "Text",ExpressionUUID->"2d5a761a-a5ff-4b67-a51d-df53d6d76297"],
Cell[CellGroupData[{
Cell[298186, 6530, 622, 15, 51, "Code",ExpressionUUID->"4b1bd029-5a30-49b2-aaf2-379188d3baf3"],
Cell[298811, 6547, 470, 8, 33, "Output",ExpressionUUID->"a60187fd-1bf6-4c79-888c-bbeefae67fe1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299330, 6561, 275, 5, 53, "Subsection",ExpressionUUID->"70a62d0f-26a0-44fe-b783-c34d7db0e6f3"],
Cell[CellGroupData[{
Cell[299630, 6570, 19394, 527, 1729, "Code",ExpressionUUID->"2a87a312-dc87-436c-a77b-fb188d7d3c27"],
Cell[319027, 7099, 362, 8, 33, "Output",ExpressionUUID->"400cdc45-ef3d-4f7b-abfa-c327f63e2777"],
Cell[319392, 7109, 11754, 221, 232, "Output",ExpressionUUID->"c5416641-4a32-409b-8193-894360e78e0c"]
}, Open  ]],
Cell[331161, 7333, 1869, 49, 239, "Code",ExpressionUUID->"c1eec959-d63e-4ede-9a3b-b7d1d7c20460"],
Cell[CellGroupData[{
Cell[333055, 7386, 266, 5, 51, "Code",ExpressionUUID->"9127999a-6d9b-4f6f-b8be-91be79b25616"],
Cell[333324, 7393, 265, 4, 33, "Output",ExpressionUUID->"0432d64f-f4f5-4817-ba23-28a1a803c6ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333626, 7402, 4325, 116, 541, "Code",ExpressionUUID->"b7519a46-5b27-4466-b886-4f793dc5510a"],
Cell[337954, 7520, 564, 13, 53, "Output",ExpressionUUID->"ba8e1c47-bb89-49bc-a651-5242b662524f"],
Cell[338521, 7535, 201, 5, 33, "Output",ExpressionUUID->"ce70a8a1-c1e0-4497-8472-b5245c59d62b"],
Cell[338725, 7542, 237, 6, 33, "Output",ExpressionUUID->"f41897e7-7419-4d3f-9b53-1b656820edba"],
Cell[338965, 7550, 202, 5, 33, "Output",ExpressionUUID->"d0b76ba4-4e28-4646-97a4-e51fec137988"],
Cell[339170, 7557, 2703, 58, 100, "Output",ExpressionUUID->"52d694fb-0889-4a8c-a9b2-34f7934c0ce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341910, 7620, 1043, 27, 107, "Code",ExpressionUUID->"b11a7e3c-dd0c-48c7-859b-115e1ef14a92"],
Cell[342956, 7649, 302, 7, 33, "Output",ExpressionUUID->"69bfe96c-1ba8-42b6-b18c-e14cb5b9c279"]
}, Open  ]],
Cell[343273, 7659, 3333, 79, 522, "Code",ExpressionUUID->"c7181e73-e41e-434e-8c4e-c3811dacddec"],
Cell[CellGroupData[{
Cell[346631, 7742, 2785, 71, 503, "Code",ExpressionUUID->"1d79dd06-79fd-4a8a-8e1f-f39e27a50a0e"],
Cell[349419, 7815, 95462, 1928, 576, "Output",ExpressionUUID->"df897538-77ff-4471-b483-c9f1cfcc69a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

